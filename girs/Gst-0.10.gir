<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.1"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="libxml2" version="2.0"/>
  <package name="gobject-2.0"/>
  <package name="gstreamer-0.10"/>
  <package name="gstreamer-base-0.10"/>
  <namespace name="Gst"
             version="0.10"
             shared-library="libgstbase-0.10.so.0"
             c:prefix="Gst">
    <alias name="ClockID" target="any" c:type="GstClockID"/>
    <alias name="ClockTime" target="uint64" c:type="GstClockTime"/>
    <alias name="ClockTimeDiff" target="int64" c:type="GstClockTimeDiff"/>
    <alias name="TagList" target="Structure" c:type="GstTagList"/>
    <enumeration name="ActivateMode"
                 glib:type-name="GstActivateMode"
                 glib:get-type="gst_activate_mode_get_type"
                 c:type="GstActivateMode">
      <doc xml:whitespace="preserve">The status of a GstPad. After activating a pad, which usually happens when the
parent element goes from READY to PAUSED, the GstActivateMode defines if the
pad operates in push or pull mode.</doc>
      <member name="none"
              value="0"
              c:identifier="GST_ACTIVATE_NONE"
              glib:nick="none"/>
      <member name="push"
              value="1"
              c:identifier="GST_ACTIVATE_PUSH"
              glib:nick="push"/>
      <member name="pull"
              value="2"
              c:identifier="GST_ACTIVATE_PULL"
              glib:nick="pull"/>
    </enumeration>
    <class name="Adapter"
           c:type="GstAdapter"
           parent="GObject.Object"
           glib:type-name="GstAdapter"
           glib:get-type="gst_adapter_get_type"
           glib:type-struct="AdapterClass">
      <doc xml:whitespace="preserve">The opaque #GstAdapter data structure.</doc>
      <constructor name="new" c:identifier="gst_adapter_new">
        <return-value transfer-ownership="full">
          <type name="Adapter" c:type="GstAdapter*"/>
        </return-value>
      </constructor>
      <method name="clear" c:identifier="gst_adapter_clear">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="push" c:identifier="gst_adapter_push">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek" c:identifier="gst_adapter_peek">
        <return-value transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="gst_adapter_copy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="gst_adapter_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flush" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="take" c:identifier="gst_adapter_take">
        <return-value transfer-ownership="full">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="nbytes" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_buffer" c:identifier="gst_adapter_take_buffer">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="nbytes" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="available" c:identifier="gst_adapter_available">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="available_fast" c:identifier="gst_adapter_available_fast">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="prev_timestamp" c:identifier="gst_adapter_prev_timestamp">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
        <parameters>
          <parameter name="distance"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="masked_scan_uint32"
              c:identifier="gst_adapter_masked_scan_uint32">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="pattern" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="masked_scan_uint32_peek"
              c:identifier="gst_adapter_masked_scan_uint32_peek">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="pattern" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="buflist">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="size">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="skip">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="assembled_data">
        <type name="any" c:type="guint8*"/>
      </field>
      <field name="assembled_size">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="assembled_len">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="buflist_end">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="priv">
        <type name="AdapterPrivate" c:type="GstAdapterPrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="2">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="AdapterClass"
            c:type="GstAdapterClass"
            glib:is-gtype-struct-for="Adapter">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="AdapterPrivate" c:type="GstAdapterPrivate">
    </record>
    <record name="AllocTrace" c:type="GstAllocTrace">
      <doc xml:whitespace="preserve">The main tracing object</doc>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="flags" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="live" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="mem_live" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <method name="print" c:identifier="gst_alloc_trace_print">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_flags" c:identifier="gst_alloc_trace_set_flags">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="AllocTraceFlags" c:type="GstAllocTraceFlags"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="AllocTraceFlags"
              glib:type-name="GstAllocTraceFlags"
              glib:get-type="gst_alloc_trace_flags_get_type"
              c:type="GstAllocTraceFlags">
      <doc xml:whitespace="preserve">Flags indicating which tracing feature to enable.</doc>
      <member name="live"
              value="1"
              c:identifier="GST_ALLOC_TRACE_LIVE"
              glib:nick="live"/>
      <member name="mem_live"
              value="2"
              c:identifier="GST_ALLOC_TRACE_MEM_LIVE"
              glib:nick="mem-live"/>
    </bitfield>
    <bitfield name="AssocFlags"
              glib:type-name="GstAssocFlags"
              glib:get-type="gst_assoc_flags_get_type"
              c:type="GstAssocFlags">
      <doc xml:whitespace="preserve">Flags for an association entry.</doc>
      <member name="none"
              value="0"
              c:identifier="GST_ASSOCIATION_FLAG_NONE"
              glib:nick="none"/>
      <member name="key_unit"
              value="1"
              c:identifier="GST_ASSOCIATION_FLAG_KEY_UNIT"
              glib:nick="key-unit"/>
      <member name="delta_unit"
              value="2"
              c:identifier="GST_ASSOCIATION_FLAG_DELTA_UNIT"
              glib:nick="delta-unit"/>
      <member name="last"
              value="256"
              c:identifier="GST_ASSOCIATION_FLAG_LAST"
              glib:nick="last"/>
    </bitfield>
    <constant name="BASE_TRANSFORM_SINK_NAME" value="sink">
      <type name="utf8"/>
    </constant>
    <constant name="BASE_TRANSFORM_SRC_NAME" value="src">
      <type name="utf8"/>
    </constant>
    <constant name="BUFFER_COPY_ALL" value="0">
      <type name="int"/>
    </constant>
    <constant name="BUFFER_OFFSET_NONE" value="-1">
      <type name="int"/>
    </constant>
    <constant name="BUFFER_TRACE_NAME" value="GstBuffer">
      <type name="utf8"/>
    </constant>
    <class name="BaseSink"
           c:type="GstBaseSink"
           parent="Element"
           abstract="1"
           glib:type-name="GstBaseSink"
           glib:get-type="gst_base_sink_get_type"
           glib:type-struct="BaseSinkClass">
      <doc xml:whitespace="preserve">The opaque #GstBaseSink data structure.</doc>
      <virtual-method name="get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="buffer_alloc">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_times">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="end" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="unlock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="preroll">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="render">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="async_play">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
      </virtual-method>
      <virtual-method name="activate_pull">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="active" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fixate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unlock_stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="render_list">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="buffer_list" transfer-ownership="none">
            <type name="BufferList" c:type="GstBufferList*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="do_preroll" c:identifier="gst_base_sink_do_preroll">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="obj" transfer-ownership="none">
            <type name="MiniObject" c:type="GstMiniObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_preroll" c:identifier="gst_base_sink_wait_preroll">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
      </method>
      <method name="set_sync" c:identifier="gst_base_sink_set_sync">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sync" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sync" c:identifier="gst_base_sink_get_sync">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_max_lateness"
              c:identifier="gst_base_sink_set_max_lateness">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="max_lateness" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_max_lateness"
              c:identifier="gst_base_sink_get_max_lateness">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="set_qos_enabled"
              c:identifier="gst_base_sink_set_qos_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_qos_enabled"
              c:identifier="gst_base_sink_is_qos_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_async_enabled"
              c:identifier="gst_base_sink_set_async_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_async_enabled"
              c:identifier="gst_base_sink_is_async_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_ts_offset" c:identifier="gst_base_sink_set_ts_offset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ts_offset" c:identifier="gst_base_sink_get_ts_offset">
        <return-value transfer-ownership="full">
          <type name="ClockTimeDiff" c:type="GstClockTimeDiff"/>
        </return-value>
      </method>
      <method name="get_last_buffer"
              c:identifier="gst_base_sink_get_last_buffer">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </method>
      <method name="set_last_buffer_enabled"
              c:identifier="gst_base_sink_set_last_buffer_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_last_buffer_enabled"
              c:identifier="gst_base_sink_is_last_buffer_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="query_latency" c:identifier="gst_base_sink_query_latency">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="live"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="upstream_live"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="min_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="max_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_latency" c:identifier="gst_base_sink_get_latency">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="set_render_delay"
              c:identifier="gst_base_sink_set_render_delay">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="delay" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_render_delay"
              c:identifier="gst_base_sink_get_render_delay">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="set_blocksize" c:identifier="gst_base_sink_set_blocksize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="blocksize" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blocksize" c:identifier="gst_base_sink_get_blocksize">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="wait_clock" c:identifier="gst_base_sink_wait_clock">
        <return-value transfer-ownership="full">
          <type name="ClockReturn" c:type="GstClockReturn"/>
        </return-value>
        <parameters>
          <parameter name="time" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="jitter" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff*"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_eos" c:identifier="gst_base_sink_wait_eos">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="time" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="jitter" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff*"/>
          </parameter>
        </parameters>
      </method>
      <property name="async" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="blocksize" writable="1" transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="enable-last-buffer"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="last-buffer" transfer-ownership="none">
        <type name="Buffer" c:type="GstBuffer"/>
      </property>
      <property name="max-lateness" writable="1" transfer-ownership="none">
        <type name="int64" c:type="gint64"/>
      </property>
      <property name="preroll-queue-len"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="qos" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="render-delay" writable="1" transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </property>
      <property name="sync" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="ts-offset" writable="1" transfer-ownership="none">
        <type name="int64" c:type="gint64"/>
      </property>
      <field name="element">
        <type name="Element" c:type="GstElement"/>
      </field>
      <field name="sinkpad">
        <type name="Pad" c:type="GstPad*"/>
      </field>
      <field name="pad_mode">
        <type name="ActivateMode" c:type="GstActivateMode"/>
      </field>
      <field name="offset">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="can_activate_pull">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="can_activate_push">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="preroll_queue">
        <type name="GLib.Queue" c:type="GQueue*"/>
      </field>
      <field name="preroll_queue_max_len">
        <type name="int" c:type="gint"/>
      </field>
      <field name="preroll_queued">
        <type name="int" c:type="gint"/>
      </field>
      <field name="buffers_queued">
        <type name="int" c:type="gint"/>
      </field>
      <field name="events_queued">
        <type name="int" c:type="gint"/>
      </field>
      <field name="eos">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="eos_queued">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="need_preroll">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="have_preroll">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="playing_async">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="have_newsegment">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="segment">
        <type name="Segment" c:type="GstSegment"/>
      </field>
      <field name="clock_id">
        <type name="ClockID" c:type="GstClockID"/>
      </field>
      <field name="end_time">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="sync">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="flushing">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <union name="abidata" c:type="abidata">
        <record name="ABI" c:type="ABI">
          <field name="clip_segment" writable="1">
            <type name="Segment" c:type="GstSegment*"/>
          </field>
          <field name="max_lateness" writable="1">
            <type name="int64" c:type="gint64"/>
          </field>
          <field name="running" writable="1">
            <type name="boolean" c:type="gboolean"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="19">
            <type name="any"/>
          </array>
        </field>
      </union>
      <field name="priv">
        <type name="BaseSinkPrivate" c:type="GstBaseSinkPrivate*"/>
      </field>
    </class>
    <record name="BaseSinkClass"
            c:type="GstBaseSinkClass"
            glib:is-gtype-struct-for="BaseSink">
      <doc xml:whitespace="preserve">Subclasses can override any of the available virtual methods or not, as
needed. At the minimum, the @render method should be overridden to
output/present buffers.</doc>
      <field name="parent_class">
        <type name="ElementClass" c:type="GstElementClass"/>
      </field>
      <field name="get_caps">
        <callback name="get_caps" c:type="get_caps">
          <return-value transfer-ownership="full">
            <type name="Caps" c:type="GstCaps*"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_caps">
        <callback name="set_caps" c:type="set_caps">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="buffer_alloc">
        <callback name="buffer_alloc" c:type="buffer_alloc">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="uint64" c:type="guint64"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="buf" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_times">
        <callback name="get_times" c:type="get_times">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
            <parameter name="start" transfer-ownership="none">
              <type name="ClockTime" c:type="GstClockTime*"/>
            </parameter>
            <parameter name="end" transfer-ownership="none">
              <type name="ClockTime" c:type="GstClockTime*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start">
        <callback name="start" c:type="start">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop">
        <callback name="stop" c:type="stop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unlock">
        <callback name="unlock" c:type="unlock">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="event">
        <callback name="event" c:type="event">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="GstEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="preroll">
        <callback name="preroll" c:type="preroll">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="render">
        <callback name="render" c:type="render">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="async_play">
        <callback name="async_play" c:type="async_play">
          <return-value transfer-ownership="full">
            <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate_pull">
        <callback name="activate_pull" c:type="activate_pull">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="active" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fixate">
        <callback name="fixate" c:type="fixate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unlock_stop">
        <callback name="unlock_stop" c:type="unlock_stop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="render_list">
        <callback name="render_list" c:type="render_list">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="sink" transfer-ownership="none">
              <type name="BaseSink" c:type="GstBaseSink*"/>
            </parameter>
            <parameter name="buffer_list" transfer-ownership="none">
              <type name="BufferList" c:type="GstBufferList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="15">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="BaseSinkPrivate" c:type="GstBaseSinkPrivate">
    </record>
    <class name="BaseSrc"
           c:type="GstBaseSrc"
           parent="Element"
           abstract="1"
           glib:type-name="GstBaseSrc"
           glib:get-type="gst_base_src_get_type"
           glib:type-struct="BaseSrcClass">
      <doc xml:whitespace="preserve">The opaque #GstBaseSrc data structure.</doc>
      <virtual-method name="get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="negotiate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="newsegment">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_times">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="end" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_size">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_seekable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="unlock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="do_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="segment" transfer-ownership="none">
            <type name="Segment" c:type="GstSegment*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="check_get_range">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="fixate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unlock_stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="prepare_seek_segment">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seek" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
          <parameter name="segment" transfer-ownership="none">
            <type name="Segment" c:type="GstSegment*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="wait_playing" c:identifier="gst_base_src_wait_playing">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
      </method>
      <method name="set_live" c:identifier="gst_base_src_set_live">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="live" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_live" c:identifier="gst_base_src_is_live">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_format" c:identifier="gst_base_src_set_format">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_latency" c:identifier="gst_base_src_query_latency">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="live"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="min_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="max_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blocksize" c:identifier="gst_base_src_set_blocksize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="blocksize" transfer-ownership="none">
            <type name="ulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blocksize" c:identifier="gst_base_src_get_blocksize">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
      </method>
      <method name="set_do_timestamp"
              c:identifier="gst_base_src_set_do_timestamp">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="timestamp" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_do_timestamp"
              c:identifier="gst_base_src_get_do_timestamp">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="new_seamless_segment"
              c:identifier="gst_base_src_new_seamless_segment">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="blocksize" writable="1" transfer-ownership="none">
        <type name="ulong" c:type="gulong"/>
      </property>
      <property name="do-timestamp" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="num-buffers" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="typefind" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="element">
        <type name="Element" c:type="GstElement"/>
      </field>
      <field name="srcpad">
        <type name="Pad" c:type="GstPad*"/>
      </field>
      <field name="live_lock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="live_cond">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="is_live">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="live_running">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="blocksize">
        <type name="int" c:type="gint"/>
      </field>
      <field name="can_activate_push">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="pad_mode">
        <type name="ActivateMode" c:type="GstActivateMode"/>
      </field>
      <field name="seekable">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="random_access">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="clock_id">
        <type name="ClockID" c:type="GstClockID"/>
      </field>
      <field name="end_time">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="segment">
        <type name="Segment" c:type="GstSegment"/>
      </field>
      <field name="need_newsegment">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="offset">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="size">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="num_buffers">
        <type name="int" c:type="gint"/>
      </field>
      <field name="num_buffers_left">
        <type name="int" c:type="gint"/>
      </field>
      <union name="data" c:type="data">
        <record name="ABI" c:type="ABI">
          <field name="typefind" writable="1">
            <type name="boolean" c:type="gboolean"/>
          </field>
          <field name="running" writable="1">
            <type name="boolean" c:type="gboolean"/>
          </field>
          <field name="pending_seek" writable="1">
            <type name="Event" c:type="GstEvent*"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="19">
            <type name="any"/>
          </array>
        </field>
      </union>
      <field name="priv">
        <type name="BaseSrcPrivate" c:type="GstBaseSrcPrivate*"/>
      </field>
    </class>
    <record name="BaseSrcClass"
            c:type="GstBaseSrcClass"
            glib:is-gtype-struct-for="BaseSrc">
      <doc xml:whitespace="preserve">Subclasses can override any of the available virtual methods or not, as
needed. At the minimum, the @create method should be overridden to produce
buffers.</doc>
      <field name="parent_class">
        <type name="ElementClass" c:type="GstElementClass"/>
      </field>
      <field name="get_caps">
        <callback name="get_caps" c:type="get_caps">
          <return-value transfer-ownership="full">
            <type name="Caps" c:type="GstCaps*"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_caps">
        <callback name="set_caps" c:type="set_caps">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="negotiate">
        <callback name="negotiate" c:type="negotiate">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="newsegment">
        <callback name="newsegment" c:type="newsegment">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start">
        <callback name="start" c:type="start">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop">
        <callback name="stop" c:type="stop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_times">
        <callback name="get_times" c:type="get_times">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
            <parameter name="start" transfer-ownership="none">
              <type name="ClockTime" c:type="GstClockTime*"/>
            </parameter>
            <parameter name="end" transfer-ownership="none">
              <type name="ClockTime" c:type="GstClockTime*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_size">
        <callback name="get_size" c:type="get_size">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="size"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="uint64" c:type="guint64*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_seekable">
        <callback name="is_seekable" c:type="is_seekable">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unlock">
        <callback name="unlock" c:type="unlock">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="event">
        <callback name="event" c:type="event">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="GstEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create">
        <callback name="create" c:type="create">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="uint64" c:type="guint64"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
            <parameter name="buf" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="do_seek">
        <callback name="do_seek" c:type="do_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="segment" transfer-ownership="none">
              <type name="Segment" c:type="GstSegment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query">
        <callback name="query" c:type="query">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="query" transfer-ownership="none">
              <type name="Query" c:type="GstQuery*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="check_get_range">
        <callback name="check_get_range" c:type="check_get_range">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fixate">
        <callback name="fixate" c:type="fixate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unlock_stop">
        <callback name="unlock_stop" c:type="unlock_stop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="prepare_seek_segment">
        <callback name="prepare_seek_segment" c:type="prepare_seek_segment">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="BaseSrc" c:type="GstBaseSrc*"/>
            </parameter>
            <parameter name="seek" transfer-ownership="none">
              <type name="Event" c:type="GstEvent*"/>
            </parameter>
            <parameter name="segment" transfer-ownership="none">
              <type name="Segment" c:type="GstSegment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="14">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="BaseSrcFlags" c:type="GstBaseSrcFlags">
      <doc xml:whitespace="preserve">The #GstElement flags that a basesrc element may have.</doc>
      <member name="started"
              value="1048576"
              c:identifier="GST_BASE_SRC_STARTED"/>
      <member name="flag_last"
              value="4194304"
              c:identifier="GST_BASE_SRC_FLAG_LAST"/>
    </bitfield>
    <record name="BaseSrcPrivate" c:type="GstBaseSrcPrivate">
    </record>
    <class name="BaseTransform"
           c:type="GstBaseTransform"
           parent="Element"
           abstract="1"
           glib:type-name="GstBaseTransform"
           glib:get-type="gst_base_transform_get_type"
           glib:type-struct="BaseTransformClass">
      <doc xml:whitespace="preserve">The opaque #GstBaseTransform data structure.</doc>
      <virtual-method name="transform_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fixate_caps">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="othercaps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="transform_size">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="othercaps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="othersize"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_unit_size">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="incaps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="outcaps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="transform">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="inbuf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="outbuf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="transform_ip">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="prepare_output_buffer">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="input" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="src_event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="before_transform">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="accept_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_passthrough"
              c:identifier="gst_base_transform_set_passthrough">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="passthrough" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_passthrough"
              c:identifier="gst_base_transform_is_passthrough">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_in_place"
              c:identifier="gst_base_transform_set_in_place">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="in_place" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_in_place" c:identifier="gst_base_transform_is_in_place">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="update_qos" c:identifier="gst_base_transform_update_qos">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="proportion" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="diff" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff"/>
          </parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_qos_enabled"
              c:identifier="gst_base_transform_set_qos_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_qos_enabled"
              c:identifier="gst_base_transform_is_qos_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_gap_aware"
              c:identifier="gst_base_transform_set_gap_aware">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gap_aware" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="suggest" c:identifier="gst_base_transform_suggest">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="reconfigure" c:identifier="gst_base_transform_reconfigure">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="qos" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="element">
        <type name="Element" c:type="GstElement"/>
      </field>
      <field name="sinkpad">
        <type name="Pad" c:type="GstPad*"/>
      </field>
      <field name="srcpad">
        <type name="Pad" c:type="GstPad*"/>
      </field>
      <field name="passthrough">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="always_in_place">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="cache_caps1">
        <type name="Caps" c:type="GstCaps*"/>
      </field>
      <field name="cache_caps1_size">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="cache_caps2">
        <type name="Caps" c:type="GstCaps*"/>
      </field>
      <field name="cache_caps2_size">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="have_same_caps">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="delay_configure">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="pending_configure">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="negotiated">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="have_newsegment">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="segment">
        <type name="Segment" c:type="GstSegment"/>
      </field>
      <field name="transform_lock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="priv">
        <type name="BaseTransformPrivate" c:type="GstBaseTransformPrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="19">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="BaseTransformClass"
            c:type="GstBaseTransformClass"
            glib:is-gtype-struct-for="BaseTransform">
      <doc xml:whitespace="preserve">Subclasses can override any of the available virtual methods or not, as
needed. At minimum either @transform or @transform_ip need to be overridden.
If the element can overwrite the input data with the results (data is of the
same type and quantity) it should provide @transform_ip.</doc>
      <field name="parent_class">
        <type name="ElementClass" c:type="GstElementClass"/>
      </field>
      <field name="transform_caps">
        <callback name="transform_caps" c:type="transform_caps">
          <return-value transfer-ownership="full">
            <type name="Caps" c:type="GstCaps*"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="PadDirection" c:type="GstPadDirection"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fixate_caps">
        <callback name="fixate_caps" c:type="fixate_caps">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="PadDirection" c:type="GstPadDirection"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="othercaps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="transform_size">
        <callback name="transform_size" c:type="transform_size">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="PadDirection" c:type="GstPadDirection"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
            <parameter name="othercaps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="othersize"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="uint" c:type="guint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_unit_size">
        <callback name="get_unit_size" c:type="get_unit_size">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="size"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="uint" c:type="guint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_caps">
        <callback name="set_caps" c:type="set_caps">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="incaps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="outcaps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start">
        <callback name="start" c:type="start">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop">
        <callback name="stop" c:type="stop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="event">
        <callback name="event" c:type="event">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="GstEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="transform">
        <callback name="transform" c:type="transform">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="inbuf" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
            <parameter name="outbuf" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="transform_ip">
        <callback name="transform_ip" c:type="transform_ip">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="buf" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="passthrough_on_same_caps">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="prepare_output_buffer">
        <callback name="prepare_output_buffer" c:type="prepare_output_buffer">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="input" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="buf" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="src_event">
        <callback name="src_event" c:type="src_event">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="GstEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="before_transform">
        <callback name="before_transform" c:type="before_transform">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="accept_caps">
        <callback name="accept_caps" c:type="accept_caps">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="trans" transfer-ownership="none">
              <type name="BaseTransform" c:type="GstBaseTransform*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="PadDirection" c:type="GstPadDirection"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="17">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="BaseTransformPrivate" c:type="GstBaseTransformPrivate">
    </record>
    <class name="Bin"
           c:type="GstBin"
           parent="Element"
           glib:type-name="GstBin"
           glib:get-type="gst_bin_get_type"
           glib:type-struct="BinClass">
      <doc xml:whitespace="preserve">The GstBin base class. Subclasses can access these fields provided
the LOCK is taken.</doc>
      <implements name="ChildProxy"/>
      <constructor name="new" c:identifier="gst_bin_new">
        <return-value transfer-ownership="full">
          <type name="Bin" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="add_element">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove_element">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_message">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="Message" c:type="GstMessage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add" c:identifier="gst_bin_add">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="gst_bin_remove">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_by_name" c:identifier="gst_bin_get_by_name">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_by_name_recurse_up"
              c:identifier="gst_bin_get_by_name_recurse_up">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_by_interface" c:identifier="gst_bin_get_by_interface">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="iface" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="iterate_elements" c:identifier="gst_bin_iterate_elements">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_sorted" c:identifier="gst_bin_iterate_sorted">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_recurse" c:identifier="gst_bin_iterate_recurse">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_sinks" c:identifier="gst_bin_iterate_sinks">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_sources" c:identifier="gst_bin_iterate_sources">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_all_by_interface"
              c:identifier="gst_bin_iterate_all_by_interface">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
        <parameters>
          <parameter name="iface" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="recalculate_latency"
              c:identifier="gst_bin_recalculate_latency">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="add_many"
              c:identifier="gst_bin_add_many"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="element_1" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="remove_many"
              c:identifier="gst_bin_remove_many"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="element_1" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="find_unlinked_pad"
              c:identifier="gst_bin_find_unlinked_pad">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_unconnected_pad"
              c:identifier="gst_bin_find_unconnected_pad">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
        </parameters>
      </method>
      <property name="async-handling" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="element">
        <type name="Element" c:type="GstElement"/>
      </field>
      <field name="numchildren">
        <type name="int" c:type="gint"/>
      </field>
      <field name="children">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="children_cookie">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="child_bus">
        <type name="Bus" c:type="GstBus*"/>
      </field>
      <field name="messages">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="polling">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="state_dirty">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="clock_dirty">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="provided_clock">
        <type name="Clock" c:type="GstClock*"/>
      </field>
      <field name="clock_provider">
        <type name="Element" c:type="GstElement*"/>
      </field>
      <field name="priv">
        <type name="BinPrivate" c:type="GstBinPrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
      <glib:signal name="do-latency">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </glib:signal>
      <glib:signal name="element-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Element" c:type="GstElement"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="element-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Element" c:type="GstElement"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BinClass"
            c:type="GstBinClass"
            glib:is-gtype-struct-for="Bin">
      <doc xml:whitespace="preserve">Subclasses can override the @add_element and @remove_element to
update the list of children in the bin.
The @handle_message method can be overridden to implement custom
message handling.  @handle_message takes ownership of the message, just like
#gst_element_post_message.</doc>
      <field name="parent_class">
        <type name="ElementClass" c:type="GstElementClass"/>
      </field>
      <field name="pool">
        <type name="GLib.ThreadPool" c:type="GThreadPool*"/>
      </field>
      <field name="element_added">
        <callback name="element_added" c:type="element_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="bin" transfer-ownership="none">
              <type name="Bin" c:type="GstBin*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="element_removed">
        <callback name="element_removed" c:type="element_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="bin" transfer-ownership="none">
              <type name="Bin" c:type="GstBin*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_element">
        <callback name="add_element" c:type="add_element">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="bin" transfer-ownership="none">
              <type name="Bin" c:type="GstBin*"/>
            </parameter>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_element">
        <callback name="remove_element" c:type="remove_element">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="bin" transfer-ownership="none">
              <type name="Bin" c:type="GstBin*"/>
            </parameter>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_message">
        <callback name="handle_message" c:type="handle_message">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="bin" transfer-ownership="none">
              <type name="Bin" c:type="GstBin*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="Message" c:type="GstMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="do_latency">
        <callback name="do_latency" c:type="do_latency">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="bin" transfer-ownership="none">
              <type name="Bin" c:type="GstBin*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="BinFlags"
              glib:type-name="GstBinFlags"
              glib:get-type="gst_bin_flags_get_type"
              c:type="GstBinFlags">
      <doc xml:whitespace="preserve">GstBinFlags are a set of flags specific to bins. Most are set/used
internally. They can be checked using the GST_OBJECT_FLAG_IS_SET () macro,
and (un)set using GST_OBJECT_FLAG_SET () and GST_OBJECT_FLAG_UNSET ().</doc>
      <member name="last"
              value="33554432"
              c:identifier="GST_BIN_FLAG_LAST"
              glib:nick="last"/>
    </bitfield>
    <record name="BinPrivate" c:type="GstBinPrivate">
    </record>
    <record name="BitReader" c:type="GstBitReader">
      <doc xml:whitespace="preserve">A bit reader instance.</doc>
      <field name="data" writable="1">
        <type name="any" c:type="guint8*"/>
      </field>
      <field name="size" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="byte" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="bit" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <constructor name="new" c:identifier="gst_bit_reader_new">
        <return-value transfer-ownership="full">
          <type name="BitReader" c:type="GstBitReader*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_buffer"
                   c:identifier="gst_bit_reader_new_from_buffer">
        <return-value transfer-ownership="full">
          <type name="BitReader" c:type="GstBitReader*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gst_bit_reader_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="init" c:identifier="gst_bit_reader_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_from_buffer"
              c:identifier="gst_bit_reader_init_from_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pos" c:identifier="gst_bit_reader_set_pos">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pos" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pos" c:identifier="gst_bit_reader_get_pos">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_remaining" c:identifier="gst_bit_reader_get_remaining">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_size" c:identifier="gst_bit_reader_get_size">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="skip" c:identifier="gst_bit_reader_skip">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_to_byte" c:identifier="gst_bit_reader_skip_to_byte">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_bits_uint8"
              c:identifier="gst_bit_reader_get_bits_uint8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bits_uint16"
              c:identifier="gst_bit_reader_get_bits_uint16">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bits_uint32"
              c:identifier="gst_bit_reader_get_bits_uint32">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bits_uint64"
              c:identifier="gst_bit_reader_get_bits_uint64">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_bits_uint8"
              c:identifier="gst_bit_reader_peek_bits_uint8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_bits_uint16"
              c:identifier="gst_bit_reader_peek_bits_uint16">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_bits_uint32"
              c:identifier="gst_bit_reader_peek_bits_uint32">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_bits_uint64"
              c:identifier="gst_bit_reader_peek_bits_uint64">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="nbits" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="Buffer"
           c:type="GstBuffer"
           parent="MiniObject"
           glib:type-name="GstBuffer"
           glib:get-type="gst_buffer_get_type"
           glib:type-struct="BufferClass"
           glib:fundamental="1">
      <doc xml:whitespace="preserve">The structure of a #GstBuffer. Use the associated macros to access the public
variables.</doc>
      <constructor name="new" c:identifier="gst_buffer_new">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </constructor>
      <constructor name="new_and_alloc"
                   c:identifier="gst_buffer_new_and_alloc">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="try_new_and_alloc"
                c:identifier="gst_buffer_try_new_and_alloc">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <method name="copy_metadata" c:identifier="gst_buffer_copy_metadata">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="BufferCopyFlags" c:type="GstBufferCopyFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_metadata_writable"
              c:identifier="gst_buffer_is_metadata_writable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="make_metadata_writable"
              c:identifier="gst_buffer_make_metadata_writable">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </method>
      <method name="get_caps" c:identifier="gst_buffer_get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="set_caps" c:identifier="gst_buffer_set_caps">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_sub" c:identifier="gst_buffer_create_sub">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_span_fast" c:identifier="gst_buffer_is_span_fast">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buf2" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="span" c:identifier="gst_buffer_span">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="buf2" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge" c:identifier="gst_buffer_merge">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="buf2" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="join" c:identifier="gst_buffer_join">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="buf2" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stamp" c:identifier="gst_buffer_stamp">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <field name="mini_object">
        <type name="MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="data">
        <type name="any" c:type="guint8*"/>
      </field>
      <field name="size">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="timestamp">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="duration">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="caps">
        <type name="Caps" c:type="GstCaps*"/>
      </field>
      <field name="offset">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="offset_end">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="malloc_data">
        <type name="any" c:type="guint8*"/>
      </field>
      <field name="free_func">
        <type name="GLib.FreeFunc" c:type="GFreeFunc"/>
      </field>
      <field name="parent">
        <type name="Buffer" c:type="GstBuffer*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="2">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="BufferClass"
            c:type="GstBufferClass"
            glib:is-gtype-struct-for="Buffer">
      <field name="mini_object_class">
        <type name="MiniObjectClass" c:type="GstMiniObjectClass"/>
      </field>
    </record>
    <bitfield name="BufferCopyFlags"
              version="0.10.13"
              glib:type-name="GstBufferCopyFlags"
              glib:get-type="gst_buffer_copy_flags_get_type"
              c:type="GstBufferCopyFlags">
      <doc xml:whitespace="preserve">A set of flags that can be provided to the gst_buffer_copy_metadata()
function to specify which metadata fields should be copied.</doc>
      <member name="flags"
              value="1"
              c:identifier="GST_BUFFER_COPY_FLAGS"
              glib:nick="flags"/>
      <member name="timestamps"
              value="2"
              c:identifier="GST_BUFFER_COPY_TIMESTAMPS"
              glib:nick="timestamps"/>
      <member name="caps"
              value="4"
              c:identifier="GST_BUFFER_COPY_CAPS"
              glib:nick="caps"/>
    </bitfield>
    <bitfield name="BufferFlag"
              glib:type-name="GstBufferFlag"
              glib:get-type="gst_buffer_flag_get_type"
              c:type="GstBufferFlag">
      <doc xml:whitespace="preserve">A set of buffer flags used to describe properties of a #GstBuffer.</doc>
      <member name="readonly"
              value="1"
              c:identifier="GST_BUFFER_FLAG_READONLY"
              glib:nick="readonly"/>
      <member name="preroll"
              value="16"
              c:identifier="GST_BUFFER_FLAG_PREROLL"
              glib:nick="preroll"/>
      <member name="discont"
              value="32"
              c:identifier="GST_BUFFER_FLAG_DISCONT"
              glib:nick="discont"/>
      <member name="in_caps"
              value="64"
              c:identifier="GST_BUFFER_FLAG_IN_CAPS"
              glib:nick="in-caps"/>
      <member name="gap"
              value="128"
              c:identifier="GST_BUFFER_FLAG_GAP"
              glib:nick="gap"/>
      <member name="delta_unit"
              value="256"
              c:identifier="GST_BUFFER_FLAG_DELTA_UNIT"
              glib:nick="delta-unit"/>
      <member name="media1"
              value="512"
              c:identifier="GST_BUFFER_FLAG_MEDIA1"
              glib:nick="media1"/>
      <member name="media2"
              value="1024"
              c:identifier="GST_BUFFER_FLAG_MEDIA2"
              glib:nick="media2"/>
      <member name="media3"
              value="2048"
              c:identifier="GST_BUFFER_FLAG_MEDIA3"
              glib:nick="media3"/>
      <member name="last"
              value="4096"
              c:identifier="GST_BUFFER_FLAG_LAST"
              glib:nick="last"/>
    </bitfield>
    <class name="BufferList"
           c:type="GstBufferList"
           parent="MiniObject"
           glib:type-name="GstBufferList"
           glib:get-type="gst_buffer_list_get_type"
           glib:type-struct="BufferListClass"
           glib:fundamental="1">
      <constructor name="new" c:identifier="gst_buffer_list_new">
        <return-value transfer-ownership="full">
          <type name="BufferList" c:type="GstBufferList*"/>
        </return-value>
      </constructor>
      <method name="n_groups" c:identifier="gst_buffer_list_n_groups">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="foreach" c:identifier="gst_buffer_list_foreach">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="BufferListFunc" c:type="GstBufferListFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="gst_buffer_list_get">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="group" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="idx" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="iterate" c:identifier="gst_buffer_list_iterate">
        <return-value transfer-ownership="full">
          <type name="BufferListIterator" c:type="GstBufferListIterator*"/>
        </return-value>
      </method>
    </class>
    <record name="BufferListClass"
            c:type="GstBufferListClass"
            glib:is-gtype-struct-for="BufferList">
    </record>
    <callback name="BufferListDoFunction"
              c:type="GstBufferListDoFunction"
              version="0.10.24">
      <doc xml:whitespace="preserve">A function for accessing the last buffer returned by
gst_buffer_list_iterator_next(). The function can leave @buffer in the list,
replace @buffer in the list or remove @buffer from the list, depending on
the return value. If the function returns NULL, @buffer will be removed from
the list, otherwise @buffer will be replaced with the returned buffer.
The last buffer returned by gst_buffer_list_iterator_next() will be replaced
with the buffer returned from the function. The function takes ownership of
unreffed. If NULL is returned, the buffer will be removed from the list. The
list must be writable.
from the list</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">the buffer to replace @buffer in the list, or NULL to remove @buffer</doc>
        <type name="Buffer" c:type="GstBuffer*"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstBuffer</doc>
          <type name="Buffer" c:type="GstBuffer*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:whitespace="preserve">user data</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="BufferListFunc"
              c:type="GstBufferListFunc"
              version="0.10.24">
      <doc xml:whitespace="preserve">A function that will be called from gst_buffer_list_foreach(). The @buffer
field will point to a the reference of the buffer at @idx in @group.
When this function returns #GST_BUFFER_LIST_CONTINUE, the next buffer will be
returned. When #GST_BUFFER_LIST_SKIP_GROUP is returned, all remaining buffers
in the current group will be skipped and the first buffer of the next group
is returned (if any). When GST_BUFFER_LIST_END is returned,
gst_buffer_list_foreach() will return.
When @buffer is set to NULL, the item will be removed from the bufferlist.
When @buffer has been made writable, the new buffer reference can be assigned
to @buffer. This function is responsible for unreffing the old buffer when
removing or modifying.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a #GstBufferListItem</doc>
        <type name="BufferListItem" c:type="GstBufferListItem"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:whitespace="preserve">pointer the buffer</doc>
          <type name="Buffer" c:type="GstBuffer**"/>
        </parameter>
        <parameter name="group" transfer-ownership="none">
          <doc xml:whitespace="preserve">the group index of @buffer</doc>
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="idx" transfer-ownership="none">
          <doc xml:whitespace="preserve">the index in @group of @buffer</doc>
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <doc xml:whitespace="preserve">user data passed to gst_buffer_list_foreach()</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="BufferListItem"
                 version="0.10.24"
                 glib:type-name="GstBufferListItem"
                 glib:get-type="gst_buffer_list_item_get_type"
                 c:type="GstBufferListItem">
      <doc xml:whitespace="preserve">The result of the #GstBufferListFunc.</doc>
      <member name="continue"
              value="0"
              c:identifier="GST_BUFFER_LIST_CONTINUE"
              glib:nick="continue"/>
      <member name="skip_group"
              value="1"
              c:identifier="GST_BUFFER_LIST_SKIP_GROUP"
              glib:nick="skip-group"/>
      <member name="end"
              value="2"
              c:identifier="GST_BUFFER_LIST_END"
              glib:nick="end"/>
    </enumeration>
    <record name="BufferListIterator" c:type="GstBufferListIterator">
      <method name="free" c:identifier="gst_buffer_list_iterator_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="n_buffers"
              c:identifier="gst_buffer_list_iterator_n_buffers">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="next" c:identifier="gst_buffer_list_iterator_next">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </method>
      <method name="next_group"
              c:identifier="gst_buffer_list_iterator_next_group">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="add" c:identifier="gst_buffer_list_iterator_add">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_group"
              c:identifier="gst_buffer_list_iterator_add_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="remove" c:identifier="gst_buffer_list_iterator_remove">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="steal" c:identifier="gst_buffer_list_iterator_steal">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </method>
      <method name="take" c:identifier="gst_buffer_list_iterator_take">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="do" c:identifier="gst_buffer_list_iterator_do">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="do_func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="BufferListDoFunction"
                  c:type="GstBufferListDoFunction"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge_group"
              c:identifier="gst_buffer_list_iterator_merge_group">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="BufferingMode"
                 glib:type-name="GstBufferingMode"
                 glib:get-type="gst_buffering_mode_get_type"
                 c:type="GstBufferingMode">
      <doc xml:whitespace="preserve">The different types of buffering methods.</doc>
      <member name="stream"
              value="0"
              c:identifier="GST_BUFFERING_STREAM"
              glib:nick="stream"/>
      <member name="download"
              value="1"
              c:identifier="GST_BUFFERING_DOWNLOAD"
              glib:nick="download"/>
      <member name="timeshift"
              value="2"
              c:identifier="GST_BUFFERING_TIMESHIFT"
              glib:nick="timeshift"/>
      <member name="live"
              value="3"
              c:identifier="GST_BUFFERING_LIVE"
              glib:nick="live"/>
    </enumeration>
    <class name="Bus"
           c:type="GstBus"
           parent="Object"
           glib:type-name="GstBus"
           glib:get-type="gst_bus_get_type"
           glib:type-struct="BusClass">
      <doc xml:whitespace="preserve">The opaque #GstBus data structure.</doc>
      <constructor name="new" c:identifier="gst_bus_new">
        <return-value transfer-ownership="full">
          <type name="Bus" c:type="GstBus*"/>
        </return-value>
      </constructor>
      <method name="post" c:identifier="gst_bus_post">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="Message" c:type="GstMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="have_pending" c:identifier="gst_bus_have_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="peek" c:identifier="gst_bus_peek">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
      </method>
      <method name="pop" c:identifier="gst_bus_pop">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
      </method>
      <method name="pop_filtered" c:identifier="gst_bus_pop_filtered">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="types" transfer-ownership="none">
            <type name="MessageType" c:type="GstMessageType"/>
          </parameter>
        </parameters>
      </method>
      <method name="timed_pop" c:identifier="gst_bus_timed_pop">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="timed_pop_filtered"
              c:identifier="gst_bus_timed_pop_filtered">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="types" transfer-ownership="none">
            <type name="MessageType" c:type="GstMessageType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flushing" c:identifier="gst_bus_set_flushing">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flushing" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sync_handler" c:identifier="gst_bus_set_sync_handler">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="BusSyncHandler" c:type="GstBusSyncHandler"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_watch" c:identifier="gst_bus_create_watch">
        <return-value transfer-ownership="full">
          <type name="GLib.Source" c:type="GSource*"/>
        </return-value>
      </method>
      <method name="add_watch_full" c:identifier="gst_bus_add_watch_full">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="priority" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <type name="BusFunc" c:type="GstBusFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_watch" c:identifier="gst_bus_add_watch">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="BusFunc" c:type="GstBusFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll" c:identifier="gst_bus_poll">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="events" transfer-ownership="none">
            <type name="MessageType" c:type="GstMessageType"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff"/>
          </parameter>
        </parameters>
      </method>
      <method name="async_signal_func"
              c:identifier="gst_bus_async_signal_func">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="Message" c:type="GstMessage*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="sync_signal_handler"
              c:identifier="gst_bus_sync_signal_handler">
        <return-value transfer-ownership="full">
          <type name="BusSyncReply" c:type="GstBusSyncReply"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="Message" c:type="GstMessage*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_signal_watch" c:identifier="gst_bus_add_signal_watch">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="add_signal_watch_full"
              c:identifier="gst_bus_add_signal_watch_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="priority" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_signal_watch"
              c:identifier="gst_bus_remove_signal_watch">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="enable_sync_message_emission"
              c:identifier="gst_bus_enable_sync_message_emission">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="disable_sync_message_emission"
              c:identifier="gst_bus_disable_sync_message_emission">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="queue">
        <type name="GLib.Queue" c:type="GQueue*"/>
      </field>
      <field name="queue_lock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="sync_handler">
        <type name="BusSyncHandler" c:type="GstBusSyncHandler"/>
      </field>
      <field name="sync_handler_data">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="signal_watch_id">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="num_signal_watchers">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="priv">
        <type name="BusPrivate" c:type="GstBusPrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
      <glib:signal name="message">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Message" c:type="GstMessage"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="sync-message">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Message" c:type="GstMessage"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BusClass"
            c:type="GstBusClass"
            glib:is-gtype-struct-for="Bus">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="message">
        <callback name="message" c:type="message">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="bus" transfer-ownership="none">
              <type name="Bus" c:type="GstBus*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="Message" c:type="GstMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="sync_message">
        <callback name="sync_message" c:type="sync_message">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="bus" transfer-ownership="none">
              <type name="Bus" c:type="GstBus*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="Message" c:type="GstMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="BusFlags"
              glib:type-name="GstBusFlags"
              glib:get-type="gst_bus_flags_get_type"
              c:type="GstBusFlags">
      <doc xml:whitespace="preserve">The standard flags that a bus may have.</doc>
      <member name="flushing"
              value="16"
              c:identifier="GST_BUS_FLUSHING"
              glib:nick="flushing"/>
      <member name="flag_last"
              value="32"
              c:identifier="GST_BUS_FLAG_LAST"
              glib:nick="flag-last"/>
    </bitfield>
    <callback name="BusFunc" c:type="GstBusFunc">
      <doc xml:whitespace="preserve">Specifies the type of function passed to gst_bus_add_watch() or
gst_bus_add_watch_full(), which is called from the mainloop when a message
is available on the bus.
The message passed to the function will be unreffed after execution of this
function so it should not be freed in the function.
Note that this function is used as a GSourceFunc which means that returning
FALSE will remove the GSource from the mainloop.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%FALSE if the event source should be removed.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="bus" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstBus that sent the message</doc>
          <type name="Bus" c:type="GstBus*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstMessage</doc>
          <type name="Message" c:type="GstMessage*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">user data that has been given, when registering the handler</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="BusPrivate" c:type="GstBusPrivate">
    </record>
    <callback name="BusSyncHandler" c:type="GstBusSyncHandler">
      <doc xml:whitespace="preserve">Handler will be invoked synchronously, when a new message has been injected
into the bus. This function is mostly used internally. Only one sync handler
can be attached to a given bus.
If the handler returns GST_BUS_DROP, it should unref the message, else the
message should not be unreffed by the sync handler.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">#GstBusSyncReply stating what to do with the message</doc>
        <type name="BusSyncReply" c:type="GstBusSyncReply"/>
      </return-value>
      <parameters>
        <parameter name="bus" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstBus that sent the message</doc>
          <type name="Bus" c:type="GstBus*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstMessage</doc>
          <type name="Message" c:type="GstMessage*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">user data that has been given, when registering the handler</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="BusSyncReply"
                 glib:type-name="GstBusSyncReply"
                 glib:get-type="gst_bus_sync_reply_get_type"
                 c:type="GstBusSyncReply">
      <doc xml:whitespace="preserve">The result values for a GstBusSyncHandler.</doc>
      <member name="drop"
              value="0"
              c:identifier="GST_BUS_DROP"
              glib:nick="drop"/>
      <member name="pass"
              value="1"
              c:identifier="GST_BUS_PASS"
              glib:nick="pass"/>
      <member name="async"
              value="2"
              c:identifier="GST_BUS_ASYNC"
              glib:nick="async"/>
    </enumeration>
    <record name="ByteReader" c:type="GstByteReader">
      <doc xml:whitespace="preserve">A byte reader instance.</doc>
      <field name="data" writable="1">
        <type name="any" c:type="guint8*"/>
      </field>
      <field name="size" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="byte" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <constructor name="new" c:identifier="gst_byte_reader_new">
        <return-value transfer-ownership="full">
          <type name="ByteReader" c:type="GstByteReader*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_buffer"
                   c:identifier="gst_byte_reader_new_from_buffer">
        <return-value transfer-ownership="full">
          <type name="ByteReader" c:type="GstByteReader*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="free" c:identifier="gst_byte_reader_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="init" c:identifier="gst_byte_reader_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_from_buffer"
              c:identifier="gst_byte_reader_init_from_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pos" c:identifier="gst_byte_reader_set_pos">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pos" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pos" c:identifier="gst_byte_reader_get_pos">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_remaining"
              c:identifier="gst_byte_reader_get_remaining">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_size" c:identifier="gst_byte_reader_get_size">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="skip" c:identifier="gst_byte_reader_skip">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="nbytes" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint8" c:identifier="gst_byte_reader_get_uint8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_int8" c:identifier="gst_byte_reader_get_int8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int8" c:type="gint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint16_le"
              c:identifier="gst_byte_reader_get_uint16_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int16_le" c:identifier="gst_byte_reader_get_int16_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int16" c:type="gint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint16_be"
              c:identifier="gst_byte_reader_get_uint16_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int16_be" c:identifier="gst_byte_reader_get_int16_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int16" c:type="gint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint24_le"
              c:identifier="gst_byte_reader_get_uint24_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int24_le" c:identifier="gst_byte_reader_get_int24_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint24_be"
              c:identifier="gst_byte_reader_get_uint24_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int24_be" c:identifier="gst_byte_reader_get_int24_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint32_le"
              c:identifier="gst_byte_reader_get_uint32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int32_le" c:identifier="gst_byte_reader_get_int32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint32_be"
              c:identifier="gst_byte_reader_get_uint32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int32_be" c:identifier="gst_byte_reader_get_int32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint64_le"
              c:identifier="gst_byte_reader_get_uint64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int64_le" c:identifier="gst_byte_reader_get_int64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint64_be"
              c:identifier="gst_byte_reader_get_uint64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int64_be" c:identifier="gst_byte_reader_get_int64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint8" c:identifier="gst_byte_reader_peek_uint8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int8" c:identifier="gst_byte_reader_peek_int8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int8" c:type="gint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint16_le"
              c:identifier="gst_byte_reader_peek_uint16_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int16_le"
              c:identifier="gst_byte_reader_peek_int16_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int16" c:type="gint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint16_be"
              c:identifier="gst_byte_reader_peek_uint16_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int16_be"
              c:identifier="gst_byte_reader_peek_int16_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int16" c:type="gint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint24_le"
              c:identifier="gst_byte_reader_peek_uint24_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int24_le"
              c:identifier="gst_byte_reader_peek_int24_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint24_be"
              c:identifier="gst_byte_reader_peek_uint24_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int24_be"
              c:identifier="gst_byte_reader_peek_int24_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint32_le"
              c:identifier="gst_byte_reader_peek_uint32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int32_le"
              c:identifier="gst_byte_reader_peek_int32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint32_be"
              c:identifier="gst_byte_reader_peek_uint32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int32_be"
              c:identifier="gst_byte_reader_peek_int32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int32" c:type="gint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint64_le"
              c:identifier="gst_byte_reader_peek_uint64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int64_le"
              c:identifier="gst_byte_reader_peek_int64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_uint64_be"
              c:identifier="gst_byte_reader_peek_uint64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_int64_be"
              c:identifier="gst_byte_reader_peek_int64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float32_le"
              c:identifier="gst_byte_reader_get_float32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="float" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float32_be"
              c:identifier="gst_byte_reader_get_float32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="float" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float64_le"
              c:identifier="gst_byte_reader_get_float64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float64_be"
              c:identifier="gst_byte_reader_get_float64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_float32_le"
              c:identifier="gst_byte_reader_peek_float32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="float" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_float32_be"
              c:identifier="gst_byte_reader_peek_float32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="float" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_float64_le"
              c:identifier="gst_byte_reader_peek_float64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_float64_be"
              c:identifier="gst_byte_reader_peek_float64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_data" c:identifier="gst_byte_reader_dup_data">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint8" c:type="guint8**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data" c:identifier="gst_byte_reader_get_data">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint8" c:type="guint8**"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_data" c:identifier="gst_byte_reader_peek_data">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint8" c:type="guint8**"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_string_utf8"
              c:identifier="gst_byte_reader_dup_string_utf8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="dup_string_utf16"
              c:identifier="gst_byte_reader_dup_string_utf16">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint16" c:type="guint16**"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_string_utf32"
              c:identifier="gst_byte_reader_dup_string_utf32">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32**"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_string_utf8"
              c:identifier="gst_byte_reader_skip_string_utf8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="skip_string_utf16"
              c:identifier="gst_byte_reader_skip_string_utf16">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="skip_string_utf32"
              c:identifier="gst_byte_reader_skip_string_utf32">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_string_utf8"
              c:identifier="gst_byte_reader_get_string_utf8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="peek_string_utf8"
              c:identifier="gst_byte_reader_peek_string_utf8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="masked_scan_uint32"
              c:identifier="gst_byte_reader_masked_scan_uint32">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="pattern" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="ByteWriter" c:type="GstByteWriter">
      <doc xml:whitespace="preserve">A byte writer instance.</doc>
      <field name="parent" writable="1">
        <type name="ByteReader" c:type="GstByteReader"/>
      </field>
      <field name="alloc_size" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="fixed" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="owned" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <constructor name="new" c:identifier="gst_byte_writer_new">
        <return-value transfer-ownership="full">
          <type name="ByteWriter" c:type="GstByteWriter*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_size"
                   c:identifier="gst_byte_writer_new_with_size">
        <return-value transfer-ownership="full">
          <type name="ByteWriter" c:type="GstByteWriter*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="fixed" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_data"
                   c:identifier="gst_byte_writer_new_with_data">
        <return-value transfer-ownership="full">
          <type name="ByteWriter" c:type="GstByteWriter*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="initialized" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_buffer"
                   c:identifier="gst_byte_writer_new_with_buffer">
        <return-value transfer-ownership="full">
          <type name="ByteWriter" c:type="GstByteWriter*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="initialized" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="init" c:identifier="gst_byte_writer_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="init_with_size"
              c:identifier="gst_byte_writer_init_with_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="fixed" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_with_data"
              c:identifier="gst_byte_writer_init_with_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="initialized" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_with_buffer"
              c:identifier="gst_byte_writer_init_with_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="initialized" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gst_byte_writer_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="free_and_get_data"
              c:identifier="gst_byte_writer_free_and_get_data">
        <return-value transfer-ownership="full">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
      <method name="free_and_get_buffer"
              c:identifier="gst_byte_writer_free_and_get_buffer">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="gst_byte_writer_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="reset_and_get_data"
              c:identifier="gst_byte_writer_reset_and_get_data">
        <return-value transfer-ownership="full">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
      <method name="reset_and_get_buffer"
              c:identifier="gst_byte_writer_reset_and_get_buffer">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
      </method>
      <method name="get_remaining"
              c:identifier="gst_byte_writer_get_remaining">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="ensure_free_space"
              c:identifier="gst_byte_writer_ensure_free_space">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint8" c:identifier="gst_byte_writer_put_uint8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int8" c:identifier="gst_byte_writer_put_int8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int8" c:type="gint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint16_be"
              c:identifier="gst_byte_writer_put_uint16_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint16_le"
              c:identifier="gst_byte_writer_put_uint16_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int16_be" c:identifier="gst_byte_writer_put_int16_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int16" c:type="gint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int16_le" c:identifier="gst_byte_writer_put_int16_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int16" c:type="gint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint24_be"
              c:identifier="gst_byte_writer_put_uint24_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint24_le"
              c:identifier="gst_byte_writer_put_uint24_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int24_be" c:identifier="gst_byte_writer_put_int24_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int24_le" c:identifier="gst_byte_writer_put_int24_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint32_be"
              c:identifier="gst_byte_writer_put_uint32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint32_le"
              c:identifier="gst_byte_writer_put_uint32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int32_be" c:identifier="gst_byte_writer_put_int32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int32_le" c:identifier="gst_byte_writer_put_int32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint64_be"
              c:identifier="gst_byte_writer_put_uint64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint64_le"
              c:identifier="gst_byte_writer_put_uint64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int64_be" c:identifier="gst_byte_writer_put_int64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int64_le" c:identifier="gst_byte_writer_put_int64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_float32_be"
              c:identifier="gst_byte_writer_put_float32_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="float" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_float32_le"
              c:identifier="gst_byte_writer_put_float32_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="float" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_float64_be"
              c:identifier="gst_byte_writer_put_float64_be">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_float64_le"
              c:identifier="gst_byte_writer_put_float64_le">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_data" c:identifier="gst_byte_writer_put_data">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill" c:identifier="gst_byte_writer_fill">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="uint8" c:type="guint8"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_string_utf8"
              c:identifier="gst_byte_writer_put_string_utf8">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_string_utf16"
              c:identifier="gst_byte_writer_put_string_utf16">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="uint16" c:type="guint16*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_string_utf32"
              c:identifier="gst_byte_writer_put_string_utf32">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <constant name="CAN_INLINE" value="1">
      <type name="int"/>
    </constant>
    <constant name="CLOCK_ENTRY_TRACE_NAME" value="GstClockEntry">
      <type name="utf8"/>
    </constant>
    <constant name="CLOCK_TIME_NONE" value="-1">
      <type name="int"/>
    </constant>
    <record name="Caps"
            c:type="GstCaps"
            glib:type-name="GstCaps"
            glib:get-type="gst_caps_get_type">
      <doc xml:whitespace="preserve">Object describing media types.</doc>
      <field name="type" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="refcount" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="flags" writable="1">
        <type name="CapsFlags" c:type="GstCapsFlags"/>
      </field>
      <field name="structs" writable="1">
        <type name="GLib.PtrArray" c:type="GPtrArray*"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
      <constructor name="new_empty" c:identifier="gst_caps_new_empty">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </constructor>
      <constructor name="new_any" c:identifier="gst_caps_new_any">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </constructor>
      <constructor name="new_simple"
                   c:identifier="gst_caps_new_simple"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="media_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="gst_caps_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="struct1" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref" c:identifier="gst_caps_ref">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="copy" c:identifier="gst_caps_copy">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="make_writable" c:identifier="gst_caps_make_writable">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="gst_caps_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="append" c:identifier="gst_caps_append">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge" c:identifier="gst_caps_merge">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_structure" c:identifier="gst_caps_append_structure">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_structure" c:identifier="gst_caps_remove_structure">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="idx" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge_structure" c:identifier="gst_caps_merge_structure">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="gst_caps_get_size">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_structure" c:identifier="gst_caps_get_structure">
        <return-value transfer-ownership="full">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_structure" c:identifier="gst_caps_steal_structure">
        <return-value transfer-ownership="full">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_nth" c:identifier="gst_caps_copy_nth">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="nth" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="truncate" c:identifier="gst_caps_truncate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_value" c:identifier="gst_caps_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_simple"
              c:identifier="gst_caps_set_simple"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="is_any" c:identifier="gst_caps_is_any">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_empty" c:identifier="gst_caps_is_empty">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_fixed" c:identifier="gst_caps_is_fixed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_always_compatible"
              c:identifier="gst_caps_is_always_compatible">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_subset" c:identifier="gst_caps_is_subset">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="superset" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_equal" c:identifier="gst_caps_is_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_equal_fixed" c:identifier="gst_caps_is_equal_fixed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_intersect" c:identifier="gst_caps_can_intersect">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="intersect" c:identifier="gst_caps_intersect">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="subtract" c:identifier="gst_caps_subtract">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="subtrahend" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="union" c:identifier="gst_caps_union">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="caps2" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="normalize" c:identifier="gst_caps_normalize">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="do_simplify" c:identifier="gst_caps_do_simplify">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="save_thyself" c:identifier="gst_caps_save_thyself">
        <return-value transfer-ownership="full">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace" c:identifier="gst_caps_replace">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="newcaps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="gst_caps_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <bitfield name="CapsFlags"
              glib:type-name="GstCapsFlags"
              glib:get-type="gst_caps_flags_get_type"
              c:type="GstCapsFlags">
      <doc xml:whitespace="preserve">Extra flags for a caps.</doc>
      <member name="any"
              value="1"
              c:identifier="GST_CAPS_FLAGS_ANY"
              glib:nick="any"/>
    </bitfield>
    <interface name="ChildProxy"
               c:type="GstChildProxy"
               glib:type-name="GstChildProxy"
               glib:get-type="gst_child_proxy_get_type"
               glib:type-struct="ChildProxyInterface">
      <doc xml:whitespace="preserve">Opaque #GstChildProxy data structure.</doc>
      <prerequisite name="Object"/>
      <virtual-method name="get_child_by_index" invoker="get_child_by_index">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="GstObject*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_children_count" invoker="get_children_count">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </virtual-method>
      <method name="get_child_by_name"
              c:identifier="gst_child_proxy_get_child_by_name">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="GstObject*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_by_index"
              c:identifier="gst_child_proxy_get_child_by_index">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="GstObject*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children_count"
              c:identifier="gst_child_proxy_get_children_count">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <glib:signal name="child-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="child-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="ChildProxyInterface"
            c:type="GstChildProxyInterface"
            glib:is-gtype-struct-for="ChildProxy">
      <doc xml:whitespace="preserve">#GstChildProxy interface.</doc>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_child_by_index">
        <callback name="get_child_by_index" c:type="get_child_by_index">
          <return-value transfer-ownership="full">
            <type name="Object" c:type="GstObject*"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="ChildProxy" c:type="GstChildProxy*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <type name="uint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_children_count">
        <callback name="get_children_count" c:type="get_children_count">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="ChildProxy" c:type="GstChildProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_added">
        <callback name="child_added" c:type="child_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="ChildProxy" c:type="GstChildProxy*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_removed">
        <callback name="child_removed" c:type="child_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="ChildProxy" c:type="GstChildProxy*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <class name="Clock"
           c:type="GstClock"
           parent="Object"
           glib:type-name="GstClock"
           glib:get-type="gst_clock_get_type"
           glib:type-struct="ClockClass">
      <doc xml:whitespace="preserve">#GstClock base structure. The values of this structure are
protected for subclasses, use the methods to use the #GstClock.</doc>
      <function name="id_ref" c:identifier="gst_clock_id_ref">
        <return-value transfer-ownership="full">
          <type name="ClockID" c:type="GstClockID"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ClockID" c:type="GstClockID"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_unref" c:identifier="gst_clock_id_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ClockID" c:type="GstClockID"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_compare_func"
                c:identifier="gst_clock_id_compare_func">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="id1" transfer-ownership="none">
            <type name="any" c:type="gconstpointer"/>
          </parameter>
          <parameter name="id2" transfer-ownership="none">
            <type name="any" c:type="gconstpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_get_time" c:identifier="gst_clock_id_get_time">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ClockID" c:type="GstClockID"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_wait" c:identifier="gst_clock_id_wait">
        <return-value transfer-ownership="full">
          <type name="ClockReturn" c:type="GstClockReturn"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ClockID" c:type="GstClockID"/>
          </parameter>
          <parameter name="jitter" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff*"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_wait_async" c:identifier="gst_clock_id_wait_async">
        <return-value transfer-ownership="full">
          <type name="ClockReturn" c:type="GstClockReturn"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ClockID" c:type="GstClockID"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="ClockCallback" c:type="GstClockCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_wait_async_full"
                c:identifier="gst_clock_id_wait_async_full">
        <return-value transfer-ownership="full">
          <type name="ClockReturn" c:type="GstClockReturn"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ClockID" c:type="GstClockID"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="ClockCallback" c:type="GstClockCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_data"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_unschedule" c:identifier="gst_clock_id_unschedule">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="ClockID" c:type="GstClockID"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="change_resolution">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
        <parameters>
          <parameter name="old_resolution" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="new_resolution" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_resolution" invoker="get_resolution">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_internal_time" invoker="get_internal_time">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </virtual-method>
      <virtual-method name="wait">
        <return-value transfer-ownership="full">
          <type name="ClockReturn" c:type="GstClockReturn"/>
        </return-value>
        <parameters>
          <parameter name="entry" transfer-ownership="none">
            <type name="ClockEntry" c:type="GstClockEntry*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="wait_async">
        <return-value transfer-ownership="full">
          <type name="ClockReturn" c:type="GstClockReturn"/>
        </return-value>
        <parameters>
          <parameter name="entry" transfer-ownership="none">
            <type name="ClockEntry" c:type="GstClockEntry*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unschedule">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="entry" transfer-ownership="none">
            <type name="ClockEntry" c:type="GstClockEntry*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="wait_jitter">
        <return-value transfer-ownership="full">
          <type name="ClockReturn" c:type="GstClockReturn"/>
        </return-value>
        <parameters>
          <parameter name="entry" transfer-ownership="none">
            <type name="ClockEntry" c:type="GstClockEntry*"/>
          </parameter>
          <parameter name="jitter" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_resolution" c:identifier="gst_clock_set_resolution">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
        <parameters>
          <parameter name="resolution" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_resolution" c:identifier="gst_clock_get_resolution">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="get_time" c:identifier="gst_clock_get_time">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="set_calibration" c:identifier="gst_clock_set_calibration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="internal" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="external" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="rate_num" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="rate_denom" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_calibration" c:identifier="gst_clock_get_calibration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="internal" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="external" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="rate_num" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="rate_denom" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_master" c:identifier="gst_clock_set_master">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="master" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_master" c:identifier="gst_clock_get_master">
        <return-value transfer-ownership="full">
          <type name="Clock" c:type="GstClock*"/>
        </return-value>
      </method>
      <method name="add_observation" c:identifier="gst_clock_add_observation">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="slave" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="master" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="r_squared"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_internal_time"
              c:identifier="gst_clock_get_internal_time">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="adjust_unlocked" c:identifier="gst_clock_adjust_unlocked">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
        <parameters>
          <parameter name="internal" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="unadjust_unlocked"
              c:identifier="gst_clock_unadjust_unlocked">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
        <parameters>
          <parameter name="external" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_single_shot_id"
              c:identifier="gst_clock_new_single_shot_id">
        <return-value transfer-ownership="full">
          <type name="ClockID" c:type="GstClockID"/>
        </return-value>
        <parameters>
          <parameter name="time" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_periodic_id" c:identifier="gst_clock_new_periodic_id">
        <return-value transfer-ownership="full">
          <type name="ClockID" c:type="GstClockID"/>
        </return-value>
        <parameters>
          <parameter name="start_time" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="interval" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <property name="stats" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="timeout" writable="1" transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </property>
      <property name="window-size" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="window-threshold" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="slave_lock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="internal_calibration">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="external_calibration">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="rate_numerator">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="rate_denominator">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="last_time">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="entries">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="entries_changed">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="resolution">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="stats">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="master">
        <type name="Clock" c:type="GstClock*"/>
      </field>
      <field name="filling">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="window_size">
        <type name="int" c:type="gint"/>
      </field>
      <field name="window_threshold">
        <type name="int" c:type="gint"/>
      </field>
      <field name="time_index">
        <type name="int" c:type="gint"/>
      </field>
      <field name="timeout">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="times">
        <type name="ClockTime" c:type="GstClockTime*"/>
      </field>
      <field name="clockid">
        <type name="ClockID" c:type="GstClockID"/>
      </field>
      <union name="ABI" c:type="ABI">
        <field name="priv" writable="1">
          <type name="ClockPrivate" c:type="GstClockPrivate*"/>
        </field>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="GstClockTime" fixed-size="4">
            <type name="ClockTime"/>
          </array>
        </field>
      </union>
    </class>
    <callback name="ClockCallback" c:type="GstClockCallback">
      <doc xml:whitespace="preserve">The function prototype of the callback.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE or %FALSE (currently unused)</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="clock" transfer-ownership="none">
          <doc xml:whitespace="preserve">The clock that triggered the callback</doc>
          <type name="Clock" c:type="GstClock*"/>
        </parameter>
        <parameter name="time" transfer-ownership="none">
          <doc xml:whitespace="preserve">The time it was triggered</doc>
          <type name="ClockTime" c:type="GstClockTime"/>
        </parameter>
        <parameter name="id" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GstClockID that expired</doc>
          <type name="ClockID" c:type="GstClockID"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <doc xml:whitespace="preserve">user data passed in the gst_clock_id_wait_async() function</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ClockClass"
            c:type="GstClockClass"
            glib:is-gtype-struct-for="Clock">
      <doc xml:whitespace="preserve">GStreamer clock class. Override the vmethods to implement the clock
functionality.</doc>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="change_resolution">
        <callback name="change_resolution" c:type="change_resolution">
          <return-value transfer-ownership="full">
            <type name="ClockTime" c:type="GstClockTime"/>
          </return-value>
          <parameters>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
            <parameter name="old_resolution" transfer-ownership="none">
              <type name="ClockTime" c:type="GstClockTime"/>
            </parameter>
            <parameter name="new_resolution" transfer-ownership="none">
              <type name="ClockTime" c:type="GstClockTime"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_resolution">
        <callback name="get_resolution" c:type="get_resolution">
          <return-value transfer-ownership="full">
            <type name="ClockTime" c:type="GstClockTime"/>
          </return-value>
          <parameters>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_internal_time">
        <callback name="get_internal_time" c:type="get_internal_time">
          <return-value transfer-ownership="full">
            <type name="ClockTime" c:type="GstClockTime"/>
          </return-value>
          <parameters>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait">
        <callback name="wait" c:type="wait">
          <return-value transfer-ownership="full">
            <type name="ClockReturn" c:type="GstClockReturn"/>
          </return-value>
          <parameters>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
            <parameter name="entry" transfer-ownership="none">
              <type name="ClockEntry" c:type="GstClockEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait_async">
        <callback name="wait_async" c:type="wait_async">
          <return-value transfer-ownership="full">
            <type name="ClockReturn" c:type="GstClockReturn"/>
          </return-value>
          <parameters>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
            <parameter name="entry" transfer-ownership="none">
              <type name="ClockEntry" c:type="GstClockEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unschedule">
        <callback name="unschedule" c:type="unschedule">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
            <parameter name="entry" transfer-ownership="none">
              <type name="ClockEntry" c:type="GstClockEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait_jitter">
        <callback name="wait_jitter" c:type="wait_jitter">
          <return-value transfer-ownership="full">
            <type name="ClockReturn" c:type="GstClockReturn"/>
          </return-value>
          <parameters>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
            <parameter name="entry" transfer-ownership="none">
              <type name="ClockEntry" c:type="GstClockEntry*"/>
            </parameter>
            <parameter name="jitter" transfer-ownership="none">
              <type name="ClockTimeDiff" c:type="GstClockTimeDiff*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="ClockEntry" c:type="GstClockEntry">
      <doc xml:whitespace="preserve">All pending timeouts or periodic notifies are converted into
an entry.
Note that GstClockEntry should be treated as an opaque structure. It must
not be extended or allocated using a custom allocator.</doc>
      <field name="refcount" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="clock" writable="1">
        <type name="Clock" c:type="GstClock*"/>
      </field>
      <field name="type" writable="1">
        <type name="ClockEntryType" c:type="GstClockEntryType"/>
      </field>
      <field name="time" writable="1">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="interval" writable="1">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="status" writable="1">
        <type name="ClockReturn" c:type="GstClockReturn"/>
      </field>
      <field name="func" writable="1">
        <type name="ClockCallback" c:type="GstClockCallback"/>
      </field>
      <field name="user_data" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="destroy_data" writable="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
    </record>
    <enumeration name="ClockEntryType"
                 glib:type-name="GstClockEntryType"
                 glib:get-type="gst_clock_entry_type_get_type"
                 c:type="GstClockEntryType">
      <doc xml:whitespace="preserve">The type of the clock entry</doc>
      <member name="single"
              value="0"
              c:identifier="GST_CLOCK_ENTRY_SINGLE"
              glib:nick="single"/>
      <member name="periodic"
              value="1"
              c:identifier="GST_CLOCK_ENTRY_PERIODIC"
              glib:nick="periodic"/>
    </enumeration>
    <bitfield name="ClockFlags"
              glib:type-name="GstClockFlags"
              glib:get-type="gst_clock_flags_get_type"
              c:type="GstClockFlags">
      <doc xml:whitespace="preserve">The capabilities of this clock</doc>
      <member name="can_do_single_sync"
              value="16"
              c:identifier="GST_CLOCK_FLAG_CAN_DO_SINGLE_SYNC"
              glib:nick="can-do-single-sync"/>
      <member name="can_do_single_async"
              value="32"
              c:identifier="GST_CLOCK_FLAG_CAN_DO_SINGLE_ASYNC"
              glib:nick="can-do-single-async"/>
      <member name="can_do_periodic_sync"
              value="64"
              c:identifier="GST_CLOCK_FLAG_CAN_DO_PERIODIC_SYNC"
              glib:nick="can-do-periodic-sync"/>
      <member name="can_do_periodic_async"
              value="128"
              c:identifier="GST_CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC"
              glib:nick="can-do-periodic-async"/>
      <member name="can_set_resolution"
              value="256"
              c:identifier="GST_CLOCK_FLAG_CAN_SET_RESOLUTION"
              glib:nick="can-set-resolution"/>
      <member name="can_set_master"
              value="512"
              c:identifier="GST_CLOCK_FLAG_CAN_SET_MASTER"
              glib:nick="can-set-master"/>
      <member name="last"
              value="4096"
              c:identifier="GST_CLOCK_FLAG_LAST"
              glib:nick="last"/>
    </bitfield>
    <record name="ClockPrivate" c:type="GstClockPrivate">
    </record>
    <enumeration name="ClockReturn"
                 glib:type-name="GstClockReturn"
                 glib:get-type="gst_clock_return_get_type"
                 c:type="GstClockReturn">
      <doc xml:whitespace="preserve">The return value of a clock operation.</doc>
      <member name="ok" value="0" c:identifier="GST_CLOCK_OK" glib:nick="ok"/>
      <member name="early"
              value="1"
              c:identifier="GST_CLOCK_EARLY"
              glib:nick="early"/>
      <member name="unscheduled"
              value="2"
              c:identifier="GST_CLOCK_UNSCHEDULED"
              glib:nick="unscheduled"/>
      <member name="busy"
              value="3"
              c:identifier="GST_CLOCK_BUSY"
              glib:nick="busy"/>
      <member name="badtime"
              value="4"
              c:identifier="GST_CLOCK_BADTIME"
              glib:nick="badtime"/>
      <member name="error"
              value="5"
              c:identifier="GST_CLOCK_ERROR"
              glib:nick="error"/>
      <member name="unsupported"
              value="6"
              c:identifier="GST_CLOCK_UNSUPPORTED"
              glib:nick="unsupported"/>
    </enumeration>
    <enumeration name="ClockType"
                 glib:type-name="GstClockType"
                 glib:get-type="gst_clock_type_get_type"
                 c:type="GstClockType">
      <doc xml:whitespace="preserve">The different kind of clocks.</doc>
      <member name="realtime"
              value="0"
              c:identifier="GST_CLOCK_TYPE_REALTIME"
              glib:nick="realtime"/>
      <member name="monotonic"
              value="1"
              c:identifier="GST_CLOCK_TYPE_MONOTONIC"
              glib:nick="monotonic"/>
    </enumeration>
    <record name="CollectData" c:type="GstCollectData">
      <doc xml:whitespace="preserve">Structure used by the collect_pads.</doc>
      <field name="collect" writable="1">
        <type name="CollectPads" c:type="GstCollectPads*"/>
      </field>
      <field name="pad" writable="1">
        <type name="Pad" c:type="GstPad*"/>
      </field>
      <field name="buffer" writable="1">
        <type name="Buffer" c:type="GstBuffer*"/>
      </field>
      <field name="pos" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="segment" writable="1">
        <type name="Segment" c:type="GstSegment"/>
      </field>
      <union name="abidata" c:type="abidata">
        <record name="ABI" c:type="ABI">
          <field name="flushing" writable="1">
            <type name="boolean" c:type="gboolean"/>
          </field>
          <field name="new_segment" writable="1">
            <type name="boolean" c:type="gboolean"/>
          </field>
          <field name="eos" writable="1">
            <type name="boolean" c:type="gboolean"/>
          </field>
          <field name="refcount" writable="1">
            <type name="int" c:type="gint"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="4">
            <type name="any"/>
          </array>
        </field>
      </union>
    </record>
    <callback name="CollectDataDestroyNotify"
              c:type="GstCollectDataDestroyNotify"
              version="0.10.12">
      <doc xml:whitespace="preserve">A function that will be called when the #GstCollectData will be freed.
It is passed the pointer to the structure and should free any custom
memory and resources allocated for it.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstCollectData that will be freed</doc>
          <type name="CollectData" c:type="GstCollectData*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="CollectPads"
           c:type="GstCollectPads"
           parent="Object"
           glib:type-name="GstCollectPads"
           glib:get-type="gst_collect_pads_get_type"
           glib:type-struct="CollectPadsClass">
      <doc xml:whitespace="preserve">Collectpads object.
Note that @data doesn't contain the complete #GstCollectData list
at all times and should not be used for iterating them.</doc>
      <constructor name="new" c:identifier="gst_collect_pads_new">
        <return-value transfer-ownership="full">
          <type name="CollectPads" c:type="GstCollectPads*"/>
        </return-value>
      </constructor>
      <method name="set_function" c:identifier="gst_collect_pads_set_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="CollectPadsFunction" c:type="GstCollectPadsFunction"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip_function"
              c:identifier="gst_collect_pads_set_clip_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="clipfunc"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="CollectPadsClipFunction"
                  c:type="GstCollectPadsClipFunction"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_pad" c:identifier="gst_collect_pads_add_pad">
        <return-value transfer-ownership="full">
          <type name="CollectData" c:type="GstCollectData*"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_pad_full" c:identifier="gst_collect_pads_add_pad_full">
        <return-value transfer-ownership="full">
          <type name="CollectData" c:type="GstCollectData*"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="destroy_notify"
                     transfer-ownership="none"
                     scope="call">
            <type name="CollectDataDestroyNotify"
                  c:type="GstCollectDataDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_pad" c:identifier="gst_collect_pads_remove_pad">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_active" c:identifier="gst_collect_pads_is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="collect" c:identifier="gst_collect_pads_collect">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
      </method>
      <method name="collect_range"
              c:identifier="gst_collect_pads_collect_range">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="start" c:identifier="gst_collect_pads_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="gst_collect_pads_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_flushing" c:identifier="gst_collect_pads_set_flushing">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flushing" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek" c:identifier="gst_collect_pads_peek">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="CollectData" c:type="GstCollectData*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop" c:identifier="gst_collect_pads_pop">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="CollectData" c:type="GstCollectData*"/>
          </parameter>
        </parameters>
      </method>
      <method name="available" c:identifier="gst_collect_pads_available">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="read" c:identifier="gst_collect_pads_read">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="CollectData" c:type="GstCollectData*"/>
          </parameter>
          <parameter name="bytes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint8" c:type="guint8**"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_buffer" c:identifier="gst_collect_pads_read_buffer">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="CollectData" c:type="GstCollectData*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_buffer" c:identifier="gst_collect_pads_take_buffer">
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="CollectData" c:type="GstCollectData*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="gst_collect_pads_flush">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="CollectData" c:type="GstCollectData*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="data">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="cookie">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="cond">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="func">
        <type name="CollectPadsFunction" c:type="GstCollectPadsFunction"/>
      </field>
      <field name="user_data">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="numpads">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="queuedpads">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="eospads">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="started">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <union name="abidata" c:type="abidata">
        <record name="ABI" c:type="ABI">
          <field name="pad_lock" writable="1">
            <type name="GLib.Mutex" c:type="GMutex*"/>
          </field>
          <field name="pad_list" writable="1">
            <type name="GLib.SList" c:type="GSList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </field>
          <field name="pad_cookie" writable="1">
            <type name="uint32" c:type="guint32"/>
          </field>
          <field name="priv" writable="1">
            <type name="CollectPadsPrivate" c:type="GstCollectPadsPrivate*"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="4">
            <type name="any"/>
          </array>
        </field>
      </union>
    </class>
    <record name="CollectPadsClass"
            c:type="GstCollectPadsClass"
            glib:is-gtype-struct-for="CollectPads">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="CollectPadsClipFunction"
              c:type="GstCollectPadsClipFunction"
              version="0.10.26">
      <doc xml:whitespace="preserve">A function that will be called when @buffer is received on the pad managed
by @data in the collecpad object @pads.
The function should use the segment of @data and the negotiated media type on
the pad to perform clipping of @buffer. 
This function takes ownership of @buffer.
the buffer has been clipped completely.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a #GstBuffer that contains the clipped data of @buffer or NULL when</doc>
        <type name="Buffer" c:type="GstBuffer*"/>
      </return-value>
      <parameters>
        <parameter name="pads" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstCollectPads</doc>
          <type name="CollectPads" c:type="GstCollectPads*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstCollectData</doc>
          <type name="CollectData" c:type="GstCollectData*"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstBuffer</doc>
          <type name="Buffer" c:type="GstBuffer*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <doc xml:whitespace="preserve">user data</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="CollectPadsFunction" c:type="GstCollectPadsFunction">
      <doc xml:whitespace="preserve">A function that will be called when all pads have received data.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">#GST_FLOW_OK for success</doc>
        <type name="FlowReturn" c:type="GstFlowReturn"/>
      </return-value>
      <parameters>
        <parameter name="pads" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstCollectPads that triggered the callback</doc>
          <type name="CollectPads" c:type="GstCollectPads*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:whitespace="preserve">user data passed to gst_collect_pads_set_function()</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="CollectPadsPrivate" c:type="GstCollectPadsPrivate">
    </record>
    <callback name="CopyFunction" c:type="GstCopyFunction" version="0.10.25">
      <doc xml:whitespace="preserve">A function to create a copy of some object or
increase its reference count.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">a copy of the object or the same object with increased reference count</doc>
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object to copy</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="CoreError"
                 glib:type-name="GstCoreError"
                 glib:get-type="gst_core_error_get_type"
                 c:type="GstCoreError"
                 glib:error-quark="gst_core_error_quark">
      <doc xml:whitespace="preserve">Core errors are errors inside the core GStreamer library.</doc>
      <member name="failed"
              value="1"
              c:identifier="GST_CORE_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="too_lazy"
              value="2"
              c:identifier="GST_CORE_ERROR_TOO_LAZY"
              glib:nick="too-lazy"/>
      <member name="not_implemented"
              value="3"
              c:identifier="GST_CORE_ERROR_NOT_IMPLEMENTED"
              glib:nick="not-implemented"/>
      <member name="state_change"
              value="4"
              c:identifier="GST_CORE_ERROR_STATE_CHANGE"
              glib:nick="state-change"/>
      <member name="pad"
              value="5"
              c:identifier="GST_CORE_ERROR_PAD"
              glib:nick="pad"/>
      <member name="thread"
              value="6"
              c:identifier="GST_CORE_ERROR_THREAD"
              glib:nick="thread"/>
      <member name="negotiation"
              value="7"
              c:identifier="GST_CORE_ERROR_NEGOTIATION"
              glib:nick="negotiation"/>
      <member name="event"
              value="8"
              c:identifier="GST_CORE_ERROR_EVENT"
              glib:nick="event"/>
      <member name="seek"
              value="9"
              c:identifier="GST_CORE_ERROR_SEEK"
              glib:nick="seek"/>
      <member name="caps"
              value="10"
              c:identifier="GST_CORE_ERROR_CAPS"
              glib:nick="caps"/>
      <member name="tag"
              value="11"
              c:identifier="GST_CORE_ERROR_TAG"
              glib:nick="tag"/>
      <member name="missing_plugin"
              value="12"
              c:identifier="GST_CORE_ERROR_MISSING_PLUGIN"
              glib:nick="missing-plugin"/>
      <member name="clock"
              value="13"
              c:identifier="GST_CORE_ERROR_CLOCK"
              glib:nick="clock"/>
      <member name="disabled"
              value="14"
              c:identifier="GST_CORE_ERROR_DISABLED"
              glib:nick="disabled"/>
      <member name="num_errors"
              value="15"
              c:identifier="GST_CORE_ERROR_NUM_ERRORS"
              glib:nick="num-errors"/>
    </enumeration>
    <constant name="DEBUG_BG_MASK" value="240">
      <type name="int"/>
    </constant>
    <constant name="DEBUG_FG_MASK" value="15">
      <type name="int"/>
    </constant>
    <constant name="DEBUG_FORMAT_MASK" value="65280">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_ALLOC_TRACE" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_GST_DEBUG" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_LOADSAVE" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_LOADSAVE_REGISTRY" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_PARSE" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_PLUGIN" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_REGISTRY" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_TRACE" value="1">
      <type name="int"/>
    </constant>
    <constant name="DISABLE_XML" value="1">
      <type name="int"/>
    </constant>
    <class name="DataQueue"
           c:type="GstDataQueue"
           parent="GObject.Object"
           glib:type-name="GstDataQueue"
           glib:get-type="gst_data_queue_get_type"
           glib:type-struct="DataQueueClass">
      <doc xml:whitespace="preserve">Opaque #GstDataQueue structure.</doc>
      <constructor name="new" c:identifier="gst_data_queue_new">
        <return-value transfer-ownership="full">
          <type name="DataQueue" c:type="GstDataQueue*"/>
        </return-value>
        <parameters>
          <parameter name="checkfull"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <type name="DataQueueCheckFullFunction"
                  c:type="GstDataQueueCheckFullFunction"/>
          </parameter>
          <parameter name="checkdata" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full" c:identifier="gst_data_queue_new_full">
        <return-value transfer-ownership="full">
          <type name="DataQueue" c:type="GstDataQueue*"/>
        </return-value>
        <parameters>
          <parameter name="checkfull" transfer-ownership="none" scope="call">
            <type name="DataQueueCheckFullFunction"
                  c:type="GstDataQueueCheckFullFunction"/>
          </parameter>
          <parameter name="fullcallback"
                     transfer-ownership="none"
                     scope="call">
            <type name="DataQueueFullCallback"
                  c:type="GstDataQueueFullCallback"/>
          </parameter>
          <parameter name="emptycallback"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <type name="DataQueueEmptyCallback"
                  c:type="GstDataQueueEmptyCallback"/>
          </parameter>
          <parameter name="checkdata" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="push" c:identifier="gst_data_queue_push">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="item" transfer-ownership="none">
            <type name="DataQueueItem" c:type="GstDataQueueItem*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop" c:identifier="gst_data_queue_pop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="item" transfer-ownership="none">
            <type name="DataQueueItem" c:type="GstDataQueueItem**"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="gst_data_queue_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_flushing" c:identifier="gst_data_queue_set_flushing">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flushing" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="drop_head" c:identifier="gst_data_queue_drop_head">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_full" c:identifier="gst_data_queue_is_full">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_empty" c:identifier="gst_data_queue_is_empty">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_level" c:identifier="gst_data_queue_get_level">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="level" transfer-ownership="none">
            <type name="DataQueueSize" c:type="GstDataQueueSize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="limits_changed"
              c:identifier="gst_data_queue_limits_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="current-level-bytes" transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="current-level-time" transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </property>
      <property name="current-level-visible" transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="queue">
        <type name="GLib.Queue" c:type="GQueue*"/>
      </field>
      <field name="cur_level">
        <type name="DataQueueSize" c:type="GstDataQueueSize"/>
      </field>
      <field name="checkfull">
        <type name="DataQueueCheckFullFunction"
              c:type="GstDataQueueCheckFullFunction"/>
      </field>
      <field name="checkdata">
        <type name="any" c:type="gpointer*"/>
      </field>
      <field name="qlock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="item_add">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="item_del">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="flushing">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="fullcallback">
        <type name="DataQueueFullCallback" c:type="GstDataQueueFullCallback"/>
      </field>
      <field name="emptycallback">
        <type name="DataQueueEmptyCallback"
              c:type="GstDataQueueEmptyCallback"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="2">
          <type name="any"/>
        </array>
      </field>
      <glib:signal name="empty">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="full">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <callback name="DataQueueCheckFullFunction"
              c:type="GstDataQueueCheckFullFunction">
      <doc xml:whitespace="preserve">The prototype of the function used to inform the queue that it should be
considered as full.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">#TRUE if the queue should be considered full.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="queue" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstDataQueue.</doc>
          <type name="DataQueue" c:type="GstDataQueue*"/>
        </parameter>
        <parameter name="visible" transfer-ownership="none">
          <doc xml:whitespace="preserve">The number of visible items currently in the queue.</doc>
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="bytes" transfer-ownership="none">
          <doc xml:whitespace="preserve">The amount of bytes currently in the queue.</doc>
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="time" transfer-ownership="none">
          <doc xml:whitespace="preserve">The accumulated duration of the items currently in the queue.</doc>
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="checkdata" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #gpointer registered when the #GstDataQueue was created.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="DataQueueClass"
            c:type="GstDataQueueClass"
            glib:is-gtype-struct-for="DataQueue">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="empty">
        <callback name="empty" c:type="empty">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="queue" transfer-ownership="none">
              <type name="DataQueue" c:type="GstDataQueue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="full">
        <callback name="full" c:type="full">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="queue" transfer-ownership="none">
              <type name="DataQueue" c:type="GstDataQueue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="DataQueueEmptyCallback" c:type="GstDataQueueEmptyCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="queue" transfer-ownership="none">
          <type name="DataQueue" c:type="GstDataQueue*"/>
        </parameter>
        <parameter name="checkdata" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="DataQueueFullCallback" c:type="GstDataQueueFullCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="queue" transfer-ownership="none">
          <type name="DataQueue" c:type="GstDataQueue*"/>
        </parameter>
        <parameter name="checkdata" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="DataQueueItem" c:type="GstDataQueueItem">
      <doc xml:whitespace="preserve">Structure used by #GstDataQueue. You can supply a different structure, as
long as the top of the structure is identical to this structure.</doc>
      <field name="object" writable="1">
        <type name="MiniObject" c:type="GstMiniObject*"/>
      </field>
      <field name="size" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="duration" writable="1">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="visible" writable="1">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="destroy" writable="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
    </record>
    <record name="DataQueueSize" c:type="GstDataQueueSize">
      <doc xml:whitespace="preserve">Structure describing the size of a queue.</doc>
      <field name="visible" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="bytes" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="time" writable="1">
        <type name="uint64" c:type="guint64"/>
      </field>
    </record>
    <glib:boxed c:type="GstDate"
                glib:name="Date"
                glib:type-name="GstDate"
                glib:get-type="gst_date_get_type">
    </glib:boxed>
    <record name="DebugCategory" c:type="GstDebugCategory">
      <doc xml:whitespace="preserve">This is the struct that describes the categories. Once initialized with
#GST_DEBUG_CATEGORY_INIT, its values can't be changed anymore.</doc>
      <field name="threshold" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="color" writable="1">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <method name="free" c:identifier="gst_debug_category_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_threshold"
              c:identifier="gst_debug_category_set_threshold">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="level" transfer-ownership="none">
            <type name="DebugLevel" c:type="GstDebugLevel"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_threshold"
              c:identifier="gst_debug_category_reset_threshold">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_threshold"
              c:identifier="gst_debug_category_get_threshold">
        <return-value transfer-ownership="full">
          <type name="DebugLevel" c:type="GstDebugLevel"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="gst_debug_category_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_color" c:identifier="gst_debug_category_get_color">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_description"
              c:identifier="gst_debug_category_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="DebugColorFlags"
                 glib:type-name="GstDebugColorFlags"
                 glib:get-type="gst_debug_color_flags_get_type"
                 c:type="GstDebugColorFlags">
      <doc xml:whitespace="preserve">These are some terminal style flags you can use when creating your
debugging categories to make them stand out in debugging output.</doc>
      <member name="fg_black"
              value="0"
              c:identifier="GST_DEBUG_FG_BLACK"
              glib:nick="fg-black"/>
      <member name="fg_red"
              value="1"
              c:identifier="GST_DEBUG_FG_RED"
              glib:nick="fg-red"/>
      <member name="fg_green"
              value="2"
              c:identifier="GST_DEBUG_FG_GREEN"
              glib:nick="fg-green"/>
      <member name="fg_yellow"
              value="3"
              c:identifier="GST_DEBUG_FG_YELLOW"
              glib:nick="fg-yellow"/>
      <member name="fg_blue"
              value="4"
              c:identifier="GST_DEBUG_FG_BLUE"
              glib:nick="fg-blue"/>
      <member name="fg_magenta"
              value="5"
              c:identifier="GST_DEBUG_FG_MAGENTA"
              glib:nick="fg-magenta"/>
      <member name="fg_cyan"
              value="6"
              c:identifier="GST_DEBUG_FG_CYAN"
              glib:nick="fg-cyan"/>
      <member name="fg_white"
              value="7"
              c:identifier="GST_DEBUG_FG_WHITE"
              glib:nick="fg-white"/>
      <member name="bg_black"
              value="0"
              c:identifier="GST_DEBUG_BG_BLACK"
              glib:nick="bg-black"/>
      <member name="bg_red"
              value="16"
              c:identifier="GST_DEBUG_BG_RED"
              glib:nick="bg-red"/>
      <member name="bg_green"
              value="32"
              c:identifier="GST_DEBUG_BG_GREEN"
              glib:nick="bg-green"/>
      <member name="bg_yellow"
              value="48"
              c:identifier="GST_DEBUG_BG_YELLOW"
              glib:nick="bg-yellow"/>
      <member name="bg_blue"
              value="64"
              c:identifier="GST_DEBUG_BG_BLUE"
              glib:nick="bg-blue"/>
      <member name="bg_magenta"
              value="80"
              c:identifier="GST_DEBUG_BG_MAGENTA"
              glib:nick="bg-magenta"/>
      <member name="bg_cyan"
              value="96"
              c:identifier="GST_DEBUG_BG_CYAN"
              glib:nick="bg-cyan"/>
      <member name="bg_white"
              value="112"
              c:identifier="GST_DEBUG_BG_WHITE"
              glib:nick="bg-white"/>
      <member name="bold"
              value="256"
              c:identifier="GST_DEBUG_BOLD"
              glib:nick="bold"/>
      <member name="underline"
              value="512"
              c:identifier="GST_DEBUG_UNDERLINE"
              glib:nick="underline"/>
    </enumeration>
    <callback name="DebugFuncPtr" c:type="GstDebugFuncPtr">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </callback>
    <bitfield name="DebugGraphDetails"
              version="0.10.15"
              glib:type-name="GstDebugGraphDetails"
              glib:get-type="gst_debug_graph_details_get_type"
              c:type="GstDebugGraphDetails">
      <doc xml:whitespace="preserve">Available details for pipeline graphs produced by GST_DEBUG_BIN_TO_DOT_FILE()
and GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS().</doc>
      <member name="media_type"
              value="1"
              c:identifier="GST_DEBUG_GRAPH_SHOW_MEDIA_TYPE"
              glib:nick="media-type"/>
      <member name="caps_details"
              value="2"
              c:identifier="GST_DEBUG_GRAPH_SHOW_CAPS_DETAILS"
              glib:nick="caps-details"/>
      <member name="non_default_params"
              value="4"
              c:identifier="GST_DEBUG_GRAPH_SHOW_NON_DEFAULT_PARAMS"
              glib:nick="non-default-params"/>
      <member name="states"
              value="8"
              c:identifier="GST_DEBUG_GRAPH_SHOW_STATES"
              glib:nick="states"/>
      <member name="all"
              value="15"
              c:identifier="GST_DEBUG_GRAPH_SHOW_ALL"
              glib:nick="all"/>
    </bitfield>
    <enumeration name="DebugLevel"
                 glib:type-name="GstDebugLevel"
                 glib:get-type="gst_debug_level_get_type"
                 c:type="GstDebugLevel">
      <doc xml:whitespace="preserve">The level defines the importance of a debugging message. The more important a
message is, the greater the probability that the debugging system outputs it.</doc>
      <member name="none"
              value="0"
              c:identifier="GST_LEVEL_NONE"
              glib:nick="none"/>
      <member name="error"
              value="1"
              c:identifier="GST_LEVEL_ERROR"
              glib:nick="error"/>
      <member name="warning"
              value="2"
              c:identifier="GST_LEVEL_WARNING"
              glib:nick="warning"/>
      <member name="info"
              value="3"
              c:identifier="GST_LEVEL_INFO"
              glib:nick="info"/>
      <member name="debug"
              value="4"
              c:identifier="GST_LEVEL_DEBUG"
              glib:nick="debug"/>
      <member name="log"
              value="5"
              c:identifier="GST_LEVEL_LOG"
              glib:nick="log"/>
      <member name="fixme"
              value="6"
              c:identifier="GST_LEVEL_FIXME"
              glib:nick="fixme"/>
      <member name="trace"
              value="7"
              c:identifier="GST_LEVEL_TRACE"
              glib:nick="trace"/>
      <member name="memdump"
              value="9"
              c:identifier="GST_LEVEL_MEMDUMP"
              glib:nick="memdump"/>
      <member name="count"
              value="10"
              c:identifier="GST_LEVEL_COUNT"
              glib:nick="count"/>
    </enumeration>
    <record name="DebugMessage" c:type="GstDebugMessage">
      <method name="get" c:identifier="gst_debug_message_get">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </record>
    <constant name="ERROR_SYSTEM" value="system error: %s">
      <type name="utf8"/>
    </constant>
    <constant name="EVENT_TRACE_NAME" value="GstEvent">
      <type name="utf8"/>
    </constant>
    <constant name="EVENT_TYPE_BOTH" value="0">
      <type name="int"/>
    </constant>
    <constant name="EVENT_TYPE_SHIFT" value="4">
      <type name="int"/>
    </constant>
    <class name="Element"
           c:type="GstElement"
           parent="Object"
           abstract="1"
           glib:type-name="GstElement"
           glib:get-type="gst_element_get_type"
           glib:type-struct="ElementClass">
      <doc xml:whitespace="preserve">GStreamer element abstract base class.</doc>
      <function name="register" c:identifier="gst_element_register">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="GstPlugin*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="rank" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </function>
      <function name="make_from_uri" c:identifier="gst_element_make_from_uri">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="URIType" c:type="GstURIType"/>
          </parameter>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="elementname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="state_get_name"
                c:identifier="gst_element_state_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="State" c:type="GstState"/>
          </parameter>
        </parameters>
      </function>
      <function name="state_change_return_get_name"
                c:identifier="gst_element_state_change_return_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="state_ret" transfer-ownership="none">
            <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="request_new_pad">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="templ" transfer-ownership="none">
            <type name="PadTemplate" c:type="GstPadTemplate*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="release_pad">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_state" invoker="get_state">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
        <parameters>
          <parameter name="state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
          <parameter name="pending"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_state" invoker="set_state">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="State" c:type="GstState"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="change_state" invoker="change_state">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
        <parameters>
          <parameter name="transition" transfer-ownership="none">
            <type name="StateChange" c:type="GstStateChange"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_bus" invoker="set_bus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus" transfer-ownership="none">
            <type name="Bus" c:type="GstBus*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="provide_clock" invoker="provide_clock">
        <return-value transfer-ownership="full">
          <type name="Clock" c:type="GstClock*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_clock" invoker="set_clock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_index" invoker="get_index">
        <return-value transfer-ownership="full">
          <type name="Index" c:type="GstIndex*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_index" invoker="set_index">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="Index" c:type="GstIndex*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="send_event" invoker="send_event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_query_types" invoker="get_query_types">
        <return-value transfer-ownership="none">
          <type name="QueryType" c:type="GstQueryType*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="query" invoker="query">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="requires_clock" c:identifier="gst_element_requires_clock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="provides_clock" c:identifier="gst_element_provides_clock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="provide_clock" c:identifier="gst_element_provide_clock">
        <return-value transfer-ownership="full">
          <type name="Clock" c:type="GstClock*"/>
        </return-value>
      </method>
      <method name="get_clock" c:identifier="gst_element_get_clock">
        <return-value transfer-ownership="full">
          <type name="Clock" c:type="GstClock*"/>
        </return-value>
      </method>
      <method name="set_clock" c:identifier="gst_element_set_clock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_base_time" c:identifier="gst_element_set_base_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="time" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_base_time" c:identifier="gst_element_get_base_time">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="set_start_time" c:identifier="gst_element_set_start_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="time" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_start_time" c:identifier="gst_element_get_start_time">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="is_indexable" c:identifier="gst_element_is_indexable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_index" c:identifier="gst_element_set_index">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="Index" c:type="GstIndex*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_index" c:identifier="gst_element_get_index">
        <return-value transfer-ownership="full">
          <type name="Index" c:type="GstIndex*"/>
        </return-value>
      </method>
      <method name="set_bus" c:identifier="gst_element_set_bus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus" transfer-ownership="none">
            <type name="Bus" c:type="GstBus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bus" c:identifier="gst_element_get_bus">
        <return-value transfer-ownership="full">
          <type name="Bus" c:type="GstBus*"/>
        </return-value>
      </method>
      <method name="add_pad" c:identifier="gst_element_add_pad">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_pad" c:identifier="gst_element_remove_pad">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="no_more_pads" c:identifier="gst_element_no_more_pads">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_pad" c:identifier="gst_element_get_pad">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_static_pad" c:identifier="gst_element_get_static_pad">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_request_pad"
              c:identifier="gst_element_get_request_pad">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="release_request_pad"
              c:identifier="gst_element_release_request_pad">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="iterate_pads" c:identifier="gst_element_iterate_pads">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_src_pads"
              c:identifier="gst_element_iterate_src_pads">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_sink_pads"
              c:identifier="gst_element_iterate_sink_pads">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="send_event" c:identifier="gst_element_send_event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="seek" c:identifier="gst_element_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="SeekFlags" c:type="GstSeekFlags"/>
          </parameter>
          <parameter name="cur_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType"/>
          </parameter>
          <parameter name="cur" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_query_types"
              c:identifier="gst_element_get_query_types">
        <return-value transfer-ownership="none">
          <type name="QueryType" c:type="GstQueryType*"/>
        </return-value>
      </method>
      <method name="query" c:identifier="gst_element_query">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </method>
      <method name="post_message" c:identifier="gst_element_post_message">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="Message" c:type="GstMessage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="message_full" c:identifier="gst_element_message_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="MessageType" c:type="GstMessageType"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="debug" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="file" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="function" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="line" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_locked_state"
              c:identifier="gst_element_is_locked_state">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_locked_state"
              c:identifier="gst_element_set_locked_state">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="locked_state" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="sync_state_with_parent"
              c:identifier="gst_element_sync_state_with_parent">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_state" c:identifier="gst_element_get_state">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
        <parameters>
          <parameter name="state"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
          <parameter name="pending"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_state" c:identifier="gst_element_set_state">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="State" c:type="GstState"/>
          </parameter>
        </parameters>
      </method>
      <method name="abort_state" c:identifier="gst_element_abort_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="change_state" c:identifier="gst_element_change_state">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
        <parameters>
          <parameter name="transition" transfer-ownership="none">
            <type name="StateChange" c:type="GstStateChange"/>
          </parameter>
        </parameters>
      </method>
      <method name="continue_state" c:identifier="gst_element_continue_state">
        <return-value transfer-ownership="full">
          <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
        </return-value>
        <parameters>
          <parameter name="ret" transfer-ownership="none">
            <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
          </parameter>
        </parameters>
      </method>
      <method name="lost_state" c:identifier="gst_element_lost_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="lost_state_full"
              c:identifier="gst_element_lost_state_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="new_base_time" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_factory" c:identifier="gst_element_get_factory">
        <return-value transfer-ownership="full">
          <type name="ElementFactory" c:type="GstElementFactory*"/>
        </return-value>
      </method>
      <method name="implements_interface"
              c:identifier="gst_element_implements_interface">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iface_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_all_pads"
              c:identifier="gst_element_create_all_pads">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_compatible_pad"
              c:identifier="gst_element_get_compatible_pad">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_compatible_pad_template"
              c:identifier="gst_element_get_compatible_pad_template">
        <return-value transfer-ownership="full">
          <type name="PadTemplate" c:type="GstPadTemplate*"/>
        </return-value>
        <parameters>
          <parameter name="compattempl" transfer-ownership="none">
            <type name="PadTemplate" c:type="GstPadTemplate*"/>
          </parameter>
        </parameters>
      </method>
      <method name="link" c:identifier="gst_element_link">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="link_many"
              c:identifier="gst_element_link_many"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element_2" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="link_filtered" c:identifier="gst_element_link_filtered">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="filter" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlink" c:identifier="gst_element_unlink">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlink_many"
              c:identifier="gst_element_unlink_many"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="element_2" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="link_pads" c:identifier="gst_element_link_pads">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="srcpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="destpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="link_pads_full" c:identifier="gst_element_link_pads_full">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="srcpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="destpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="PadLinkCheck" c:type="GstPadLinkCheck"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlink_pads" c:identifier="gst_element_unlink_pads">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="srcpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="destpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="link_pads_filtered"
              c:identifier="gst_element_link_pads_filtered">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="srcpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="destpadname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="filter" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="seek_simple" c:identifier="gst_element_seek_simple">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="seek_flags" transfer-ownership="none">
            <type name="SeekFlags" c:type="GstSeekFlags"/>
          </parameter>
          <parameter name="seek_pos" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_position" c:identifier="gst_element_query_position">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:whitespace="preserve">(inout)</doc>
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="cur"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">(out)</doc>
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_duration" c:identifier="gst_element_query_duration">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:whitespace="preserve">(inout)</doc>
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">(out)</doc>
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_convert" c:identifier="gst_element_query_convert">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="src_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="src_val" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="dest_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="dest_val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="found_tags_for_pad"
              c:identifier="gst_element_found_tags_for_pad">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
          <parameter name="list" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="found_tags" c:identifier="gst_element_found_tags">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="state_lock">
        <type name="GLib.StaticRecMutex" c:type="GStaticRecMutex*"/>
      </field>
      <field name="state_cond">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="state_cookie">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="current_state">
        <type name="State" c:type="GstState"/>
      </field>
      <field name="next_state">
        <type name="State" c:type="GstState"/>
      </field>
      <field name="pending_state">
        <type name="State" c:type="GstState"/>
      </field>
      <field name="last_return">
        <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
      </field>
      <field name="bus">
        <type name="Bus" c:type="GstBus*"/>
      </field>
      <field name="clock">
        <type name="Clock" c:type="GstClock*"/>
      </field>
      <field name="base_time">
        <type name="ClockTimeDiff" c:type="GstClockTimeDiff"/>
      </field>
      <field name="numpads">
        <type name="uint16" c:type="guint16"/>
      </field>
      <field name="pads">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="numsrcpads">
        <type name="uint16" c:type="guint16"/>
      </field>
      <field name="srcpads">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="numsinkpads">
        <type name="uint16" c:type="guint16"/>
      </field>
      <field name="sinkpads">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="pads_cookie">
        <type name="uint32" c:type="guint32"/>
      </field>
      <union name="abidata" c:type="abidata">
        <record name="ABI" c:type="ABI">
          <field name="target_state" writable="1">
            <type name="State" c:type="GstState"/>
          </field>
          <field name="start_time" writable="1">
            <type name="ClockTime" c:type="GstClockTime"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="4">
            <type name="any"/>
          </array>
        </field>
      </union>
      <glib:signal name="no-more-pads">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="pad-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Pad" c:type="GstPad"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pad-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Pad" c:type="GstPad"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ElementClass"
            c:type="GstElementClass"
            glib:is-gtype-struct-for="Element">
      <doc xml:whitespace="preserve">GStreamer element class. Override the vmethods to implement the element
functionality.</doc>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="details">
        <type name="ElementDetails" c:type="GstElementDetails"/>
      </field>
      <field name="elementfactory">
        <type name="ElementFactory" c:type="GstElementFactory*"/>
      </field>
      <field name="padtemplates">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="numpadtemplates">
        <type name="int" c:type="gint"/>
      </field>
      <field name="pad_templ_cookie">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="pad_added">
        <callback name="pad_added" c:type="pad_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pad_removed">
        <callback name="pad_removed" c:type="pad_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="no_more_pads">
        <callback name="no_more_pads" c:type="no_more_pads">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="request_new_pad">
        <callback name="request_new_pad" c:type="request_new_pad">
          <return-value transfer-ownership="full">
            <type name="Pad" c:type="GstPad*"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="templ" transfer-ownership="none">
              <type name="PadTemplate" c:type="GstPadTemplate*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="release_pad">
        <callback name="release_pad" c:type="release_pad">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_state">
        <callback name="get_state" c:type="get_state">
          <return-value transfer-ownership="full">
            <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="state"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="none">
              <type name="State" c:type="GstState*"/>
            </parameter>
            <parameter name="pending"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="none">
              <type name="State" c:type="GstState*"/>
            </parameter>
            <parameter name="timeout" transfer-ownership="none">
              <type name="ClockTime" c:type="GstClockTime"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_state">
        <callback name="set_state" c:type="set_state">
          <return-value transfer-ownership="full">
            <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="state" transfer-ownership="none">
              <type name="State" c:type="GstState"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="change_state">
        <callback name="change_state" c:type="change_state">
          <return-value transfer-ownership="full">
            <type name="StateChangeReturn" c:type="GstStateChangeReturn"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="transition" transfer-ownership="none">
              <type name="StateChange" c:type="GstStateChange"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_bus">
        <callback name="set_bus" c:type="set_bus">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="bus" transfer-ownership="none">
              <type name="Bus" c:type="GstBus*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="provide_clock">
        <callback name="provide_clock" c:type="provide_clock">
          <return-value transfer-ownership="full">
            <type name="Clock" c:type="GstClock*"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_clock">
        <callback name="set_clock" c:type="set_clock">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="clock" transfer-ownership="none">
              <type name="Clock" c:type="GstClock*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_index">
        <callback name="get_index" c:type="get_index">
          <return-value transfer-ownership="full">
            <type name="Index" c:type="GstIndex*"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_index">
        <callback name="set_index" c:type="set_index">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <type name="Index" c:type="GstIndex*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="send_event">
        <callback name="send_event" c:type="send_event">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="GstEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_query_types">
        <callback name="get_query_types" c:type="get_query_types">
          <return-value transfer-ownership="none">
            <type name="QueryType" c:type="GstQueryType*"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query">
        <callback name="query" c:type="query">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="element" transfer-ownership="none">
              <type name="Element" c:type="GstElement*"/>
            </parameter>
            <parameter name="query" transfer-ownership="none">
              <type name="Query" c:type="GstQuery*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
      <method name="add_pad_template"
              c:identifier="gst_element_class_add_pad_template">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="templ" transfer-ownership="none">
            <type name="PadTemplate" c:type="GstPadTemplate*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pad_template"
              c:identifier="gst_element_class_get_pad_template">
        <return-value transfer-ownership="full">
          <type name="PadTemplate" c:type="GstPadTemplate*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pad_template_list"
              c:identifier="gst_element_class_get_pad_template_list"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="set_details" c:identifier="gst_element_class_set_details">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="details" transfer-ownership="none">
            <type name="ElementDetails" c:type="GstElementDetails*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_details_simple"
              c:identifier="gst_element_class_set_details_simple">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="longname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="classification" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="author" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_std_props"
              c:identifier="gst_element_class_install_std_props"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="first_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="ElementDetails" c:type="GstElementDetails">
      <doc xml:whitespace="preserve">This struct defines the public information about a #GstElement. It contains
meta-data about the element that is mostly for the benefit of editors.
The @klass member can be used by applications to filter elements based
on functionality.</doc>
      <field name="longname" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="klass" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="author" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <class name="ElementFactory"
           c:type="GstElementFactory"
           parent="PluginFeature"
           glib:type-name="GstElementFactory"
           glib:get-type="gst_element_factory_get_type"
           glib:type-struct="ElementFactoryClass">
      <doc xml:whitespace="preserve">The opaque #GstElementFactory data structure.</doc>
      <function name="find" c:identifier="gst_element_factory_find">
        <return-value transfer-ownership="full">
          <type name="ElementFactory" c:type="GstElementFactory*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="make" c:identifier="gst_element_factory_make">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="factoryname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_element_type"
              c:identifier="gst_element_factory_get_element_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <method name="get_longname"
              c:identifier="gst_element_factory_get_longname">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_klass" c:identifier="gst_element_factory_get_klass">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_description"
              c:identifier="gst_element_factory_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_author" c:identifier="gst_element_factory_get_author">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_num_pad_templates"
              c:identifier="gst_element_factory_get_num_pad_templates">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_static_pad_templates"
              c:identifier="gst_element_factory_get_static_pad_templates"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_uri_type"
              c:identifier="gst_element_factory_get_uri_type">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_uri_protocols"
              c:identifier="gst_element_factory_get_uri_protocols">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="has_interface"
              c:identifier="gst_element_factory_has_interface">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="interfacename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create" c:identifier="gst_element_factory_create">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_src_caps"
              c:identifier="gst_element_factory_can_src_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_sink_caps"
              c:identifier="gst_element_factory_can_sink_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="PluginFeature" c:type="GstPluginFeature"/>
      </field>
      <field name="type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="details">
        <type name="ElementDetails" c:type="GstElementDetails"/>
      </field>
      <field name="staticpadtemplates">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="numpadtemplates">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="uri_type">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="uri_protocols">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="interfaces">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="ElementFactoryClass"
            c:type="GstElementFactoryClass"
            glib:is-gtype-struct-for="ElementFactory">
      <field name="parent_class">
        <type name="PluginFeatureClass" c:type="GstPluginFeatureClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="ElementFlags"
              glib:type-name="GstElementFlags"
              glib:get-type="gst_element_flags_get_type"
              c:type="GstElementFlags">
      <doc xml:whitespace="preserve">The standard flags that an element may have.</doc>
      <member name="locked_state"
              value="16"
              c:identifier="GST_ELEMENT_LOCKED_STATE"
              glib:nick="locked-state"/>
      <member name="is_sink"
              value="32"
              c:identifier="GST_ELEMENT_IS_SINK"
              glib:nick="is-sink"/>
      <member name="unparenting"
              value="64"
              c:identifier="GST_ELEMENT_UNPARENTING"
              glib:nick="unparenting"/>
      <member name="flag_last"
              value="1048576"
              c:identifier="GST_ELEMENT_FLAG_LAST"
              glib:nick="flag-last"/>
    </bitfield>
    <class name="Event"
           c:type="GstEvent"
           parent="MiniObject"
           glib:type-name="GstEvent"
           glib:get-type="gst_event_get_type"
           glib:type-struct="EventClass"
           glib:fundamental="1">
      <doc xml:whitespace="preserve">A #GstEvent.</doc>
      <constructor name="new_custom" c:identifier="gst_event_new_custom">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="EventType" c:type="GstEventType"/>
          </parameter>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_flush_start"
                   c:identifier="gst_event_new_flush_start">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
      </constructor>
      <constructor name="new_flush_stop"
                   c:identifier="gst_event_new_flush_stop">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
      </constructor>
      <constructor name="new_eos" c:identifier="gst_event_new_eos">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
      </constructor>
      <constructor name="new_new_segment"
                   c:identifier="gst_event_new_new_segment">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="update" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_new_segment_full"
                   c:identifier="gst_event_new_new_segment_full">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="update" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="applied_rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_tag" c:identifier="gst_event_new_tag">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="taglist" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_buffer_size"
                   c:identifier="gst_event_new_buffer_size">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="minsize" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="maxsize" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="async" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_qos" c:identifier="gst_event_new_qos">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="proportion" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="diff" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff"/>
          </parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_seek" c:identifier="gst_event_new_seek">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="SeekFlags" c:type="GstSeekFlags"/>
          </parameter>
          <parameter name="start_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_navigation"
                   c:identifier="gst_event_new_navigation">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_latency" c:identifier="gst_event_new_latency">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_step" c:identifier="gst_event_new_step">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="amount" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="flush" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="intermediate" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sink_message"
                   c:identifier="gst_event_new_sink_message">
        <return-value transfer-ownership="full">
          <type name="Event" c:type="GstEvent*"/>
        </return-value>
        <parameters>
          <parameter name="msg" transfer-ownership="none">
            <type name="Message" c:type="GstMessage*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="type_get_name" c:identifier="gst_event_type_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="EventType" c:type="GstEventType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_to_quark" c:identifier="gst_event_type_to_quark">
        <return-value transfer-ownership="full">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="EventType" c:type="GstEventType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_get_flags" c:identifier="gst_event_type_get_flags">
        <return-value transfer-ownership="full">
          <type name="EventTypeFlags" c:type="GstEventTypeFlags"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="EventType" c:type="GstEventType"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_structure" c:identifier="gst_event_get_structure">
        <return-value transfer-ownership="none">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
      </method>
      <method name="has_name" c:identifier="gst_event_has_name">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_seqnum" c:identifier="gst_event_get_seqnum">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="set_seqnum" c:identifier="gst_event_set_seqnum">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="seqnum" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_new_segment"
              c:identifier="gst_event_parse_new_segment">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="update"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="start"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="stop"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="position"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_new_segment_full"
              c:identifier="gst_event_parse_new_segment_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="update"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="applied_rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="start"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="stop"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="position"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_tag" c:identifier="gst_event_parse_tag">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="taglist" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList**"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_buffer_size"
              c:identifier="gst_event_parse_buffer_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="minsize"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="maxsize"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="async"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_qos" c:identifier="gst_event_parse_qos">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="proportion"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="diff" transfer-ownership="none">
            <type name="ClockTimeDiff" c:type="GstClockTimeDiff*"/>
          </parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_seek" c:identifier="gst_event_parse_seek">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="SeekFlags" c:type="GstSeekFlags*"/>
          </parameter>
          <parameter name="start_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType*"/>
          </parameter>
          <parameter name="start"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="stop_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType*"/>
          </parameter>
          <parameter name="stop"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_latency" c:identifier="gst_event_parse_latency">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_step" c:identifier="gst_event_parse_step">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="amount"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="flush"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="intermediate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_sink_message"
              c:identifier="gst_event_parse_sink_message">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="msg" transfer-ownership="none">
            <type name="Message" c:type="GstMessage**"/>
          </parameter>
        </parameters>
      </method>
      <field name="mini_object">
        <type name="MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="type">
        <type name="EventType" c:type="GstEventType"/>
      </field>
      <field name="timestamp">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="src">
        <type name="Object" c:type="GstObject*"/>
      </field>
      <field name="structure">
        <type name="Structure" c:type="GstStructure*"/>
      </field>
      <union name="abidata" c:type="abidata">
        <field name="seqnum" writable="1">
          <type name="uint32" c:type="guint32"/>
        </field>
        <field name="_gst_reserved" writable="1">
          <type name="any" c:type="gpointer"/>
        </field>
      </union>
    </class>
    <record name="EventClass"
            c:type="GstEventClass"
            glib:is-gtype-struct-for="Event">
      <field name="mini_object_class">
        <type name="MiniObjectClass" c:type="GstMiniObjectClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <enumeration name="EventType"
                 glib:type-name="GstEventType"
                 glib:get-type="gst_event_type_get_type"
                 c:type="GstEventType">
      <doc xml:whitespace="preserve">#GstEventType lists the standard event types that can be sent in a pipeline.
The custom event types can be used for private messages between elements
that can't be expressed using normal
GStreamer buffer passing semantics. Custom events carry an arbitrary
#GstStructure.
Specific custom events are distinguished by the name of the structure.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GST_EVENT_UNKNOWN"
              glib:nick="unknown"/>
      <member name="flush_start"
              value="19"
              c:identifier="GST_EVENT_FLUSH_START"
              glib:nick="flush-start"/>
      <member name="flush_stop"
              value="39"
              c:identifier="GST_EVENT_FLUSH_STOP"
              glib:nick="flush-stop"/>
      <member name="eos"
              value="86"
              c:identifier="GST_EVENT_EOS"
              glib:nick="eos"/>
      <member name="newsegment"
              value="102"
              c:identifier="GST_EVENT_NEWSEGMENT"
              glib:nick="newsegment"/>
      <member name="tag"
              value="118"
              c:identifier="GST_EVENT_TAG"
              glib:nick="tag"/>
      <member name="buffersize"
              value="134"
              c:identifier="GST_EVENT_BUFFERSIZE"
              glib:nick="buffersize"/>
      <member name="sink_message"
              value="150"
              c:identifier="GST_EVENT_SINK_MESSAGE"
              glib:nick="sink-message"/>
      <member name="qos"
              value="241"
              c:identifier="GST_EVENT_QOS"
              glib:nick="qos"/>
      <member name="seek"
              value="257"
              c:identifier="GST_EVENT_SEEK"
              glib:nick="seek"/>
      <member name="navigation"
              value="273"
              c:identifier="GST_EVENT_NAVIGATION"
              glib:nick="navigation"/>
      <member name="latency"
              value="289"
              c:identifier="GST_EVENT_LATENCY"
              glib:nick="latency"/>
      <member name="step"
              value="305"
              c:identifier="GST_EVENT_STEP"
              glib:nick="step"/>
      <member name="custom_upstream"
              value="513"
              c:identifier="GST_EVENT_CUSTOM_UPSTREAM"
              glib:nick="custom-upstream"/>
      <member name="custom_downstream"
              value="518"
              c:identifier="GST_EVENT_CUSTOM_DOWNSTREAM"
              glib:nick="custom-downstream"/>
      <member name="custom_downstream_oob"
              value="514"
              c:identifier="GST_EVENT_CUSTOM_DOWNSTREAM_OOB"
              glib:nick="custom-downstream-oob"/>
      <member name="custom_both"
              value="519"
              c:identifier="GST_EVENT_CUSTOM_BOTH"
              glib:nick="custom-both"/>
      <member name="custom_both_oob"
              value="515"
              c:identifier="GST_EVENT_CUSTOM_BOTH_OOB"
              glib:nick="custom-both-oob"/>
    </enumeration>
    <bitfield name="EventTypeFlags"
              glib:type-name="GstEventTypeFlags"
              glib:get-type="gst_event_type_flags_get_type"
              c:type="GstEventTypeFlags">
      <doc xml:whitespace="preserve">#GstEventTypeFlags indicate the aspects of the different #GstEventType
values. You can get the type flags of a #GstEventType with the
gst_event_type_get_flags() function.</doc>
      <member name="upstream"
              value="1"
              c:identifier="GST_EVENT_TYPE_UPSTREAM"
              glib:nick="upstream"/>
      <member name="downstream"
              value="2"
              c:identifier="GST_EVENT_TYPE_DOWNSTREAM"
              glib:nick="downstream"/>
      <member name="serialized"
              value="4"
              c:identifier="GST_EVENT_TYPE_SERIALIZED"
              glib:nick="serialized"/>
    </bitfield>
    <constant name="FOURCC_FORMAT" value="c%c%c%c">
      <type name="utf8"/>
    </constant>
    <callback name="FilterFunc" c:type="GstFilterFunc">
      <doc xml:whitespace="preserve">Function prototype for a filter callback taht can be use in gst_filter_run().
The function should apply its filtering to @obj. Additional data passed to
gst_filter_run() are in @data.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE for success.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <doc xml:whitespace="preserve">the object</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:whitespace="preserve">filter data</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="FlowReturn"
                 glib:type-name="GstFlowReturn"
                 glib:get-type="gst_flow_return_get_type"
                 c:type="GstFlowReturn">
      <doc xml:whitespace="preserve">sent yet) (unused/unimplemented).
this error should post an error message with more
details.
this (and higher) to define custom success
codes. Since 0.10.7.
custom success code to this to avoid compiler
warnings). Since 0.10.29.
this (and lower) to define custom error codes.
Since 0.10.7.
custom error code to this to avoid compiler
warnings). Since 0.10.29.
The result of passing data to a pad.
Note that the custom return values should not be exposed outside of the
element scope and are available since 0.10.7.</doc>
      <member name="custom_success_2"
              value="102"
              c:identifier="GST_FLOW_CUSTOM_SUCCESS_2"
              glib:nick="custom-success-2"/>
      <member name="custom_success_1"
              value="101"
              c:identifier="GST_FLOW_CUSTOM_SUCCESS_1"
              glib:nick="custom-success-1"/>
      <member name="custom_success"
              value="100"
              c:identifier="GST_FLOW_CUSTOM_SUCCESS"
              glib:nick="custom-success"/>
      <member name="resend"
              value="1"
              c:identifier="GST_FLOW_RESEND"
              glib:nick="resend"/>
      <member name="ok" value="0" c:identifier="GST_FLOW_OK" glib:nick="ok"/>
      <member name="not_linked"
              value="-1"
              c:identifier="GST_FLOW_NOT_LINKED"
              glib:nick="not-linked"/>
      <member name="wrong_state"
              value="-2"
              c:identifier="GST_FLOW_WRONG_STATE"
              glib:nick="wrong-state"/>
      <member name="unexpected"
              value="-3"
              c:identifier="GST_FLOW_UNEXPECTED"
              glib:nick="unexpected"/>
      <member name="not_negotiated"
              value="-4"
              c:identifier="GST_FLOW_NOT_NEGOTIATED"
              glib:nick="not-negotiated"/>
      <member name="error"
              value="-5"
              c:identifier="GST_FLOW_ERROR"
              glib:nick="error"/>
      <member name="not_supported"
              value="-6"
              c:identifier="GST_FLOW_NOT_SUPPORTED"
              glib:nick="not-supported"/>
      <member name="custom_error"
              value="-100"
              c:identifier="GST_FLOW_CUSTOM_ERROR"
              glib:nick="custom-error"/>
      <member name="custom_error_1"
              value="-101"
              c:identifier="GST_FLOW_CUSTOM_ERROR_1"
              glib:nick="custom-error-1"/>
      <member name="custom_error_2"
              value="-102"
              c:identifier="GST_FLOW_CUSTOM_ERROR_2"
              glib:nick="custom-error-2"/>
    </enumeration>
    <enumeration name="Format"
                 glib:type-name="GstFormat"
                 glib:get-type="gst_format_get_type"
                 c:type="GstFormat">
      <doc xml:whitespace="preserve">Standard predefined formats</doc>
      <member name="undefined"
              value="0"
              c:identifier="GST_FORMAT_UNDEFINED"
              glib:nick="undefined"/>
      <member name="default"
              value="1"
              c:identifier="GST_FORMAT_DEFAULT"
              glib:nick="default"/>
      <member name="bytes"
              value="2"
              c:identifier="GST_FORMAT_BYTES"
              glib:nick="bytes"/>
      <member name="time"
              value="3"
              c:identifier="GST_FORMAT_TIME"
              glib:nick="time"/>
      <member name="buffers"
              value="4"
              c:identifier="GST_FORMAT_BUFFERS"
              glib:nick="buffers"/>
      <member name="percent"
              value="5"
              c:identifier="GST_FORMAT_PERCENT"
              glib:nick="percent"/>
    </enumeration>
    <record name="FormatDefinition" c:type="GstFormatDefinition">
      <doc xml:whitespace="preserve">A format definition</doc>
      <field name="value" writable="1">
        <type name="Format" c:type="GstFormat"/>
      </field>
      <field name="nick" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="quark" writable="1">
        <type name="GLib.Quark" c:type="GQuark"/>
      </field>
    </record>
    <glib:boxed c:type="GError"
                glib:name="GError"
                glib:type-name="GError"
                glib:get-type="gst_g_error_get_type">
    </glib:boxed>
    <class name="GParamSpecMiniObject"
           c:type="GParamSpecMiniObject"
           parent="GObject.Object"
           glib:type-name="GParamSpecMiniObject"
           glib:get-type="gst_param_spec_mini_object_get_type"
           glib:fundamental="1">
    </class>
    <class name="GhostPad"
           c:type="GstGhostPad"
           parent="ProxyPad"
           glib:type-name="GstGhostPad"
           glib:get-type="gst_ghost_pad_get_type"
           glib:type-struct="GhostPadClass">
      <doc xml:whitespace="preserve">Opaque #GstGhostPad structure.</doc>
      <constructor name="new" c:identifier="gst_ghost_pad_new">
        <return-value transfer-ownership="full">
          <type name="GhostPad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_no_target"
                   c:identifier="gst_ghost_pad_new_no_target">
        <return-value transfer-ownership="full">
          <type name="GhostPad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dir" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_template"
                   c:identifier="gst_ghost_pad_new_from_template">
        <return-value transfer-ownership="full">
          <type name="GhostPad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
          <parameter name="templ" transfer-ownership="none">
            <type name="PadTemplate" c:type="GstPadTemplate*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_no_target_from_template"
                   c:identifier="gst_ghost_pad_new_no_target_from_template">
        <return-value transfer-ownership="full">
          <type name="GhostPad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="templ" transfer-ownership="none">
            <type name="PadTemplate" c:type="GstPadTemplate*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_target" c:identifier="gst_ghost_pad_get_target">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
      </method>
      <method name="set_target" c:identifier="gst_ghost_pad_set_target">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="newtarget" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct" c:identifier="gst_ghost_pad_construct">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="pad">
        <type name="ProxyPad" c:type="GstProxyPad"/>
      </field>
      <field name="priv">
        <type name="GhostPadPrivate" c:type="GstGhostPadPrivate*"/>
      </field>
    </class>
    <record name="GhostPadClass"
            c:type="GstGhostPadClass"
            glib:is-gtype-struct-for="GhostPad">
      <field name="parent_class">
        <type name="ProxyPadClass" c:type="GstProxyPadClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="GhostPadPrivate" c:type="GstGhostPadPrivate">
    </record>
    <constant name="HAVE_GLIB_2_8" value="1">
      <type name="int"/>
    </constant>
    <constant name="HAVE_UNALIGNED_ACCESS" value="1">
      <type name="int"/>
    </constant>
    <constant name="INDEX_ID_INVALID" value="-1">
      <type name="int"/>
    </constant>
    <interface name="ImplementsInterface"
               c:type="GstImplementsInterface"
               glib:type-name="GstImplementsInterface"
               glib:get-type="gst_implements_interface_get_type"
               glib:type-struct="ImplementsInterfaceClass">
      <doc xml:whitespace="preserve">Opaque #GstImplementsInterface structure.</doc>
      <prerequisite name="Element"/>
      <virtual-method name="supported">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="iface_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </virtual-method>
    </interface>
    <record name="ImplementsInterfaceClass"
            c:type="GstImplementsInterfaceClass"
            glib:is-gtype-struct-for="ImplementsInterface">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="supported">
        <callback name="supported" c:type="supported">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="iface" transfer-ownership="none">
              <type name="ImplementsInterface"
                    c:type="GstImplementsInterface*"/>
            </parameter>
            <parameter name="iface_type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <class name="Index"
           c:type="GstIndex"
           parent="Object"
           glib:type-name="GstIndex"
           glib:get-type="gst_index_get_type"
           glib:type-struct="IndexClass">
      <doc xml:whitespace="preserve">Opaque #GstIndex structure.</doc>
      <constructor name="new" c:identifier="gst_index_new">
        <return-value transfer-ownership="full">
          <type name="Index" c:type="GstIndex*"/>
        </return-value>
      </constructor>
      <virtual-method name="get_writer_id">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="writer_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="writer_string" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="commit" invoker="commit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_entry">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="entry" transfer-ownership="none">
            <type name="IndexEntry" c:type="GstIndexEntry*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_assoc_entry">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="method" transfer-ownership="none">
            <type name="IndexLookupMethod" c:type="GstIndexLookupMethod"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="AssocFlags" c:type="GstAssocFlags"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="func" transfer-ownership="none">
            <type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="7">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="commit" c:identifier="gst_index_commit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_group" c:identifier="gst_index_get_group">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="new_group" c:identifier="gst_index_new_group">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_group" c:identifier="gst_index_set_group">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="groupnum" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_certainty" c:identifier="gst_index_set_certainty">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="certainty" transfer-ownership="none">
            <type name="IndexCertainty" c:type="GstIndexCertainty"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_certainty" c:identifier="gst_index_get_certainty">
        <return-value transfer-ownership="full">
          <type name="IndexCertainty" c:type="GstIndexCertainty"/>
        </return-value>
      </method>
      <method name="set_filter" c:identifier="gst_index_set_filter">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filter"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="IndexFilter" c:type="GstIndexFilter"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_filter_full" c:identifier="gst_index_set_filter_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filter"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="IndexFilter" c:type="GstIndexFilter"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_destroy"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resolver" c:identifier="gst_index_set_resolver">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="resolver"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="IndexResolver" c:type="GstIndexResolver"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resolver_full"
              c:identifier="gst_index_set_resolver_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="resolver"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="IndexResolver" c:type="GstIndexResolver"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_destroy"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_writer_id" c:identifier="gst_index_get_writer_id">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="writer" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_format" c:identifier="gst_index_add_format">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_associationv"
              c:identifier="gst_index_add_associationv">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="AssocFlags" c:type="GstAssocFlags"/>
          </parameter>
          <parameter name="n" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="list" transfer-ownership="none">
            <type name="IndexAssociation" c:type="GstIndexAssociation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_association"
              c:identifier="gst_index_add_association"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="AssocFlags" c:type="GstAssocFlags"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_object" c:identifier="gst_index_add_object">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="key" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_id" c:identifier="gst_index_add_id">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="description" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_assoc_entry" c:identifier="gst_index_get_assoc_entry">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="method" transfer-ownership="none">
            <type name="IndexLookupMethod" c:type="GstIndexLookupMethod"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="AssocFlags" c:type="GstAssocFlags"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_assoc_entry_full"
              c:identifier="gst_index_get_assoc_entry_full">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="method" transfer-ownership="none">
            <type name="IndexLookupMethod" c:type="GstIndexLookupMethod"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="AssocFlags" c:type="GstAssocFlags"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="7">
            <type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="resolver" writable="1" transfer-ownership="none">
        <type name="IndexResolver" c:type="GstIndexResolver"/>
      </property>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="groups">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="curgroup">
        <type name="IndexGroup" c:type="GstIndexGroup*"/>
      </field>
      <field name="maxgroup">
        <type name="int" c:type="gint"/>
      </field>
      <field name="method">
        <type name="IndexResolverMethod" c:type="GstIndexResolverMethod"/>
      </field>
      <field name="resolver">
        <type name="IndexResolver" c:type="GstIndexResolver"/>
      </field>
      <field name="resolver_user_data">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="filter">
        <type name="IndexFilter" c:type="GstIndexFilter"/>
      </field>
      <field name="filter_user_data">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="filter_user_data_destroy">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="writers">
        <type name="GLib.HashTable" c:type="GHashTable*"/>
      </field>
      <field name="last_id">
        <type name="int" c:type="gint"/>
      </field>
      <field name="resolver_user_data_destroy">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
      <glib:signal name="entry-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="IndexEntry" c:type="GstIndexEntry"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="IndexAssociation" c:type="GstIndexAssociation">
      <doc xml:whitespace="preserve">An association in an entry.</doc>
      <field name="format" writable="1">
        <type name="Format" c:type="GstFormat"/>
      </field>
      <field name="value" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
    </record>
    <enumeration name="IndexCertainty"
                 glib:type-name="GstIndexCertainty"
                 glib:get-type="gst_index_certainty_get_type"
                 c:type="GstIndexCertainty">
      <doc xml:whitespace="preserve">The certainty of a group in the index.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GST_INDEX_UNKNOWN"
              glib:nick="unknown"/>
      <member name="certain"
              value="1"
              c:identifier="GST_INDEX_CERTAIN"
              glib:nick="certain"/>
      <member name="fuzzy"
              value="2"
              c:identifier="GST_INDEX_FUZZY"
              glib:nick="fuzzy"/>
    </enumeration>
    <record name="IndexClass"
            c:type="GstIndexClass"
            glib:is-gtype-struct-for="Index">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="get_writer_id">
        <callback name="get_writer_id" c:type="get_writer_id">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="index" transfer-ownership="none">
              <type name="Index" c:type="GstIndex*"/>
            </parameter>
            <parameter name="writer_id"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
            <parameter name="writer_string" transfer-ownership="full">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="commit">
        <callback name="commit" c:type="commit">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="index" transfer-ownership="none">
              <type name="Index" c:type="GstIndex*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_entry">
        <callback name="add_entry" c:type="add_entry">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="index" transfer-ownership="none">
              <type name="Index" c:type="GstIndex*"/>
            </parameter>
            <parameter name="entry" transfer-ownership="none">
              <type name="IndexEntry" c:type="GstIndexEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_assoc_entry">
        <callback name="get_assoc_entry" c:type="get_assoc_entry">
          <return-value transfer-ownership="full">
            <type name="IndexEntry" c:type="GstIndexEntry*"/>
          </return-value>
          <parameters>
            <parameter name="index" transfer-ownership="none">
              <type name="Index" c:type="GstIndex*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="method" transfer-ownership="none">
              <type name="IndexLookupMethod" c:type="GstIndexLookupMethod"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="AssocFlags" c:type="GstAssocFlags"/>
            </parameter>
            <parameter name="format" transfer-ownership="none">
              <type name="Format" c:type="GstFormat"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="int64" c:type="gint64"/>
            </parameter>
            <parameter name="func" transfer-ownership="none">
              <type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="7">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="entry_added">
        <callback name="entry_added" c:type="entry_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="index" transfer-ownership="none">
              <type name="Index" c:type="GstIndex*"/>
            </parameter>
            <parameter name="entry" transfer-ownership="none">
              <type name="IndexEntry" c:type="GstIndexEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="IndexEntry"
            c:type="GstIndexEntry"
            glib:type-name="GstIndexEntry"
            glib:get-type="gst_index_entry_get_type">
      <doc xml:whitespace="preserve">The basic element of an index.</doc>
      <field name="type" writable="1">
        <type name="IndexEntryType" c:type="GstIndexEntryType"/>
      </field>
      <field name="id" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <union name="data" c:type="data">
        <record name="id" c:type="id">
          <field name="description" writable="1">
            <type name="utf8" c:type="gchar*"/>
          </field>
        </record>
        <record name="assoc" c:type="assoc">
          <field name="nassocs" writable="1">
            <type name="int" c:type="gint"/>
          </field>
          <field name="assocs" writable="1">
            <type name="IndexAssociation" c:type="GstIndexAssociation*"/>
          </field>
          <field name="flags" writable="1">
            <type name="AssocFlags" c:type="GstAssocFlags"/>
          </field>
        </record>
        <record name="object" c:type="object">
          <field name="key" writable="1">
            <type name="utf8" c:type="gchar*"/>
          </field>
          <field name="type" writable="1">
            <type name="GType" c:type="GType"/>
          </field>
          <field name="object" writable="1">
            <type name="any" c:type="gpointer"/>
          </field>
        </record>
        <record name="format" c:type="format">
          <field name="format" writable="1">
            <type name="Format" c:type="GstFormat"/>
          </field>
          <field name="key" writable="1">
            <type name="utf8" c:type="gchar*"/>
          </field>
        </record>
      </union>
      <method name="copy" c:identifier="gst_index_entry_copy">
        <return-value transfer-ownership="full">
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </return-value>
      </method>
      <method name="free" c:identifier="gst_index_entry_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="assoc_map" c:identifier="gst_index_entry_assoc_map">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="IndexEntryType"
                 glib:type-name="GstIndexEntryType"
                 glib:get-type="gst_index_entry_type_get_type"
                 c:type="GstIndexEntryType">
      <doc xml:whitespace="preserve">The different types of entries in the index.</doc>
      <member name="id"
              value="0"
              c:identifier="GST_INDEX_ENTRY_ID"
              glib:nick="id"/>
      <member name="association"
              value="1"
              c:identifier="GST_INDEX_ENTRY_ASSOCIATION"
              glib:nick="association"/>
      <member name="object"
              value="2"
              c:identifier="GST_INDEX_ENTRY_OBJECT"
              glib:nick="object"/>
      <member name="format"
              value="3"
              c:identifier="GST_INDEX_ENTRY_FORMAT"
              glib:nick="format"/>
    </enumeration>
    <class name="IndexFactory"
           c:type="GstIndexFactory"
           parent="PluginFeature"
           glib:type-name="GstIndexFactory"
           glib:get-type="gst_index_factory_get_type"
           glib:type-struct="IndexFactoryClass">
      <doc xml:whitespace="preserve">The GstIndexFactory object</doc>
      <constructor name="new" c:identifier="gst_index_factory_new">
        <return-value transfer-ownership="full">
          <type name="IndexFactory" c:type="GstIndexFactory*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="longdesc" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="find" c:identifier="gst_index_factory_find">
        <return-value transfer-ownership="full">
          <type name="IndexFactory" c:type="GstIndexFactory*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="make" c:identifier="gst_index_factory_make">
        <return-value transfer-ownership="full">
          <type name="Index" c:type="GstIndex*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="destroy" c:identifier="gst_index_factory_destroy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="create" c:identifier="gst_index_factory_create">
        <return-value transfer-ownership="full">
          <type name="Index" c:type="GstIndex*"/>
        </return-value>
      </method>
      <field name="feature">
        <type name="PluginFeature" c:type="GstPluginFeature"/>
      </field>
      <field name="longdesc">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="IndexFactoryClass"
            c:type="GstIndexFactoryClass"
            glib:is-gtype-struct-for="IndexFactory">
      <field name="parent">
        <type name="PluginFeatureClass" c:type="GstPluginFeatureClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="IndexFilter" c:type="GstIndexFilter">
      <doc xml:whitespace="preserve">Function to filter out entries in the index.
to the index, %FALSE otherwise.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">This function should return %TRUE if the entry is to be added</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:whitespace="preserve">The index being queried</doc>
          <type name="Index" c:type="GstIndex*"/>
        </parameter>
        <parameter name="entry" transfer-ownership="none">
          <doc xml:whitespace="preserve">The entry to be added.</doc>
          <type name="IndexEntry" c:type="GstIndexEntry*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">User data passed to the function.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="IndexFlags"
              glib:type-name="GstIndexFlags"
              glib:get-type="gst_index_flags_get_type"
              c:type="GstIndexFlags">
      <doc xml:whitespace="preserve">Flags for this index</doc>
      <member name="writable"
              value="16"
              c:identifier="GST_INDEX_WRITABLE"
              glib:nick="writable"/>
      <member name="readable"
              value="32"
              c:identifier="GST_INDEX_READABLE"
              glib:nick="readable"/>
      <member name="flag_last"
              value="4096"
              c:identifier="GST_INDEX_FLAG_LAST"
              glib:nick="flag-last"/>
    </bitfield>
    <record name="IndexGroup" c:type="GstIndexGroup">
      <doc xml:whitespace="preserve">A group of related entries in an index.</doc>
      <field name="groupnum" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="entries" writable="1">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="certainty" writable="1">
        <type name="IndexCertainty" c:type="GstIndexCertainty"/>
      </field>
      <field name="peergroup" writable="1">
        <type name="int" c:type="gint"/>
      </field>
    </record>
    <enumeration name="IndexLookupMethod"
                 glib:type-name="GstIndexLookupMethod"
                 glib:get-type="gst_index_lookup_method_get_type"
                 c:type="GstIndexLookupMethod">
      <doc xml:whitespace="preserve">Specify the method to find an index entry in the index.</doc>
      <member name="exact"
              value="0"
              c:identifier="GST_INDEX_LOOKUP_EXACT"
              glib:nick="exact"/>
      <member name="before"
              value="1"
              c:identifier="GST_INDEX_LOOKUP_BEFORE"
              glib:nick="before"/>
      <member name="after"
              value="2"
              c:identifier="GST_INDEX_LOOKUP_AFTER"
              glib:nick="after"/>
    </enumeration>
    <callback name="IndexResolver" c:type="GstIndexResolver">
      <doc xml:whitespace="preserve">Function to resolve ids to writer descriptions.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if an id could be assigned to the writer.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:whitespace="preserve">the index being queried.</doc>
          <type name="Index" c:type="GstIndex*"/>
        </parameter>
        <parameter name="writer" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object that wants to write</doc>
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="writer_string" transfer-ownership="none">
          <doc xml:whitespace="preserve">A description of the writer.</doc>
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <doc xml:whitespace="preserve">user_data as registered</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="IndexResolverMethod"
                 glib:type-name="GstIndexResolverMethod"
                 glib:get-type="gst_index_resolver_method_get_type"
                 c:type="GstIndexResolverMethod">
      <doc xml:whitespace="preserve">The method used to resolve index writers</doc>
      <member name="custom"
              value="0"
              c:identifier="GST_INDEX_RESOLVER_CUSTOM"
              glib:nick="custom"/>
      <member name="gtype"
              value="1"
              c:identifier="GST_INDEX_RESOLVER_GTYPE"
              glib:nick="gtype"/>
      <member name="path"
              value="2"
              c:identifier="GST_INDEX_RESOLVER_PATH"
              glib:nick="path"/>
    </enumeration>
    <record name="Iterator" c:type="GstIterator">
      <doc xml:whitespace="preserve">#GstIterator base structure. The values of this structure are 
protected for subclasses, use the methods to use the #GstIterator.</doc>
      <field name="next" writable="1">
        <type name="IteratorNextFunction" c:type="GstIteratorNextFunction"/>
      </field>
      <field name="item" writable="1">
        <type name="IteratorItemFunction" c:type="GstIteratorItemFunction"/>
      </field>
      <field name="resync" writable="1">
        <type name="IteratorResyncFunction"
              c:type="GstIteratorResyncFunction"/>
      </field>
      <field name="free" writable="1">
        <type name="IteratorFreeFunction" c:type="GstIteratorFreeFunction"/>
      </field>
      <field name="pushed" writable="1">
        <type name="Iterator" c:type="GstIterator*"/>
      </field>
      <field name="type" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="cookie" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="master_cookie" writable="1">
        <type name="any" c:type="guint32*"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
      <constructor name="new" c:identifier="gst_iterator_new">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="lock" transfer-ownership="none">
            <type name="GLib.Mutex" c:type="GMutex*"/>
          </parameter>
          <parameter name="master_cookie"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
          <parameter name="next" transfer-ownership="none" scope="call">
            <type name="IteratorNextFunction"
                  c:type="GstIteratorNextFunction"/>
          </parameter>
          <parameter name="item" transfer-ownership="none" scope="call">
            <type name="IteratorItemFunction"
                  c:type="GstIteratorItemFunction"/>
          </parameter>
          <parameter name="resync" transfer-ownership="none" scope="call">
            <type name="IteratorResyncFunction"
                  c:type="GstIteratorResyncFunction"/>
          </parameter>
          <parameter name="free" transfer-ownership="none" scope="call">
            <type name="IteratorFreeFunction"
                  c:type="GstIteratorFreeFunction"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_list"
                   c:identifier="gst_iterator_new_list"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="lock" transfer-ownership="none">
            <type name="GLib.Mutex" c:type="GMutex*"/>
          </parameter>
          <parameter name="master_cookie"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.List" c:type="GList**">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="item" transfer-ownership="none" scope="call">
            <type name="IteratorItemFunction"
                  c:type="GstIteratorItemFunction"/>
          </parameter>
          <parameter name="free" transfer-ownership="none" scope="call">
            <type name="IteratorDisposeFunction"
                  c:type="GstIteratorDisposeFunction"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_single" c:identifier="gst_iterator_new_single">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="copy" transfer-ownership="none" scope="call">
            <type name="CopyFunction" c:type="GstCopyFunction"/>
          </parameter>
          <parameter name="free" transfer-ownership="none" scope="call">
            <type name="GLib.FreeFunc" c:type="GFreeFunc"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="next" c:identifier="gst_iterator_next">
        <return-value transfer-ownership="full">
          <type name="IteratorResult" c:type="GstIteratorResult"/>
        </return-value>
        <parameters>
          <parameter name="elem" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="resync" c:identifier="gst_iterator_resync">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="free" c:identifier="gst_iterator_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="push" c:identifier="gst_iterator_push">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="other" transfer-ownership="none">
            <type name="Iterator" c:type="GstIterator*"/>
          </parameter>
        </parameters>
      </method>
      <method name="filter" c:identifier="gst_iterator_filter">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GLib.CompareFunc" c:type="GCompareFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fold" c:identifier="gst_iterator_fold">
        <return-value transfer-ownership="full">
          <type name="IteratorResult" c:type="GstIteratorResult"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none" scope="call">
            <type name="IteratorFoldFunction"
                  c:type="GstIteratorFoldFunction"/>
          </parameter>
          <parameter name="ret" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="foreach" c:identifier="gst_iterator_foreach">
        <return-value transfer-ownership="full">
          <type name="IteratorResult" c:type="GstIteratorResult"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GLib.Func" c:type="GFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_custom" c:identifier="gst_iterator_find_custom">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GLib.CompareFunc" c:type="GCompareFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <callback name="IteratorDisposeFunction"
              c:type="GstIteratorDisposeFunction">
      <doc xml:whitespace="preserve">The function that will be called when a #GList iterator is freed. The
owner of the #GList iterator can then clean up its resources.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="owner" transfer-ownership="none">
          <doc xml:whitespace="preserve">the owner of the iterator</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorFoldFunction" c:type="GstIteratorFoldFunction">
      <doc xml:whitespace="preserve">A function to be passed to gst_iterator_fold().</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the fold should continue, FALSE if it should stop.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="item" transfer-ownership="none">
          <doc xml:whitespace="preserve">the item to fold</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="ret" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue collecting the result</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">data passed to gst_iterator_fold()</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorFreeFunction" c:type="GstIteratorFreeFunction">
      <doc xml:whitespace="preserve">This function will be called when the iterator is freed.
Implementors of a #GstIterator should implement this
function and pass it to the constructor of the custom iterator.
The function will be called with the iterator lock held.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="it" transfer-ownership="none">
          <doc xml:whitespace="preserve">the iterator</doc>
          <type name="Iterator" c:type="GstIterator*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="IteratorItem"
                 glib:type-name="GstIteratorItem"
                 glib:get-type="gst_iterator_item_get_type"
                 c:type="GstIteratorItem">
      <doc xml:whitespace="preserve">The result of a #GstIteratorItemFunction.</doc>
      <member name="skip"
              value="0"
              c:identifier="GST_ITERATOR_ITEM_SKIP"
              glib:nick="skip"/>
      <member name="pass"
              value="1"
              c:identifier="GST_ITERATOR_ITEM_PASS"
              glib:nick="pass"/>
      <member name="end"
              value="2"
              c:identifier="GST_ITERATOR_ITEM_END"
              glib:nick="end"/>
    </enumeration>
    <callback name="IteratorItemFunction" c:type="GstIteratorItemFunction">
      <doc xml:whitespace="preserve">The function that will be called after the next item of the iterator
has been retrieved. This function will typically increase the refcount
of the item or make a copy.
Implementors of a #GstIterator should implement this
function and pass it to the constructor of the custom iterator.
The function will be called with the iterator lock held.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">the result of the operation.</doc>
        <type name="IteratorItem" c:type="GstIteratorItem"/>
      </return-value>
      <parameters>
        <parameter name="it" transfer-ownership="none">
          <doc xml:whitespace="preserve">the iterator</doc>
          <type name="Iterator" c:type="GstIterator*"/>
        </parameter>
        <parameter name="item" transfer-ownership="none">
          <doc xml:whitespace="preserve">the item being retrieved.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="IteratorNextFunction" c:type="GstIteratorNextFunction">
      <doc xml:whitespace="preserve">The function that will be called when the next element of the iterator
should be retrieved. 
Implementors of a #GstIterator should implement this
function and pass it to the constructor of the custom iterator.
The function will be called with the iterator lock held.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">the result of the operation.</doc>
        <type name="IteratorResult" c:type="GstIteratorResult"/>
      </return-value>
      <parameters>
        <parameter name="it" transfer-ownership="none">
          <doc xml:whitespace="preserve">the iterator</doc>
          <type name="Iterator" c:type="GstIterator*"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <doc xml:whitespace="preserve">a pointer to hold the next item</doc>
          <type name="any" c:type="gpointer*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="IteratorResult"
                 glib:type-name="GstIteratorResult"
                 glib:get-type="gst_iterator_result_get_type"
                 c:type="GstIteratorResult">
      <doc xml:whitespace="preserve">The result of gst_iterator_next().</doc>
      <member name="done"
              value="0"
              c:identifier="GST_ITERATOR_DONE"
              glib:nick="done"/>
      <member name="ok"
              value="1"
              c:identifier="GST_ITERATOR_OK"
              glib:nick="ok"/>
      <member name="resync"
              value="2"
              c:identifier="GST_ITERATOR_RESYNC"
              glib:nick="resync"/>
      <member name="error"
              value="3"
              c:identifier="GST_ITERATOR_ERROR"
              glib:nick="error"/>
    </enumeration>
    <callback name="IteratorResyncFunction" c:type="GstIteratorResyncFunction">
      <doc xml:whitespace="preserve">This function will be called whenever a concurrent update happened
to the iterated datastructure. The implementor of the iterator should
restart the iterator from the beginning and clean up any state it might
have.
Implementors of a #GstIterator should implement this
function and pass it to the constructor of the custom iterator.
The function will be called with the iterator lock held.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="it" transfer-ownership="none">
          <doc xml:whitespace="preserve">the iterator</doc>
          <type name="Iterator" c:type="GstIterator*"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="LICENSE_UNKNOWN" value="unknown">
      <type name="utf8"/>
    </constant>
    <enumeration name="LibraryError"
                 glib:type-name="GstLibraryError"
                 glib:get-type="gst_library_error_get_type"
                 c:type="GstLibraryError"
                 glib:error-quark="gst_library_error_quark">
      <doc xml:whitespace="preserve">Library errors are for errors from the library being used by elements
(initializing, finalizing, settings, ...)</doc>
      <member name="failed"
              value="1"
              c:identifier="GST_LIBRARY_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="too_lazy"
              value="2"
              c:identifier="GST_LIBRARY_ERROR_TOO_LAZY"
              glib:nick="too-lazy"/>
      <member name="init"
              value="3"
              c:identifier="GST_LIBRARY_ERROR_INIT"
              glib:nick="init"/>
      <member name="shutdown"
              value="4"
              c:identifier="GST_LIBRARY_ERROR_SHUTDOWN"
              glib:nick="shutdown"/>
      <member name="settings"
              value="5"
              c:identifier="GST_LIBRARY_ERROR_SETTINGS"
              glib:nick="settings"/>
      <member name="encode"
              value="6"
              c:identifier="GST_LIBRARY_ERROR_ENCODE"
              glib:nick="encode"/>
      <member name="num_errors"
              value="7"
              c:identifier="GST_LIBRARY_ERROR_NUM_ERRORS"
              glib:nick="num-errors"/>
    </enumeration>
    <callback name="LogFunction" c:type="GstLogFunction">
      <doc xml:whitespace="preserve">Function prototype for a logging function that can be registered with
gst_debug_add_log_function().
Use G_GNUC_NO_INSTRUMENT on that function.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstDebugCategory</doc>
          <type name="DebugCategory" c:type="GstDebugCategory*"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstDebugLevel</doc>
          <type name="DebugLevel" c:type="GstDebugLevel"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <doc xml:whitespace="preserve">file name</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="function" transfer-ownership="none">
          <doc xml:whitespace="preserve">function name</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="line" transfer-ownership="none">
          <doc xml:whitespace="preserve">line number</doc>
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:whitespace="preserve">the message</doc>
          <type name="DebugMessage" c:type="GstDebugMessage*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">user data for the log function</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="MESSAGE_TRACE_NAME" value="GstMessage">
      <type name="utf8"/>
    </constant>
    <constant name="MSECOND" value="0">
      <type name="int"/>
    </constant>
    <constant name="M_PI" value="3.14159265359">
      <type name="double"/>
    </constant>
    <class name="Message"
           c:type="GstMessage"
           parent="MiniObject"
           glib:type-name="GstMessage"
           glib:get-type="gst_message_get_type"
           glib:type-struct="MessageClass"
           glib:fundamental="1">
      <doc xml:whitespace="preserve">A #GstMessage.</doc>
      <constructor name="new_eos" c:identifier="gst_message_new_eos">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_error" c:identifier="gst_message_new_error">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
          <parameter name="debug" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_warning" c:identifier="gst_message_new_warning">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
          <parameter name="debug" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_info" c:identifier="gst_message_new_info">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
          <parameter name="debug" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_tag" c:identifier="gst_message_new_tag">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="tag_list" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_tag_full" c:identifier="gst_message_new_tag_full">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
          <parameter name="tag_list" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_buffering"
                   c:identifier="gst_message_new_buffering">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="percent" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_state_changed"
                   c:identifier="gst_message_new_state_changed">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="oldstate" transfer-ownership="none">
            <type name="State" c:type="GstState"/>
          </parameter>
          <parameter name="newstate" transfer-ownership="none">
            <type name="State" c:type="GstState"/>
          </parameter>
          <parameter name="pending" transfer-ownership="none">
            <type name="State" c:type="GstState"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_state_dirty"
                   c:identifier="gst_message_new_state_dirty">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_step_done"
                   c:identifier="gst_message_new_step_done">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="amount" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="flush" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="intermediate" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="eos" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_clock_provide"
                   c:identifier="gst_message_new_clock_provide">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
          <parameter name="ready" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_clock_lost"
                   c:identifier="gst_message_new_clock_lost">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_new_clock"
                   c:identifier="gst_message_new_new_clock">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_application"
                   c:identifier="gst_message_new_application">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_element" c:identifier="gst_message_new_element">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_segment_start"
                   c:identifier="gst_message_new_segment_start">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_segment_done"
                   c:identifier="gst_message_new_segment_done">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_duration" c:identifier="gst_message_new_duration">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_latency" c:identifier="gst_message_new_latency">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_async_start"
                   c:identifier="gst_message_new_async_start">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="new_base_time" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_async_done"
                   c:identifier="gst_message_new_async_done">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_structure_change"
                   c:identifier="gst_message_new_structure_change">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="StructureChangeType" c:type="GstStructureChangeType"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="busy" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_stream_status"
                   c:identifier="gst_message_new_stream_status">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="StreamStatusType" c:type="GstStreamStatusType"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_request_state"
                   c:identifier="gst_message_new_request_state">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="State" c:type="GstState"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_step_start"
                   c:identifier="gst_message_new_step_start">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="active" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="amount" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="flush" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="intermediate" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_qos" c:identifier="gst_message_new_qos">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="live" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="running_time" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="stream_time" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="timestamp" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_custom" c:identifier="gst_message_new_custom">
        <return-value transfer-ownership="full">
          <type name="Message" c:type="GstMessage*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="MessageType" c:type="GstMessageType"/>
          </parameter>
          <parameter name="src" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="type_get_name" c:identifier="gst_message_type_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="MessageType" c:type="GstMessageType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_to_quark" c:identifier="gst_message_type_to_quark">
        <return-value transfer-ownership="full">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="MessageType" c:type="GstMessageType"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_seqnum" c:identifier="gst_message_get_seqnum">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="set_seqnum" c:identifier="gst_message_set_seqnum">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="seqnum" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_error" c:identifier="gst_message_parse_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gerror" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="debug" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="parse_warning" c:identifier="gst_message_parse_warning">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gerror" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="debug" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="parse_info" c:identifier="gst_message_parse_info">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gerror" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="debug" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="parse_tag" c:identifier="gst_message_parse_tag">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tag_list" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList**"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_tag_full" c:identifier="gst_message_parse_tag_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad**"/>
          </parameter>
          <parameter name="tag_list" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList**"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_buffering"
              c:identifier="gst_message_parse_buffering">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="percent"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffering_stats"
              c:identifier="gst_message_set_buffering_stats">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="BufferingMode" c:type="GstBufferingMode"/>
          </parameter>
          <parameter name="avg_in" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="avg_out" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="buffering_left" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_buffering_stats"
              c:identifier="gst_message_parse_buffering_stats">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="BufferingMode" c:type="GstBufferingMode*"/>
          </parameter>
          <parameter name="avg_in"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="avg_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="buffering_left"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_state_changed"
              c:identifier="gst_message_parse_state_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="oldstate" transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
          <parameter name="newstate" transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
          <parameter name="pending" transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_step_done"
              c:identifier="gst_message_parse_step_done">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="amount"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="flush"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="intermediate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="eos"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_clock_provide"
              c:identifier="gst_message_parse_clock_provide">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock**"/>
          </parameter>
          <parameter name="ready"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_clock_lost"
              c:identifier="gst_message_parse_clock_lost">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock**"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_new_clock"
              c:identifier="gst_message_parse_new_clock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock**"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_segment_start"
              c:identifier="gst_message_parse_segment_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="position"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_segment_done"
              c:identifier="gst_message_parse_segment_done">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="position"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_duration" c:identifier="gst_message_parse_duration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_async_start"
              c:identifier="gst_message_parse_async_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="new_base_time"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_structure_change"
              c:identifier="gst_message_parse_structure_change">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="StructureChangeType" c:type="GstStructureChangeType*"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="Element" c:type="GstElement**"/>
          </parameter>
          <parameter name="busy"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_stream_status"
              c:identifier="gst_message_parse_stream_status">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="StreamStatusType" c:type="GstStreamStatusType*"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="Element" c:type="GstElement**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stream_status_object"
              c:identifier="gst_message_set_stream_status_object">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_stream_status_object"
              c:identifier="gst_message_get_stream_status_object">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
      </method>
      <method name="parse_request_state"
              c:identifier="gst_message_parse_request_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="State" c:type="GstState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_step_start"
              c:identifier="gst_message_parse_step_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="active"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="amount"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="flush"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="intermediate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_qos_values" c:identifier="gst_message_set_qos_values">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="jitter" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="proportion" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="quality" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_qos_stats" c:identifier="gst_message_set_qos_stats">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="processed" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="dropped" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_qos" c:identifier="gst_message_parse_qos">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="live"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="running_time"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="stream_time"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="timestamp"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_qos_values"
              c:identifier="gst_message_parse_qos_values">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="jitter"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="proportion"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="quality"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_qos_stats"
              c:identifier="gst_message_parse_qos_stats">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="processed"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
          <parameter name="dropped"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_structure" c:identifier="gst_message_get_structure">
        <return-value transfer-ownership="none">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
      </method>
      <field name="mini_object">
        <type name="MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="lock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="cond">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="type">
        <type name="MessageType" c:type="GstMessageType"/>
      </field>
      <field name="timestamp">
        <type name="uint64" c:type="guint64"/>
      </field>
      <field name="src">
        <type name="Object" c:type="GstObject*"/>
      </field>
      <field name="structure">
        <type name="Structure" c:type="GstStructure*"/>
      </field>
      <union name="abidata" c:type="abidata">
        <record name="ABI" c:type="ABI">
          <field name="seqnum" writable="1">
            <type name="uint32" c:type="guint32"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="4">
            <type name="any"/>
          </array>
        </field>
      </union>
    </class>
    <record name="MessageClass"
            c:type="GstMessageClass"
            glib:is-gtype-struct-for="Message">
      <field name="mini_object_class">
        <type name="MiniObjectClass" c:type="GstMiniObjectClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="MessageType"
              glib:type-name="GstMessageType"
              glib:get-type="gst_message_type_get_type"
              c:type="GstMessageType">
      <doc xml:whitespace="preserve">The different message types that are available.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GST_MESSAGE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="eos"
              value="1"
              c:identifier="GST_MESSAGE_EOS"
              glib:nick="eos"/>
      <member name="error"
              value="2"
              c:identifier="GST_MESSAGE_ERROR"
              glib:nick="error"/>
      <member name="warning"
              value="4"
              c:identifier="GST_MESSAGE_WARNING"
              glib:nick="warning"/>
      <member name="info"
              value="8"
              c:identifier="GST_MESSAGE_INFO"
              glib:nick="info"/>
      <member name="tag"
              value="16"
              c:identifier="GST_MESSAGE_TAG"
              glib:nick="tag"/>
      <member name="buffering"
              value="32"
              c:identifier="GST_MESSAGE_BUFFERING"
              glib:nick="buffering"/>
      <member name="state_changed"
              value="64"
              c:identifier="GST_MESSAGE_STATE_CHANGED"
              glib:nick="state-changed"/>
      <member name="state_dirty"
              value="128"
              c:identifier="GST_MESSAGE_STATE_DIRTY"
              glib:nick="state-dirty"/>
      <member name="step_done"
              value="256"
              c:identifier="GST_MESSAGE_STEP_DONE"
              glib:nick="step-done"/>
      <member name="clock_provide"
              value="512"
              c:identifier="GST_MESSAGE_CLOCK_PROVIDE"
              glib:nick="clock-provide"/>
      <member name="clock_lost"
              value="1024"
              c:identifier="GST_MESSAGE_CLOCK_LOST"
              glib:nick="clock-lost"/>
      <member name="new_clock"
              value="2048"
              c:identifier="GST_MESSAGE_NEW_CLOCK"
              glib:nick="new-clock"/>
      <member name="structure_change"
              value="4096"
              c:identifier="GST_MESSAGE_STRUCTURE_CHANGE"
              glib:nick="structure-change"/>
      <member name="stream_status"
              value="8192"
              c:identifier="GST_MESSAGE_STREAM_STATUS"
              glib:nick="stream-status"/>
      <member name="application"
              value="16384"
              c:identifier="GST_MESSAGE_APPLICATION"
              glib:nick="application"/>
      <member name="element"
              value="32768"
              c:identifier="GST_MESSAGE_ELEMENT"
              glib:nick="element"/>
      <member name="segment_start"
              value="65536"
              c:identifier="GST_MESSAGE_SEGMENT_START"
              glib:nick="segment-start"/>
      <member name="segment_done"
              value="131072"
              c:identifier="GST_MESSAGE_SEGMENT_DONE"
              glib:nick="segment-done"/>
      <member name="duration"
              value="262144"
              c:identifier="GST_MESSAGE_DURATION"
              glib:nick="duration"/>
      <member name="latency"
              value="524288"
              c:identifier="GST_MESSAGE_LATENCY"
              glib:nick="latency"/>
      <member name="async_start"
              value="1048576"
              c:identifier="GST_MESSAGE_ASYNC_START"
              glib:nick="async-start"/>
      <member name="async_done"
              value="2097152"
              c:identifier="GST_MESSAGE_ASYNC_DONE"
              glib:nick="async-done"/>
      <member name="request_state"
              value="4194304"
              c:identifier="GST_MESSAGE_REQUEST_STATE"
              glib:nick="request-state"/>
      <member name="step_start"
              value="8388608"
              c:identifier="GST_MESSAGE_STEP_START"
              glib:nick="step-start"/>
      <member name="qos"
              value="16777216"
              c:identifier="GST_MESSAGE_QOS"
              glib:nick="qos"/>
      <member name="any"
              value="-1"
              c:identifier="GST_MESSAGE_ANY"
              glib:nick="any"/>
    </bitfield>
    <class name="MiniObject"
           c:type="GstMiniObject"
           abstract="1"
           glib:type-name="GstMiniObject"
           glib:get-type="gst_mini_object_get_type"
           glib:type-struct="MiniObjectClass"
           glib:fundamental="1"
           glib:ref-func="gst_mini_object_ref"
           glib:unref-func="gst_mini_object_unref"
           glib:set-value-func="gst_value_set_mini_object"
           glib:get-value-func="gst_value_get_mini_object">
      <doc xml:whitespace="preserve">Base class for refcounted lightweight objects.</doc>
      <constructor name="new" c:identifier="gst_mini_object_new">
        <return-value transfer-ownership="full">
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gst_mini_object_copy">
        <return-value transfer-ownership="full">
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </return-value>
      </method>
      <method name="is_writable" c:identifier="gst_mini_object_is_writable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="make_writable"
              c:identifier="gst_mini_object_make_writable">
        <return-value transfer-ownership="full">
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </return-value>
      </method>
      <method name="ref" c:identifier="gst_mini_object_ref">
        <return-value transfer-ownership="full">
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="gst_mini_object_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="replace" c:identifier="gst_mini_object_replace">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="newdata" transfer-ownership="none">
            <type name="MiniObject" c:type="GstMiniObject*"/>
          </parameter>
        </parameters>
      </method>
      <field name="instance">
        <type name="GObject.TypeInstance" c:type="GTypeInstance"/>
      </field>
      <field name="refcount">
        <type name="int" c:type="gint"/>
      </field>
      <field name="flags">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="_gst_reserved">
        <type name="any" c:type="gpointer"/>
      </field>
    </class>
    <record name="MiniObjectClass"
            c:type="GstMiniObjectClass"
            glib:is-gtype-struct-for="MiniObject">
      <field name="type_class">
        <type name="GObject.TypeClass" c:type="GTypeClass"/>
      </field>
      <field name="copy">
        <type name="MiniObjectCopyFunction"
              c:type="GstMiniObjectCopyFunction"/>
      </field>
      <field name="finalize">
        <type name="MiniObjectFinalizeFunction"
              c:type="GstMiniObjectFinalizeFunction"/>
      </field>
      <field name="_gst_reserved">
        <type name="any" c:type="gpointer"/>
      </field>
    </record>
    <callback name="MiniObjectCopyFunction" c:type="GstMiniObjectCopyFunction">
      <doc xml:whitespace="preserve">Virtual function prototype for methods to create copies of instances.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">reference to cloned instance.</doc>
        <type name="MiniObject" c:type="GstMiniObject*"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <doc xml:whitespace="preserve">MiniObject to copy</doc>
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="MiniObjectFinalizeFunction"
              c:type="GstMiniObjectFinalizeFunction">
      <doc xml:whitespace="preserve">Virtual function prototype for methods to free ressources used by
mini-objects. Subclasses of the mini object are allowed to revive the
passed object by doing a gst_mini_object_ref(). If the object is not
revived after the finalize function, the memory associated with the
object is freed.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <doc xml:whitespace="preserve">MiniObject to finalize</doc>
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="MiniObjectFlags"
              glib:type-name="GstMiniObjectFlags"
              glib:get-type="gst_mini_object_flags_get_type"
              c:type="GstMiniObjectFlags">
      <doc xml:whitespace="preserve">Flags for the padtemplate</doc>
      <member name="readonly"
              value="1"
              c:identifier="GST_MINI_OBJECT_FLAG_READONLY"
              glib:nick="readonly"/>
      <member name="last"
              value="16"
              c:identifier="GST_MINI_OBJECT_FLAG_LAST"
              glib:nick="last"/>
    </bitfield>
    <constant name="NSECOND" value="0">
      <type name="int"/>
    </constant>
    <class name="Object"
           c:type="GstObject"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GstObject"
           glib:get-type="gst_object_get_type"
           glib:type-struct="ObjectClass">
      <doc xml:whitespace="preserve">GStreamer base object class.</doc>
      <function name="default_deep_notify"
                c:identifier="gst_object_default_deep_notify">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="orig" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="pspec" transfer-ownership="none">
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
          <parameter name="excluded_props" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </function>
      <function name="ref" c:identifier="gst_object_ref">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="unref" c:identifier="gst_object_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="ref_sink" c:identifier="gst_object_ref_sink">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="sink" c:identifier="gst_object_sink">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="check_uniqueness"
                c:identifier="gst_object_check_uniqueness"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="save_thyself" invoker="save_thyself">
        <return-value transfer-ownership="full">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="restore_thyself" invoker="restore_thyself">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="self" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_name" c:identifier="gst_object_set_name">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="gst_object_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_name_prefix" c:identifier="gst_object_set_name_prefix">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name_prefix" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name_prefix" c:identifier="gst_object_get_name_prefix">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_parent" c:identifier="gst_object_set_parent">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_parent" c:identifier="gst_object_get_parent">
        <return-value transfer-ownership="full">
          <type name="Object" c:type="GstObject*"/>
        </return-value>
      </method>
      <method name="unparent" c:identifier="gst_object_unparent">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="has_ancestor" c:identifier="gst_object_has_ancestor">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="ancestor" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace" c:identifier="gst_object_replace">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="newobj" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_path_string" c:identifier="gst_object_get_path_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="save_thyself" c:identifier="gst_object_save_thyself">
        <return-value transfer-ownership="full">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </method>
      <method name="restore_thyself" c:identifier="gst_object_restore_thyself">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="self" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </method>
      <method name="default_error" c:identifier="gst_object_default_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
          <parameter name="debug" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="name"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="refcount">
        <type name="int" c:type="gint"/>
      </field>
      <field name="lock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="name_prefix">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="parent">
        <type name="Object" c:type="GstObject*"/>
      </field>
      <field name="flags">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="_gst_reserved">
        <type name="any" c:type="gpointer"/>
      </field>
      <glib:signal name="deep-notify">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Object" c:type="GstObject"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.ParamSpec" c:type="GParam"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="object-saved">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="parent-set">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Object" c:type="GstObject"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="parent-unset">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Object" c:type="GstObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ObjectClass"
            c:type="GstObjectClass"
            glib:is-gtype-struct-for="Object">
      <doc xml:whitespace="preserve">GStreamer base object class.</doc>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="path_string_separator">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="signal_object">
        <type name="GObject.Object" c:type="GObject*"/>
      </field>
      <field name="lock">
        <type name="GLib.StaticRecMutex" c:type="GStaticRecMutex*"/>
      </field>
      <field name="parent_set">
        <callback name="parent_set" c:type="parent_set">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="parent" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parent_unset">
        <callback name="parent_unset" c:type="parent_unset">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="parent" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="object_saved">
        <callback name="object_saved" c:type="object_saved">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="parent" transfer-ownership="none">
              <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deep_notify">
        <callback name="deep_notify" c:type="deep_notify">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="orig" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="pspec" transfer-ownership="none">
              <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="save_thyself">
        <callback name="save_thyself" c:type="save_thyself">
          <return-value transfer-ownership="full">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="parent" transfer-ownership="none">
              <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="restore_thyself">
        <callback name="restore_thyself" c:type="restore_thyself">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="self" transfer-ownership="none">
              <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="ObjectFlags"
              glib:type-name="GstObjectFlags"
              glib:get-type="gst_object_flags_get_type"
              c:type="GstObjectFlags">
      <doc xml:whitespace="preserve">The standard flags that an gstobject may have.</doc>
      <member name="disposing"
              value="1"
              c:identifier="GST_OBJECT_DISPOSING"
              glib:nick="disposing"/>
      <member name="floating"
              value="2"
              c:identifier="GST_OBJECT_FLOATING"
              glib:nick="floating"/>
      <member name="flag_last"
              value="16"
              c:identifier="GST_OBJECT_FLAG_LAST"
              glib:nick="flag-last"/>
    </bitfield>
    <constant name="PADDING" value="4">
      <type name="int"/>
    </constant>
    <constant name="PADDING_LARGE" value="20">
      <type name="int"/>
    </constant>
    <constant name="PAD_LINK_CHECK_DEFAULT" value="0">
      <type name="int"/>
    </constant>
    <constant name="PARAM_CONTROLLABLE" value="2">
      <type name="int"/>
    </constant>
    <constant name="PARAM_MUTABLE_PAUSED" value="8">
      <type name="int"/>
    </constant>
    <constant name="PARAM_MUTABLE_PLAYING" value="16">
      <type name="int"/>
    </constant>
    <constant name="PARAM_MUTABLE_READY" value="4">
      <type name="int"/>
    </constant>
    <constant name="PARAM_USER_SHIFT" value="256">
      <type name="int"/>
    </constant>
    <constant name="PTR_FORMAT" value="P">
      <type name="utf8"/>
    </constant>
    <class name="Pad"
           c:type="GstPad"
           parent="Object"
           glib:type-name="GstPad"
           glib:get-type="gst_pad_get_type"
           glib:type-struct="PadClass">
      <doc xml:whitespace="preserve">The #GstPad structure. Use the functions to update the variables.</doc>
      <constructor name="new" c:identifier="gst_pad_new">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_template"
                   c:identifier="gst_pad_new_from_template">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="templ" transfer-ownership="none">
            <type name="PadTemplate" c:type="GstPadTemplate*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_static_template"
                   c:identifier="gst_pad_new_from_static_template">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
        <parameters>
          <parameter name="templ" transfer-ownership="none">
            <type name="StaticPadTemplate" c:type="GstStaticPadTemplate*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="load_and_link" c:identifier="gst_pad_load_and_link">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="self" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_direction" c:identifier="gst_pad_get_direction">
        <return-value transfer-ownership="full">
          <type name="PadDirection" c:type="GstPadDirection"/>
        </return-value>
      </method>
      <method name="set_active" c:identifier="gst_pad_set_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="active" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_active" c:identifier="gst_pad_is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="activate_pull" c:identifier="gst_pad_activate_pull">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="active" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="activate_push" c:identifier="gst_pad_activate_push">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="active" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blocked" c:identifier="gst_pad_set_blocked">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="blocked" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blocked_async"
              c:identifier="gst_pad_set_blocked_async">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="blocked" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <type name="PadBlockCallback" c:type="GstPadBlockCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blocked_async_full"
              c:identifier="gst_pad_set_blocked_async_full">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="blocked" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <type name="PadBlockCallback" c:type="GstPadBlockCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_data"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_blocked" c:identifier="gst_pad_is_blocked">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_blocking" c:identifier="gst_pad_is_blocking">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_element_private"
              c:identifier="gst_pad_set_element_private">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="priv" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element_private"
              c:identifier="gst_pad_get_element_private">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="get_pad_template" c:identifier="gst_pad_get_pad_template">
        <return-value transfer-ownership="full">
          <type name="PadTemplate" c:type="GstPadTemplate*"/>
        </return-value>
      </method>
      <method name="set_bufferalloc_function"
              c:identifier="gst_pad_set_bufferalloc_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bufalloc" transfer-ownership="none" scope="call">
            <type name="PadBufferAllocFunction"
                  c:type="GstPadBufferAllocFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="alloc_buffer" c:identifier="gst_pad_alloc_buffer">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="alloc_buffer_and_set_caps"
              c:identifier="gst_pad_alloc_buffer_and_set_caps">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_activate_function"
              c:identifier="gst_pad_set_activate_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="activate" transfer-ownership="none" scope="call">
            <type name="PadActivateFunction" c:type="GstPadActivateFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_activatepull_function"
              c:identifier="gst_pad_set_activatepull_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="activatepull"
                     transfer-ownership="none"
                     scope="call">
            <type name="PadActivateModeFunction"
                  c:type="GstPadActivateModeFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_activatepush_function"
              c:identifier="gst_pad_set_activatepush_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="activatepush"
                     transfer-ownership="none"
                     scope="call">
            <type name="PadActivateModeFunction"
                  c:type="GstPadActivateModeFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chain_function"
              c:identifier="gst_pad_set_chain_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="chain" transfer-ownership="none" scope="call">
            <type name="PadChainFunction" c:type="GstPadChainFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chain_list_function"
              c:identifier="gst_pad_set_chain_list_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="chainlist" transfer-ownership="none" scope="call">
            <type name="PadChainListFunction"
                  c:type="GstPadChainListFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_getrange_function"
              c:identifier="gst_pad_set_getrange_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="get" transfer-ownership="none" scope="call">
            <type name="PadGetRangeFunction" c:type="GstPadGetRangeFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_checkgetrange_function"
              c:identifier="gst_pad_set_checkgetrange_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="check" transfer-ownership="none" scope="call">
            <type name="PadCheckGetRangeFunction"
                  c:type="GstPadCheckGetRangeFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_event_function"
              c:identifier="gst_pad_set_event_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none" scope="call">
            <type name="PadEventFunction" c:type="GstPadEventFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_link_function"
              c:identifier="gst_pad_set_link_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="link" transfer-ownership="none" scope="call">
            <type name="PadLinkFunction" c:type="GstPadLinkFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unlink_function"
              c:identifier="gst_pad_set_unlink_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="unlink" transfer-ownership="none" scope="call">
            <type name="PadUnlinkFunction" c:type="GstPadUnlinkFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_link" c:identifier="gst_pad_can_link">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sinkpad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="link" c:identifier="gst_pad_link">
        <return-value transfer-ownership="full">
          <type name="PadLinkReturn" c:type="GstPadLinkReturn"/>
        </return-value>
        <parameters>
          <parameter name="sinkpad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="link_full" c:identifier="gst_pad_link_full">
        <return-value transfer-ownership="full">
          <type name="PadLinkReturn" c:type="GstPadLinkReturn"/>
        </return-value>
        <parameters>
          <parameter name="sinkpad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="PadLinkCheck" c:type="GstPadLinkCheck"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlink" c:identifier="gst_pad_unlink">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sinkpad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_linked" c:identifier="gst_pad_is_linked">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_peer" c:identifier="gst_pad_get_peer">
        <return-value transfer-ownership="full">
          <type name="Pad" c:type="GstPad*"/>
        </return-value>
      </method>
      <method name="set_getcaps_function"
              c:identifier="gst_pad_set_getcaps_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="getcaps" transfer-ownership="none" scope="call">
            <type name="PadGetCapsFunction" c:type="GstPadGetCapsFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_acceptcaps_function"
              c:identifier="gst_pad_set_acceptcaps_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="acceptcaps" transfer-ownership="none" scope="call">
            <type name="PadAcceptCapsFunction"
                  c:type="GstPadAcceptCapsFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fixatecaps_function"
              c:identifier="gst_pad_set_fixatecaps_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fixatecaps" transfer-ownership="none" scope="call">
            <type name="PadFixateCapsFunction"
                  c:type="GstPadFixateCapsFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_setcaps_function"
              c:identifier="gst_pad_set_setcaps_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="setcaps" transfer-ownership="none" scope="call">
            <type name="PadSetCapsFunction" c:type="GstPadSetCapsFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pad_template_caps"
              c:identifier="gst_pad_get_pad_template_caps">
        <return-value transfer-ownership="none">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="get_caps_reffed" c:identifier="gst_pad_get_caps_reffed">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="get_caps" c:identifier="gst_pad_get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="fixate_caps" c:identifier="gst_pad_fixate_caps">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_caps" c:identifier="gst_pad_accept_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caps" c:identifier="gst_pad_set_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peer_get_caps_reffed"
              c:identifier="gst_pad_peer_get_caps_reffed">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="peer_get_caps" c:identifier="gst_pad_peer_get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="peer_accept_caps" c:identifier="gst_pad_peer_accept_caps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_allowed_caps" c:identifier="gst_pad_get_allowed_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="get_negotiated_caps"
              c:identifier="gst_pad_get_negotiated_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="push" c:identifier="gst_pad_push">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="push_list" c:identifier="gst_pad_push_list">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="BufferList" c:type="GstBufferList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_pull_range" c:identifier="gst_pad_check_pull_range">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="pull_range" c:identifier="gst_pad_pull_range">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="push_event" c:identifier="gst_pad_push_event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="event_default" c:identifier="gst_pad_event_default">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="chain" c:identifier="gst_pad_chain">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="chain_list" c:identifier="gst_pad_chain_list">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="BufferList" c:type="GstBufferList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_range" c:identifier="gst_pad_get_range">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_event" c:identifier="gst_pad_send_event">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="GstEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_task" c:identifier="gst_pad_start_task">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="TaskFunction" c:type="GstTaskFunction"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="pause_task" c:identifier="gst_pad_pause_task">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="stop_task" c:identifier="gst_pad_stop_task">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_internal_link_function"
              c:identifier="gst_pad_set_internal_link_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="intlink" transfer-ownership="none" scope="call">
            <type name="PadIntLinkFunction" c:type="GstPadIntLinkFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_internal_links"
              c:identifier="gst_pad_get_internal_links"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_internal_links_default"
              c:identifier="gst_pad_get_internal_links_default"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="set_iterate_internal_links_function"
              c:identifier="gst_pad_set_iterate_internal_links_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iterintlink" transfer-ownership="none" scope="call">
            <type name="PadIterIntLinkFunction"
                  c:type="GstPadIterIntLinkFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="iterate_internal_links"
              c:identifier="gst_pad_iterate_internal_links">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="iterate_internal_links_default"
              c:identifier="gst_pad_iterate_internal_links_default">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </method>
      <method name="set_query_type_function"
              c:identifier="gst_pad_set_query_type_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type_func" transfer-ownership="none" scope="call">
            <type name="PadQueryTypeFunction"
                  c:type="GstPadQueryTypeFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_query_types" c:identifier="gst_pad_get_query_types">
        <return-value transfer-ownership="none">
          <type name="QueryType" c:type="GstQueryType*"/>
        </return-value>
      </method>
      <method name="get_query_types_default"
              c:identifier="gst_pad_get_query_types_default">
        <return-value transfer-ownership="none">
          <type name="QueryType" c:type="GstQueryType*"/>
        </return-value>
      </method>
      <method name="query" c:identifier="gst_pad_query">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peer_query" c:identifier="gst_pad_peer_query">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_query_function"
              c:identifier="gst_pad_set_query_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none" scope="call">
            <type name="PadQueryFunction" c:type="GstPadQueryFunction"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_default" c:identifier="gst_pad_query_default">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dispatcher" c:identifier="gst_pad_dispatcher">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dispatch"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="PadDispatcherFunction"
                  c:type="GstPadDispatcherFunction"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="use_fixed_caps" c:identifier="gst_pad_use_fixed_caps">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_fixed_caps_func"
              c:identifier="gst_pad_get_fixed_caps_func">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="proxy_getcaps" c:identifier="gst_pad_proxy_getcaps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="proxy_setcaps" c:identifier="gst_pad_proxy_setcaps">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_parent_element"
              c:identifier="gst_pad_get_parent_element">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
      </method>
      <method name="query_position" c:identifier="gst_pad_query_position">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="cur"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_duration" c:identifier="gst_pad_query_duration">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_convert" c:identifier="gst_pad_query_convert">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="src_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="src_val" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="dest_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="dest_val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_peer_position"
              c:identifier="gst_pad_query_peer_position">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="cur"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_peer_duration"
              c:identifier="gst_pad_query_peer_duration">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_peer_convert"
              c:identifier="gst_pad_query_peer_convert">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="src_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="src_val" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="dest_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="dest_val"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_data_probe" c:identifier="gst_pad_add_data_probe">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="handler"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_data_probe_full"
              c:identifier="gst_pad_add_data_probe_full">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="handler"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_data_probe"
              c:identifier="gst_pad_remove_data_probe">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_event_probe" c:identifier="gst_pad_add_event_probe">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="handler"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_event_probe_full"
              c:identifier="gst_pad_add_event_probe_full">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="handler"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_event_probe"
              c:identifier="gst_pad_remove_event_probe">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_buffer_probe" c:identifier="gst_pad_add_buffer_probe">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="handler"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_buffer_probe_full"
              c:identifier="gst_pad_add_buffer_probe_full">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="handler"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_buffer_probe"
              c:identifier="gst_pad_remove_buffer_probe">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="caps" transfer-ownership="none">
        <type name="Caps" c:type="GstCaps"/>
      </property>
      <property name="direction"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="PadDirection" c:type="GstPadDirection"/>
      </property>
      <property name="template" writable="1" transfer-ownership="none">
        <type name="PadTemplate" c:type="GstPadTemplate"/>
      </property>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="element_private">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="padtemplate">
        <type name="PadTemplate" c:type="GstPadTemplate*"/>
      </field>
      <field name="direction">
        <type name="PadDirection" c:type="GstPadDirection"/>
      </field>
      <field name="stream_rec_lock">
        <type name="GLib.StaticRecMutex" c:type="GStaticRecMutex*"/>
      </field>
      <field name="task">
        <type name="Task" c:type="GstTask*"/>
      </field>
      <field name="preroll_lock">
        <type name="GLib.Mutex" c:type="GMutex*"/>
      </field>
      <field name="preroll_cond">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="block_cond">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="block_callback">
        <type name="PadBlockCallback" c:type="GstPadBlockCallback"/>
      </field>
      <field name="block_data">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="caps">
        <type name="Caps" c:type="GstCaps*"/>
      </field>
      <field name="getcapsfunc">
        <type name="PadGetCapsFunction" c:type="GstPadGetCapsFunction"/>
      </field>
      <field name="setcapsfunc">
        <type name="PadSetCapsFunction" c:type="GstPadSetCapsFunction"/>
      </field>
      <field name="acceptcapsfunc">
        <type name="PadAcceptCapsFunction" c:type="GstPadAcceptCapsFunction"/>
      </field>
      <field name="fixatecapsfunc">
        <type name="PadFixateCapsFunction" c:type="GstPadFixateCapsFunction"/>
      </field>
      <field name="activatefunc">
        <type name="PadActivateFunction" c:type="GstPadActivateFunction"/>
      </field>
      <field name="activatepushfunc">
        <type name="PadActivateModeFunction"
              c:type="GstPadActivateModeFunction"/>
      </field>
      <field name="activatepullfunc">
        <type name="PadActivateModeFunction"
              c:type="GstPadActivateModeFunction"/>
      </field>
      <field name="linkfunc">
        <type name="PadLinkFunction" c:type="GstPadLinkFunction"/>
      </field>
      <field name="unlinkfunc">
        <type name="PadUnlinkFunction" c:type="GstPadUnlinkFunction"/>
      </field>
      <field name="peer">
        <type name="Pad" c:type="GstPad*"/>
      </field>
      <field name="sched_private">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="chainfunc">
        <type name="PadChainFunction" c:type="GstPadChainFunction"/>
      </field>
      <field name="checkgetrangefunc">
        <type name="PadCheckGetRangeFunction"
              c:type="GstPadCheckGetRangeFunction"/>
      </field>
      <field name="getrangefunc">
        <type name="PadGetRangeFunction" c:type="GstPadGetRangeFunction"/>
      </field>
      <field name="eventfunc">
        <type name="PadEventFunction" c:type="GstPadEventFunction"/>
      </field>
      <field name="mode">
        <type name="ActivateMode" c:type="GstActivateMode"/>
      </field>
      <field name="querytypefunc">
        <type name="PadQueryTypeFunction" c:type="GstPadQueryTypeFunction"/>
      </field>
      <field name="queryfunc">
        <type name="PadQueryFunction" c:type="GstPadQueryFunction"/>
      </field>
      <field name="intlinkfunc">
        <type name="PadIntLinkFunction" c:type="GstPadIntLinkFunction"/>
      </field>
      <field name="bufferallocfunc">
        <type name="PadBufferAllocFunction"
              c:type="GstPadBufferAllocFunction"/>
      </field>
      <field name="do_buffer_signals">
        <type name="int" c:type="gint"/>
      </field>
      <field name="do_event_signals">
        <type name="int" c:type="gint"/>
      </field>
      <field name="iterintlinkfunc">
        <type name="PadIterIntLinkFunction"
              c:type="GstPadIterIntLinkFunction"/>
      </field>
      <field name="block_destroy_data">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <union name="abidata" c:type="abidata">
        <record name="ABI" c:type="ABI">
          <field name="block_callback_called" writable="1">
            <type name="boolean" c:type="gboolean"/>
          </field>
          <field name="priv" writable="1">
            <type name="PadPrivate" c:type="GstPadPrivate*"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="2">
            <type name="any"/>
          </array>
        </field>
      </union>
      <glib:signal name="have-data">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="MiniObject" c:type="GstMiniObject"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="linked">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Pad" c:type="GstPad"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="request-link">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="unlinked">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Pad" c:type="GstPad"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <callback name="PadAcceptCapsFunction" c:type="GstPadAcceptCapsFunction">
      <doc xml:whitespace="preserve">Check if @pad can accept @caps. By default this function will see if @caps
intersect with the result from gst_pad_get_caps() by can be overridden to
perform extra checks.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the caps can be accepted by the pad.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstPad to check</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="caps" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstCaps to check</doc>
          <type name="Caps" c:type="GstCaps*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadActivateFunction" c:type="GstPadActivateFunction">
      <doc xml:whitespace="preserve">This function is called when the pad is activated during the element
READY to PAUSED state change. By default this function will call the
activate function that puts the pad in push mode but elements can
override this function to activate the pad in pull mode if they wish.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the pad could be activated.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstPad</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadActivateModeFunction"
              c:type="GstPadActivateModeFunction">
      <doc xml:whitespace="preserve">The prototype of the push and pull activate functions.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the pad could be activated or deactivated.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstPad</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="active" transfer-ownership="none">
          <doc xml:whitespace="preserve">activate or deactivate the pad.</doc>
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadBlockCallback" c:type="GstPadBlockCallback">
      <doc xml:whitespace="preserve">Callback used by gst_pad_set_blocked_async(). Gets called when the blocking
operation succeeds.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstPad that is blockend or unblocked.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="blocked" transfer-ownership="none">
          <doc xml:whitespace="preserve">blocking state for the pad</doc>
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">the gpointer to optional user data.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadBufferAllocFunction" c:type="GstPadBufferAllocFunction">
      <doc xml:whitespace="preserve">Ask the sinkpad @pad to allocate a buffer with @offset, @size and @caps.
The result will be stored in @buf.
The purpose of this function is to allocate a buffer that is optimal to
be processed by @pad. The function is mostly overridden by elements that can
provide a hardware buffer in order to avoid additional memcpy operations.
The function can return a buffer that has caps different from the requested
new caps.
If a format change was requested, the returned buffer will be one to hold
the data of said new caps, so its size might be different from the requested
When this function returns anything else than #GST_FLOW_OK, the buffer allocation
failed and @buf does not contain valid data. If the function returns #GST_FLOW_OK and
the @buf is NULL, a #GstBuffer will be created with @caps, @offset and @size.
By default this function returns a new buffer of @size and with @caps containing
purely malloced data. The buffer should be freed with gst_buffer_unref()
after usage.
value means @buf does not hold a valid buffer.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">#GST_FLOW_OK if @buf contains a valid buffer, any other return</doc>
        <type name="FlowReturn" c:type="GstFlowReturn"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">a sink #GstPad</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <doc xml:whitespace="preserve">the desired offset of the buffer</doc>
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:whitespace="preserve">the desired size of the buffer</doc>
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="caps" transfer-ownership="none">
          <doc xml:whitespace="preserve">the desired caps of the buffer</doc>
          <type name="Caps" c:type="GstCaps*"/>
        </parameter>
        <parameter name="buf" transfer-ownership="none">
          <doc xml:whitespace="preserve">pointer to hold the allocated buffer.</doc>
          <type name="Buffer" c:type="GstBuffer**"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadChainFunction" c:type="GstPadChainFunction">
      <doc xml:whitespace="preserve">A function that will be called on sinkpads when chaining buffers.
The function typically processes the data contained in the buffer and
either consumes the data or passes it on to the internally linked pad(s).
The implementer of this function receives a refcount to @buffer and should
gst_buffer_unref() when the buffer is no longer needed.
When a chain function detects an error in the data stream, it must post an
error on the bus and return an appropriate #GstFlowReturn value.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">#GST_FLOW_OK for success</doc>
        <type name="FlowReturn" c:type="GstFlowReturn"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the sink #GstPad that performed the chain.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstBuffer that is chained, not %NULL.</doc>
          <type name="Buffer" c:type="GstBuffer*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadChainListFunction" c:type="GstPadChainListFunction">
      <doc xml:whitespace="preserve">A function that will be called on sinkpads when chaining buffer lists.
The function typically processes the data contained in the buffer list and
either consumes the data or passes it on to the internally linked pad(s).
The implementer of this function receives a refcount to @list and
should gst_buffer_list_unref() when the list is no longer needed.
When a chainlist function detects an error in the data stream, it must
post an error on the bus and return an appropriate #GstFlowReturn value.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">#GST_FLOW_OK for success</doc>
        <type name="FlowReturn" c:type="GstFlowReturn"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the sink #GstPad that performed the chain.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="list" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstBufferList that is chained, not %NULL.</doc>
          <type name="BufferList" c:type="GstBufferList*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadCheckGetRangeFunction"
              c:type="GstPadCheckGetRangeFunction">
      <doc xml:whitespace="preserve">Check if @pad can be activated in pull mode.
This function will be deprecated after 0.10; use the seeking query to check
if a pad can support random access.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the pad can operate in pull mode.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstPad</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="PadClass"
            c:type="GstPadClass"
            glib:is-gtype-struct-for="Pad">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="linked">
        <callback name="linked" c:type="linked">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
            <parameter name="peer" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unlinked">
        <callback name="unlinked" c:type="unlinked">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
            <parameter name="peer" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="request_link">
        <callback name="request_link" c:type="request_link">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="have_data">
        <callback name="have_data" c:type="have_data">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="MiniObject" c:type="GstMiniObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <enumeration name="PadDirection"
                 glib:type-name="GstPadDirection"
                 glib:get-type="gst_pad_direction_get_type"
                 c:type="GstPadDirection">
      <doc xml:whitespace="preserve">The direction of a pad.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GST_PAD_UNKNOWN"
              glib:nick="unknown"/>
      <member name="src" value="1" c:identifier="GST_PAD_SRC" glib:nick="src"/>
      <member name="sink"
              value="2"
              c:identifier="GST_PAD_SINK"
              glib:nick="sink"/>
    </enumeration>
    <callback name="PadDispatcherFunction" c:type="GstPadDispatcherFunction">
      <doc xml:whitespace="preserve">A dispatcher function is called for all internally linked pads, see
gst_pad_dispatcher().</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the dispatching procedure has to be stopped.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstPad that is dispatched.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">the gpointer to optional user data.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadEventFunction" c:type="GstPadEventFunction">
      <doc xml:whitespace="preserve">Function signature to handle an event for the pad.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the pad could handle the event.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstPad to handle the event.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="event" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstEvent to handle.</doc>
          <type name="Event" c:type="GstEvent*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadFixateCapsFunction" c:type="GstPadFixateCapsFunction">
      <doc xml:whitespace="preserve">Given possibly unfixed caps @caps, let @pad use its default prefered
format to make a fixed caps. @caps should be writable. By default this
function will pick the first value of any ranges or lists in the caps but
elements can override this function to perform other behaviour.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstPad</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="caps" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstCaps to fixate</doc>
          <type name="Caps" c:type="GstCaps*"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="PadFlags"
              glib:type-name="GstPadFlags"
              glib:get-type="gst_pad_flags_get_type"
              c:type="GstPadFlags">
      <doc xml:whitespace="preserve">Pad state flags</doc>
      <member name="blocked"
              value="16"
              c:identifier="GST_PAD_BLOCKED"
              glib:nick="blocked"/>
      <member name="flushing"
              value="32"
              c:identifier="GST_PAD_FLUSHING"
              glib:nick="flushing"/>
      <member name="in_getcaps"
              value="64"
              c:identifier="GST_PAD_IN_GETCAPS"
              glib:nick="in-getcaps"/>
      <member name="in_setcaps"
              value="128"
              c:identifier="GST_PAD_IN_SETCAPS"
              glib:nick="in-setcaps"/>
      <member name="blocking"
              value="256"
              c:identifier="GST_PAD_BLOCKING"
              glib:nick="blocking"/>
      <member name="flag_last"
              value="4096"
              c:identifier="GST_PAD_FLAG_LAST"
              glib:nick="flag-last"/>
    </bitfield>
    <callback name="PadGetCapsFunction" c:type="GstPadGetCapsFunction">
      <doc xml:whitespace="preserve">Returns a copy of the capabilities of the specified pad. By default this
function will return the pad template capabilities, but can optionally
be overridden by elements.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a newly allocated copy #GstCaps of the pad.</doc>
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstPad to get the capabilities of.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadGetRangeFunction" c:type="GstPadGetRangeFunction">
      <doc xml:whitespace="preserve">This function will be called on source pads when a peer element
request a buffer at the specified @offset and @length. If this function
returns #GST_FLOW_OK, the result buffer will be stored in @buffer. The
contents of @buffer is invalid for any other return value.
This function is installed on a source pad with
gst_pad_set_getrange_function() and can only be called on source pads after
they are successfully activated with gst_pad_activate_pull().
between 0 and the length in bytes of the data available on @pad. The
length (duration in bytes) can be retrieved with a #GST_QUERY_DURATION or with a
#GST_QUERY_SEEKING.
Any @offset larger or equal than the length will make the function return
#GST_FLOW_UNEXPECTED, which corresponds to EOS. In this case @buffer does not
contain a valid buffer.
The buffer size of @buffer will only be smaller than @length when @offset is
near the end of the stream. In all other cases, the size of @buffer must be
exactly the requested size.
It is allowed to call this function with a 0 @length and valid @offset, in
which case @buffer will contain a 0-sized buffer and the function returns
#GST_FLOW_OK.
When this function is called with a -1 @offset, the sequentially next buffer
of length @length in the stream is returned.
When this function is called with a -1 @length, a buffer with a default
optimal length is returned in @buffer. The length might depend on the value
of @offset.
return value leaves @buffer undefined.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">#GST_FLOW_OK for success and a valid buffer in @buffer. Any other</doc>
        <type name="FlowReturn" c:type="GstFlowReturn"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the src #GstPad to perform the getrange on.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <doc xml:whitespace="preserve">the offset of the range</doc>
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:whitespace="preserve">the length of the range</doc>
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:whitespace="preserve">a memory location to hold the result buffer, cannot be NULL.</doc>
          <type name="Buffer" c:type="GstBuffer**"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadIntLinkFunction" c:type="GstPadIntLinkFunction">
      <doc xml:whitespace="preserve">The signature of the internal pad link function.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">returns</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="Pad"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GstPad to query.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadIterIntLinkFunction" c:type="GstPadIterIntLinkFunction">
      <doc xml:whitespace="preserve">The signature of the internal pad link iterator function.
linked to the given pad on the inside of the parent element.
the caller must call gst_iterator_free() after usage.
Since 0.10.21</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a new #GstIterator that will iterate over all pads that are</doc>
        <type name="Iterator" c:type="GstIterator*"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GstPad to query.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="PadLinkCheck"
              version="0.10.30"
              glib:type-name="GstPadLinkCheck"
              glib:get-type="gst_pad_link_check_get_type"
              c:type="GstPadLinkCheck">
      <doc xml:whitespace="preserve">The amount of checking to be done when linking pads. @GST_PAD_LINK_CHECK_CAPS
and @GST_PAD_LINK_CHECK_TEMPLATE_CAPS are mutually exclusive. If both are
specified, expensive but safe @GST_PAD_LINK_CHECK_CAPS are performed.
&lt;warning&gt;&lt;para&gt;
Only disable some of the checks if you are 100% certain you know the link
will not fail because of hierarchy/caps compatibility failures. If uncertain,
use the default checks (%GST_PAD_LINK_CHECK_DEFAULT) or the regular methods
for linking the pads.
&lt;/para&gt;&lt;/warning&gt;</doc>
      <member name="nothing"
              value="0"
              c:identifier="GST_PAD_LINK_CHECK_NOTHING"
              glib:nick="nothing"/>
      <member name="hierarchy"
              value="1"
              c:identifier="GST_PAD_LINK_CHECK_HIERARCHY"
              glib:nick="hierarchy"/>
      <member name="template_caps"
              value="2"
              c:identifier="GST_PAD_LINK_CHECK_TEMPLATE_CAPS"
              glib:nick="template-caps"/>
      <member name="caps"
              value="4"
              c:identifier="GST_PAD_LINK_CHECK_CAPS"
              glib:nick="caps"/>
    </bitfield>
    <callback name="PadLinkFunction" c:type="GstPadLinkFunction">
      <return-value transfer-ownership="full">
        <type name="PadLinkReturn" c:type="GstPadLinkReturn"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="peer" transfer-ownership="none">
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="PadLinkReturn"
                 glib:type-name="GstPadLinkReturn"
                 glib:get-type="gst_pad_link_return_get_type"
                 c:type="GstPadLinkReturn">
      <doc xml:whitespace="preserve">Result values from gst_pad_link and friends.</doc>
      <member name="ok"
              value="0"
              c:identifier="GST_PAD_LINK_OK"
              glib:nick="ok"/>
      <member name="wrong_hierarchy"
              value="-1"
              c:identifier="GST_PAD_LINK_WRONG_HIERARCHY"
              glib:nick="wrong-hierarchy"/>
      <member name="was_linked"
              value="-2"
              c:identifier="GST_PAD_LINK_WAS_LINKED"
              glib:nick="was-linked"/>
      <member name="wrong_direction"
              value="-3"
              c:identifier="GST_PAD_LINK_WRONG_DIRECTION"
              glib:nick="wrong-direction"/>
      <member name="noformat"
              value="-4"
              c:identifier="GST_PAD_LINK_NOFORMAT"
              glib:nick="noformat"/>
      <member name="nosched"
              value="-5"
              c:identifier="GST_PAD_LINK_NOSCHED"
              glib:nick="nosched"/>
      <member name="refused"
              value="-6"
              c:identifier="GST_PAD_LINK_REFUSED"
              glib:nick="refused"/>
    </enumeration>
    <enumeration name="PadPresence"
                 glib:type-name="GstPadPresence"
                 glib:get-type="gst_pad_presence_get_type"
                 c:type="GstPadPresence">
      <doc xml:whitespace="preserve">Indicates when this pad will become available.</doc>
      <member name="always"
              value="0"
              c:identifier="GST_PAD_ALWAYS"
              glib:nick="always"/>
      <member name="sometimes"
              value="1"
              c:identifier="GST_PAD_SOMETIMES"
              glib:nick="sometimes"/>
      <member name="request"
              value="2"
              c:identifier="GST_PAD_REQUEST"
              glib:nick="request"/>
    </enumeration>
    <record name="PadPrivate" c:type="GstPadPrivate">
    </record>
    <callback name="PadQueryFunction" c:type="GstPadQueryFunction">
      <doc xml:whitespace="preserve">The signature of the query function.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the query could be performed.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstPad to query.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="query" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstQuery object to execute</doc>
          <type name="Query" c:type="GstQuery*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadQueryTypeFunction" c:type="GstPadQueryTypeFunction">
      <doc xml:whitespace="preserve">The signature of the query types function.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">a constant array of query types</doc>
        <type name="QueryType" c:type="GstQueryType*"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstPad to query</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PadSetCapsFunction" c:type="GstPadSetCapsFunction">
      <doc xml:whitespace="preserve">Set @caps on @pad. By default this function updates the caps of the
pad but the function can be overriden by elements to perform extra
actions or verifications.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the caps could be set on the pad.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstPad to set the capabilities of.</doc>
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="caps" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstCaps to set</doc>
          <type name="Caps" c:type="GstCaps*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="PadTemplate"
           c:type="GstPadTemplate"
           parent="Object"
           glib:type-name="GstPadTemplate"
           glib:get-type="gst_pad_template_get_type"
           glib:type-struct="PadTemplateClass">
      <doc xml:whitespace="preserve">The padtemplate object.</doc>
      <constructor name="new" c:identifier="gst_pad_template_new">
        <return-value transfer-ownership="full">
          <type name="PadTemplate" c:type="GstPadTemplate*"/>
        </return-value>
        <parameters>
          <parameter name="name_template" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="presence" transfer-ownership="none">
            <type name="PadPresence" c:type="GstPadPresence"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_caps" c:identifier="gst_pad_template_get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="pad_created" c:identifier="gst_pad_template_pad_created">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pad" transfer-ownership="none">
            <type name="Pad" c:type="GstPad*"/>
          </parameter>
        </parameters>
      </method>
      <property name="caps"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Caps" c:type="GstCaps"/>
      </property>
      <property name="direction"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="PadDirection" c:type="GstPadDirection"/>
      </property>
      <property name="name-template"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="presence"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="PadPresence" c:type="GstPadPresence"/>
      </property>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="name_template">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="direction">
        <type name="PadDirection" c:type="GstPadDirection"/>
      </field>
      <field name="presence">
        <type name="PadPresence" c:type="GstPadPresence"/>
      </field>
      <field name="caps">
        <type name="Caps" c:type="GstCaps*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
      <glib:signal name="pad-created">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Pad" c:type="GstPad"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PadTemplateClass"
            c:type="GstPadTemplateClass"
            glib:is-gtype-struct-for="PadTemplate">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="pad_created">
        <callback name="pad_created" c:type="pad_created">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="templ" transfer-ownership="none">
              <type name="PadTemplate" c:type="GstPadTemplate*"/>
            </parameter>
            <parameter name="pad" transfer-ownership="none">
              <type name="Pad" c:type="GstPad*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="PadTemplateFlags"
              glib:type-name="GstPadTemplateFlags"
              glib:get-type="gst_pad_template_flags_get_type"
              c:type="GstPadTemplateFlags">
      <doc xml:whitespace="preserve">Flags for the padtemplate</doc>
      <member name="fixed"
              value="16"
              c:identifier="GST_PAD_TEMPLATE_FIXED"
              glib:nick="fixed"/>
      <member name="flag_last"
              value="256"
              c:identifier="GST_PAD_TEMPLATE_FLAG_LAST"
              glib:nick="flag-last"/>
    </bitfield>
    <callback name="PadUnlinkFunction" c:type="GstPadUnlinkFunction">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="pad" transfer-ownership="none">
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="ParamFraction"
           c:type="GstParamFraction"
           parent="GObject.Object"
           glib:type-name="GstParamFraction"
           glib:get-type="gst_param_spec_fraction_get_type"
           glib:fundamental="1">
    </class>
    <record name="ParamSpecFraction" c:type="GstParamSpecFraction">
      <doc xml:whitespace="preserve">A GParamSpec derived structure that contains the meta data for fractional
properties.</doc>
      <field name="parent_instance" writable="1">
        <type name="GObject.ParamSpec" c:type="GParamSpec"/>
      </field>
      <field name="min_num" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="min_den" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="max_num" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="max_den" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="def_num" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="def_den" writable="1">
        <type name="int" c:type="gint"/>
      </field>
    </record>
    <record name="ParamSpecMiniObject" c:type="GstParamSpecMiniObject">
      <doc xml:whitespace="preserve">A %GParamSpec derived structure that contains the meta data
for %GstMiniObject properties.</doc>
      <field name="parent_instance" writable="1">
        <type name="GObject.ParamSpec" c:type="GParamSpec"/>
      </field>
    </record>
    <record name="ParseContext" c:type="GstParseContext" version="0.10.20">
      <doc xml:whitespace="preserve">Opaque structure.</doc>
      <constructor name="new" c:identifier="gst_parse_context_new">
        <return-value transfer-ownership="full">
          <type name="ParseContext" c:type="GstParseContext*"/>
        </return-value>
      </constructor>
      <method name="get_missing_elements"
              c:identifier="gst_parse_context_get_missing_elements">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="free" c:identifier="gst_parse_context_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <enumeration name="ParseError"
                 glib:type-name="GstParseError"
                 glib:get-type="gst_parse_error_get_type"
                 c:type="GstParseError"
                 glib:error-quark="gst_parse_error_quark">
      <doc xml:whitespace="preserve">The different parsing errors that can occur.</doc>
      <member name="syntax"
              value="0"
              c:identifier="GST_PARSE_ERROR_SYNTAX"
              glib:nick="syntax"/>
      <member name="no_such_element"
              value="1"
              c:identifier="GST_PARSE_ERROR_NO_SUCH_ELEMENT"
              glib:nick="no-such-element"/>
      <member name="no_such_property"
              value="2"
              c:identifier="GST_PARSE_ERROR_NO_SUCH_PROPERTY"
              glib:nick="no-such-property"/>
      <member name="link"
              value="3"
              c:identifier="GST_PARSE_ERROR_LINK"
              glib:nick="link"/>
      <member name="could_not_set_property"
              value="4"
              c:identifier="GST_PARSE_ERROR_COULD_NOT_SET_PROPERTY"
              glib:nick="could-not-set-property"/>
      <member name="empty_bin"
              value="5"
              c:identifier="GST_PARSE_ERROR_EMPTY_BIN"
              glib:nick="empty-bin"/>
      <member name="empty"
              value="6"
              c:identifier="GST_PARSE_ERROR_EMPTY"
              glib:nick="empty"/>
    </enumeration>
    <bitfield name="ParseFlags"
              version="0.10.20"
              glib:type-name="GstParseFlags"
              glib:get-type="gst_parse_flags_get_type"
              c:type="GstParseFlags">
      <doc xml:whitespace="preserve">Parsing options.</doc>
      <member name="none"
              value="0"
              c:identifier="GST_PARSE_FLAG_NONE"
              glib:nick="none"/>
      <member name="fatal_errors"
              value="1"
              c:identifier="GST_PARSE_FLAG_FATAL_ERRORS"
              glib:nick="fatal-errors"/>
    </bitfield>
    <class name="Pipeline"
           c:type="GstPipeline"
           parent="Bin"
           glib:type-name="GstPipeline"
           glib:get-type="gst_pipeline_get_type"
           glib:type-struct="PipelineClass">
      <doc xml:whitespace="preserve">The #GstPipeline structure.</doc>
      <implements name="ChildProxy"/>
      <constructor name="new" c:identifier="gst_pipeline_new">
        <return-value transfer-ownership="full">
          <type name="Pipeline" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_bus" c:identifier="gst_pipeline_get_bus">
        <return-value transfer-ownership="full">
          <type name="Bus" c:type="GstBus*"/>
        </return-value>
      </method>
      <method name="set_new_stream_time"
              c:identifier="gst_pipeline_set_new_stream_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="time" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_last_stream_time"
              c:identifier="gst_pipeline_get_last_stream_time">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="use_clock" c:identifier="gst_pipeline_use_clock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clock" c:identifier="gst_pipeline_set_clock">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="clock" transfer-ownership="none">
            <type name="Clock" c:type="GstClock*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_clock" c:identifier="gst_pipeline_get_clock">
        <return-value transfer-ownership="full">
          <type name="Clock" c:type="GstClock*"/>
        </return-value>
      </method>
      <method name="auto_clock" c:identifier="gst_pipeline_auto_clock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_delay" c:identifier="gst_pipeline_set_delay">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="delay" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_delay" c:identifier="gst_pipeline_get_delay">
        <return-value transfer-ownership="full">
          <type name="ClockTime" c:type="GstClockTime"/>
        </return-value>
      </method>
      <method name="set_auto_flush_bus"
              c:identifier="gst_pipeline_set_auto_flush_bus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="auto_flush" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auto_flush_bus"
              c:identifier="gst_pipeline_get_auto_flush_bus">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="auto-flush-bus" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="delay" writable="1" transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </property>
      <field name="bin">
        <type name="Bin" c:type="GstBin"/>
      </field>
      <field name="fixed_clock">
        <type name="Clock" c:type="GstClock*"/>
      </field>
      <field name="stream_time">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="delay">
        <type name="ClockTime" c:type="GstClockTime"/>
      </field>
      <field name="priv">
        <type name="PipelinePrivate" c:type="GstPipelinePrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="PipelineClass"
            c:type="GstPipelineClass"
            glib:is-gtype-struct-for="Pipeline">
      <field name="parent_class">
        <type name="BinClass" c:type="GstBinClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="PipelineFlags"
              glib:type-name="GstPipelineFlags"
              glib:get-type="gst_pipeline_flags_get_type"
              c:type="GstPipelineFlags">
      <doc xml:whitespace="preserve">Pipeline flags</doc>
      <member name="fixed_clock"
              value="33554432"
              c:identifier="GST_PIPELINE_FLAG_FIXED_CLOCK"
              glib:nick="fixed-clock"/>
      <member name="last"
              value="536870912"
              c:identifier="GST_PIPELINE_FLAG_LAST"
              glib:nick="last"/>
    </bitfield>
    <record name="PipelinePrivate" c:type="GstPipelinePrivate">
    </record>
    <class name="Plugin"
           c:type="GstPlugin"
           parent="Object"
           glib:type-name="GstPlugin"
           glib:get-type="gst_plugin_get_type"
           glib:type-struct="PluginClass">
      <doc xml:whitespace="preserve">The plugin object</doc>
      <function name="register_static"
                c:identifier="gst_plugin_register_static">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="major_version" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="minor_version" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="init_func" transfer-ownership="none" scope="call">
            <type name="PluginInitFunc" c:type="GstPluginInitFunc"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="license" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="package" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="origin" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="register_static_full"
                c:identifier="gst_plugin_register_static_full">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="major_version" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="minor_version" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="init_full_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="PluginInitFullFunc" c:type="GstPluginInitFullFunc"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="license" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="package" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="origin" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="load_file"
                c:identifier="gst_plugin_load_file"
                throws="1">
        <return-value transfer-ownership="full">
          <type name="Plugin" c:type="GstPlugin*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="load_by_name" c:identifier="gst_plugin_load_by_name">
        <return-value transfer-ownership="full">
          <type name="Plugin" c:type="GstPlugin*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="list_free"
                c:identifier="gst_plugin_list_free"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <method name="get_name" c:identifier="gst_plugin_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_description" c:identifier="gst_plugin_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_filename" c:identifier="gst_plugin_get_filename">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_version" c:identifier="gst_plugin_get_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_license" c:identifier="gst_plugin_get_license">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_source" c:identifier="gst_plugin_get_source">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_package" c:identifier="gst_plugin_get_package">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_origin" c:identifier="gst_plugin_get_origin">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_cache_data" c:identifier="gst_plugin_get_cache_data">
        <return-value transfer-ownership="none">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
      </method>
      <method name="set_cache_data" c:identifier="gst_plugin_set_cache_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cache_data" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_module" c:identifier="gst_plugin_get_module">
        <return-value transfer-ownership="full">
          <type name="GModule.Module" c:type="GModule*"/>
        </return-value>
      </method>
      <method name="is_loaded" c:identifier="gst_plugin_is_loaded">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="name_filter" c:identifier="gst_plugin_name_filter">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load" c:identifier="gst_plugin_load">
        <return-value transfer-ownership="full">
          <type name="Plugin" c:type="GstPlugin*"/>
        </return-value>
      </method>
      <method name="add_dependency" c:identifier="gst_plugin_add_dependency">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="env_vars" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="paths" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="names" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="PluginDependencyFlags"
                  c:type="GstPluginDependencyFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_dependency_simple"
              c:identifier="gst_plugin_add_dependency_simple">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="env_vars" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="paths" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="names" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="PluginDependencyFlags"
                  c:type="GstPluginDependencyFlags"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="desc">
        <type name="PluginDesc" c:type="GstPluginDesc"/>
      </field>
      <field name="orig_desc">
        <type name="PluginDesc" c:type="GstPluginDesc*"/>
      </field>
      <field name="flags">
        <type name="uint" c:type="unsigned"/>
      </field>
      <field name="filename">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="basename">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="module">
        <type name="GModule.Module" c:type="GModule*"/>
      </field>
      <field name="file_size">
        <type name="gsize" c:type="off_t"/>
      </field>
      <field name="file_mtime">
        <type name="long" c:type="time_t"/>
      </field>
      <field name="registered">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="priv">
        <type name="PluginPrivate" c:type="GstPluginPrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="PluginClass"
            c:type="GstPluginClass"
            glib:is-gtype-struct-for="Plugin">
      <field name="object_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="PluginDependencyFlags"
              version="0.10.22"
              glib:type-name="GstPluginDependencyFlags"
              glib:get-type="gst_plugin_dependency_flags_get_type"
              c:type="GstPluginDependencyFlags">
      <doc xml:whitespace="preserve">Flags used in connection with gst_plugin_add_dependency().</doc>
      <member name="none"
              value="0"
              c:identifier="GST_PLUGIN_DEPENDENCY_FLAG_NONE"
              glib:nick="none"/>
      <member name="recurse"
              value="1"
              c:identifier="GST_PLUGIN_DEPENDENCY_FLAG_RECURSE"
              glib:nick="recurse"/>
      <member name="paths_are_default_only"
              value="2"
              c:identifier="GST_PLUGIN_DEPENDENCY_FLAG_PATHS_ARE_DEFAULT_ONLY"
              glib:nick="paths-are-default-only"/>
      <member name="file_name_is_suffix"
              value="4"
              c:identifier="GST_PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_SUFFIX"
              glib:nick="file-name-is-suffix"/>
    </bitfield>
    <record name="PluginDesc" c:type="GstPluginDesc">
      <doc xml:whitespace="preserve">A plugin should export a variable of this type called plugin_desc. The plugin
loader will use the data provided there to initialize the plugin.
BSD, MIT/X11, Proprietary, unknown.</doc>
      <field name="major_version" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="minor_version" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="plugin_init" writable="1">
        <type name="PluginInitFunc" c:type="GstPluginInitFunc"/>
      </field>
      <field name="version" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="license" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="source" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="package" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="origin" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <enumeration name="PluginError"
                 glib:type-name="GstPluginError"
                 glib:get-type="gst_plugin_error_get_type"
                 c:type="GstPluginError"
                 glib:error-quark="gst_plugin_error_quark">
      <doc xml:whitespace="preserve">The plugin loading errors</doc>
      <member name="module"
              value="0"
              c:identifier="GST_PLUGIN_ERROR_MODULE"
              glib:nick="module"/>
      <member name="dependencies"
              value="1"
              c:identifier="GST_PLUGIN_ERROR_DEPENDENCIES"
              glib:nick="dependencies"/>
      <member name="name_mismatch"
              value="2"
              c:identifier="GST_PLUGIN_ERROR_NAME_MISMATCH"
              glib:nick="name-mismatch"/>
    </enumeration>
    <class name="PluginFeature"
           c:type="GstPluginFeature"
           parent="Object"
           abstract="1"
           glib:type-name="GstPluginFeature"
           glib:get-type="gst_plugin_feature_get_type"
           glib:type-struct="PluginFeatureClass">
      <doc xml:whitespace="preserve">Opaque #GstPluginFeature structure.</doc>
      <function name="list_free"
                c:identifier="gst_plugin_feature_list_free"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="list_copy"
                c:identifier="gst_plugin_feature_list_copy"
                introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <method name="load" c:identifier="gst_plugin_feature_load">
        <return-value transfer-ownership="full">
          <type name="PluginFeature" c:type="GstPluginFeature*"/>
        </return-value>
      </method>
      <method name="type_name_filter"
              c:identifier="gst_plugin_feature_type_name_filter">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="TypeNameData" c:type="GstTypeNameData*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rank" c:identifier="gst_plugin_feature_set_rank">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rank" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="gst_plugin_feature_set_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rank" c:identifier="gst_plugin_feature_get_rank">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="gst_plugin_feature_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="check_version"
              c:identifier="gst_plugin_feature_check_version">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="min_major" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="min_minor" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="min_micro" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="loaded">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="rank">
        <type name="uint" c:type="guint"/>
      </field>
      <field name="plugin_name">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="PluginFeatureClass"
            c:type="GstPluginFeatureClass"
            glib:is-gtype-struct-for="PluginFeature">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="PluginFeatureFilter" c:type="GstPluginFeatureFilter">
      <doc xml:whitespace="preserve">A function that can be used with e.g. gst_registry_feature_filter()
to get a list of pluginfeature that match certain criteria.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE for a positive match, %FALSE otherwise</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="feature" transfer-ownership="none">
          <doc xml:whitespace="preserve">the pluginfeature to check</doc>
          <type name="PluginFeature" c:type="GstPluginFeature*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:whitespace="preserve">the user_data that has been passed on e.g. gst_registry_feature_filter()</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PluginFilter" c:type="GstPluginFilter">
      <doc xml:whitespace="preserve">A function that can be used with e.g. gst_registry_plugin_filter()
to get a list of plugins that match certain criteria.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE for a positive match, FALSE otherwise</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="plugin" transfer-ownership="none">
          <doc xml:whitespace="preserve">the plugin to check</doc>
          <type name="Plugin" c:type="GstPlugin*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:whitespace="preserve">the user_data that has been passed on e.g. gst_registry_plugin_filter()</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="PluginFlags"
              glib:type-name="GstPluginFlags"
              glib:get-type="gst_plugin_flags_get_type"
              c:type="GstPluginFlags">
      <doc xml:whitespace="preserve">The plugin loading state</doc>
      <member name="cached"
              value="1"
              c:identifier="GST_PLUGIN_FLAG_CACHED"
              glib:nick="cached"/>
      <member name="blacklisted"
              value="2"
              c:identifier="GST_PLUGIN_FLAG_BLACKLISTED"
              glib:nick="blacklisted"/>
    </bitfield>
    <callback name="PluginInitFullFunc"
              c:type="GstPluginInitFullFunc"
              version="0.10.24">
      <doc xml:whitespace="preserve">A plugin should provide a pointer to a function of either #GstPluginInitFunc
or this type in the plugin_desc struct.
The function will be called by the loader at startup. One would then
register each #GstPluginFeature. This version allows
user data to be passed to init function (useful for bindings).</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if plugin initialised successfully</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="plugin" transfer-ownership="none">
          <doc xml:whitespace="preserve">The plugin object</doc>
          <type name="Plugin" c:type="GstPlugin*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="1">
          <doc xml:whitespace="preserve">extra data</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="PluginInitFunc" c:type="GstPluginInitFunc">
      <doc xml:whitespace="preserve">A plugin should provide a pointer to a function of this type in the
plugin_desc struct.
This function will be called by the loader at startup. One would then
register each #GstPluginFeature.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if plugin initialised successfully</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="plugin" transfer-ownership="none">
          <doc xml:whitespace="preserve">The plugin object</doc>
          <type name="Plugin" c:type="GstPlugin*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="PluginPrivate" c:type="GstPluginPrivate">
    </record>
    <record name="Poll" c:type="GstPoll">
      <doc xml:whitespace="preserve">A set of file/network descriptors.</doc>
      <constructor name="new" c:identifier="gst_poll_new">
        <return-value transfer-ownership="full">
          <type name="Poll" c:type="GstPoll*"/>
        </return-value>
        <parameters>
          <parameter name="controllable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_timer" c:identifier="gst_poll_new_timer">
        <return-value transfer-ownership="full">
          <type name="Poll" c:type="GstPoll*"/>
        </return-value>
      </constructor>
      <method name="free" c:identifier="gst_poll_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="add_fd" c:identifier="gst_poll_add_fd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_fd" c:identifier="gst_poll_remove_fd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fd_ctl_write" c:identifier="gst_poll_fd_ctl_write">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
          <parameter name="active" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="fd_ctl_read" c:identifier="gst_poll_fd_ctl_read">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
          <parameter name="active" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="fd_ignored" c:identifier="gst_poll_fd_ignored">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fd_has_closed" c:identifier="gst_poll_fd_has_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fd_has_error" c:identifier="gst_poll_fd_has_error">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fd_can_read" c:identifier="gst_poll_fd_can_read">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fd_can_write" c:identifier="gst_poll_fd_can_write">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="PollFD" c:type="GstPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait" c:identifier="gst_poll_wait">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_controllable" c:identifier="gst_poll_set_controllable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="controllable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="restart" c:identifier="gst_poll_restart">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_flushing" c:identifier="gst_poll_set_flushing">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flushing" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_control" c:identifier="gst_poll_write_control">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="read_control" c:identifier="gst_poll_read_control">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </record>
    <record name="PollFD" c:type="GstPollFD">
      <doc xml:whitespace="preserve">A file descriptor object.</doc>
      <field name="fd" writable="1">
        <type name="int" c:type="int"/>
      </field>
      <field name="idx" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <method name="init" c:identifier="gst_poll_fd_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <class name="ProxyPad"
           c:type="GstProxyPad"
           parent="Pad"
           glib:type-name="GstProxyPad"
           glib:get-type="gst_proxy_pad_get_type"
           glib:type-struct="ProxyPadClass">
      <field name="pad">
        <type name="Pad" c:type="GstPad"/>
      </field>
      <field name="priv">
        <type name="ProxyPadPrivate" c:type="GstProxyPadPrivate*"/>
      </field>
    </class>
    <record name="ProxyPadClass"
            c:type="GstProxyPadClass"
            glib:is-gtype-struct-for="ProxyPad">
      <field name="parent_class">
        <type name="PadClass" c:type="GstPadClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="1">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="ProxyPadPrivate" c:type="GstProxyPadPrivate">
    </record>
    <class name="PushSrc"
           c:type="GstPushSrc"
           parent="BaseSrc"
           glib:type-name="GstPushSrc"
           glib:get-type="gst_push_src_get_type"
           glib:type-struct="PushSrcClass">
      <doc xml:whitespace="preserve">The opaque #GstPushSrc data structure.</doc>
      <virtual-method name="create">
        <return-value transfer-ownership="full">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <parameter name="buf" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent">
        <type name="BaseSrc" c:type="GstBaseSrc"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="PushSrcClass"
            c:type="GstPushSrcClass"
            glib:is-gtype-struct-for="PushSrc">
      <field name="parent_class">
        <type name="BaseSrcClass" c:type="GstBaseSrcClass"/>
      </field>
      <field name="create">
        <callback name="create" c:type="create">
          <return-value transfer-ownership="full">
            <type name="FlowReturn" c:type="GstFlowReturn"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="PushSrc" c:type="GstPushSrc*"/>
            </parameter>
            <parameter name="buf" transfer-ownership="none">
              <type name="Buffer" c:type="GstBuffer**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <class name="Query"
           c:type="GstQuery"
           parent="MiniObject"
           glib:type-name="GstQuery"
           glib:get-type="gst_query_get_type"
           glib:type-struct="QueryClass"
           glib:fundamental="1">
      <doc xml:whitespace="preserve">The #GstQuery structure.</doc>
      <constructor name="new_position" c:identifier="gst_query_new_position">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_duration" c:identifier="gst_query_new_duration">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_latency" c:identifier="gst_query_new_latency">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
      </constructor>
      <constructor name="new_convert" c:identifier="gst_query_new_convert">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
        <parameters>
          <parameter name="src_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="dest_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_segment" c:identifier="gst_query_new_segment">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_application"
                   c:identifier="gst_query_new_application">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="QueryType" c:type="GstQueryType"/>
          </parameter>
          <parameter name="structure" transfer-ownership="none">
            <type name="Structure" c:type="GstStructure*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_seeking" c:identifier="gst_query_new_seeking">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_formats" c:identifier="gst_query_new_formats">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
      </constructor>
      <constructor name="new_buffering" c:identifier="gst_query_new_buffering">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_uri" c:identifier="gst_query_new_uri">
        <return-value transfer-ownership="full">
          <type name="Query" c:type="GstQuery*"/>
        </return-value>
      </constructor>
      <function name="type_get_name" c:identifier="gst_query_type_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="QueryType" c:type="GstQueryType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_to_quark" c:identifier="gst_query_type_to_quark">
        <return-value transfer-ownership="full">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
        <parameters>
          <parameter name="query" transfer-ownership="none">
            <type name="QueryType" c:type="GstQueryType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_register" c:identifier="gst_query_type_register">
        <return-value transfer-ownership="full">
          <type name="QueryType" c:type="GstQueryType"/>
        </return-value>
        <parameters>
          <parameter name="nick" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_get_by_nick"
                c:identifier="gst_query_type_get_by_nick">
        <return-value transfer-ownership="full">
          <type name="QueryType" c:type="GstQueryType"/>
        </return-value>
        <parameters>
          <parameter name="nick" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="types_contains" c:identifier="gst_query_types_contains">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="types" transfer-ownership="none">
            <type name="QueryType" c:type="GstQueryType*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="QueryType" c:type="GstQueryType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_get_details"
                c:identifier="gst_query_type_get_details">
        <return-value transfer-ownership="none">
          <type name="QueryTypeDefinition" c:type="GstQueryTypeDefinition*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="QueryType" c:type="GstQueryType"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_iterate_definitions"
                c:identifier="gst_query_type_iterate_definitions">
        <return-value transfer-ownership="full">
          <type name="Iterator" c:type="GstIterator*"/>
        </return-value>
      </function>
      <method name="set_position" c:identifier="gst_query_set_position">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="cur" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_position" c:identifier="gst_query_parse_position">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="cur"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_duration" c:identifier="gst_query_set_duration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_duration" c:identifier="gst_query_parse_duration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_latency" c:identifier="gst_query_set_latency">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="live" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="min_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
          <parameter name="max_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_latency" c:identifier="gst_query_parse_latency">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="live"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="min_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
          <parameter name="max_latency" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_convert" c:identifier="gst_query_set_convert">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="src_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="src_value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="dest_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="dest_value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_convert" c:identifier="gst_query_parse_convert">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="src_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="src_value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="dest_format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="dest_value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_segment" c:identifier="gst_query_set_segment">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="start_value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop_value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_segment" c:identifier="gst_query_parse_segment">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="start_value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="stop_value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_structure" c:identifier="gst_query_get_structure">
        <return-value transfer-ownership="full">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
      </method>
      <method name="set_seeking" c:identifier="gst_query_set_seeking">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="seekable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="segment_start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="segment_end" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_seeking" c:identifier="gst_query_parse_seeking">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="seekable"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="segment_start"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="segment_end"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_formats"
              c:identifier="gst_query_set_formats"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="n_formats" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="set_formatsv" c:identifier="gst_query_set_formatsv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="n_formats" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="formats" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_formats_length"
              c:identifier="gst_query_parse_formats_length">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="n_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_formats_nth"
              c:identifier="gst_query_parse_formats_nth">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="nth" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffering_percent"
              c:identifier="gst_query_set_buffering_percent">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="busy" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="percent" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_buffering_percent"
              c:identifier="gst_query_parse_buffering_percent">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="busy"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="percent"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffering_stats"
              c:identifier="gst_query_set_buffering_stats">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="BufferingMode" c:type="GstBufferingMode"/>
          </parameter>
          <parameter name="avg_in" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="avg_out" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="buffering_left" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_buffering_stats"
              c:identifier="gst_query_parse_buffering_stats">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="BufferingMode" c:type="GstBufferingMode*"/>
          </parameter>
          <parameter name="avg_in"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="avg_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="buffering_left"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffering_range"
              c:identifier="gst_query_set_buffering_range">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="estimated_total" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_buffering_range"
              c:identifier="gst_query_parse_buffering_range">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat*"/>
          </parameter>
          <parameter name="start"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="stop"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="estimated_total"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_uri" c:identifier="gst_query_parse_uri">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uri" c:identifier="gst_query_set_uri">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="mini_object">
        <type name="MiniObject" c:type="GstMiniObject"/>
      </field>
      <field name="type">
        <type name="QueryType" c:type="GstQueryType"/>
      </field>
      <field name="structure">
        <type name="Structure" c:type="GstStructure*"/>
      </field>
      <field name="_gst_reserved">
        <type name="any" c:type="gpointer"/>
      </field>
    </class>
    <record name="QueryClass"
            c:type="GstQueryClass"
            glib:is-gtype-struct-for="Query">
      <field name="mini_object_class">
        <type name="MiniObjectClass" c:type="GstMiniObjectClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <enumeration name="QueryType"
                 glib:type-name="GstQueryType"
                 glib:get-type="gst_query_type_get_type"
                 c:type="GstQueryType">
      <doc xml:whitespace="preserve">Standard predefined Query types</doc>
      <member name="none"
              value="0"
              c:identifier="GST_QUERY_NONE"
              glib:nick="none"/>
      <member name="position"
              value="1"
              c:identifier="GST_QUERY_POSITION"
              glib:nick="position"/>
      <member name="duration"
              value="2"
              c:identifier="GST_QUERY_DURATION"
              glib:nick="duration"/>
      <member name="latency"
              value="3"
              c:identifier="GST_QUERY_LATENCY"
              glib:nick="latency"/>
      <member name="jitter"
              value="4"
              c:identifier="GST_QUERY_JITTER"
              glib:nick="jitter"/>
      <member name="rate"
              value="5"
              c:identifier="GST_QUERY_RATE"
              glib:nick="rate"/>
      <member name="seeking"
              value="6"
              c:identifier="GST_QUERY_SEEKING"
              glib:nick="seeking"/>
      <member name="segment"
              value="7"
              c:identifier="GST_QUERY_SEGMENT"
              glib:nick="segment"/>
      <member name="convert"
              value="8"
              c:identifier="GST_QUERY_CONVERT"
              glib:nick="convert"/>
      <member name="formats"
              value="9"
              c:identifier="GST_QUERY_FORMATS"
              glib:nick="formats"/>
      <member name="buffering"
              value="10"
              c:identifier="GST_QUERY_BUFFERING"
              glib:nick="buffering"/>
      <member name="custom"
              value="11"
              c:identifier="GST_QUERY_CUSTOM"
              glib:nick="custom"/>
      <member name="uri"
              value="12"
              c:identifier="GST_QUERY_URI"
              glib:nick="uri"/>
    </enumeration>
    <record name="QueryTypeDefinition" c:type="GstQueryTypeDefinition">
      <doc xml:whitespace="preserve">A Query Type definition</doc>
      <field name="value" writable="1">
        <type name="QueryType" c:type="GstQueryType"/>
      </field>
      <field name="nick" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="quark" writable="1">
        <type name="GLib.Quark" c:type="GQuark"/>
      </field>
    </record>
    <enumeration name="Rank"
                 glib:type-name="GstRank"
                 glib:get-type="gst_rank_get_type"
                 c:type="GstRank">
      <doc xml:whitespace="preserve">Element priority ranks. Defines the order in which the autoplugger (or
similar rank-picking mechanisms, such as e.g. gst_element_make_from_uri())
will choose this element over an alternative one with the same function.
These constants serve as a rough guidance for defining the rank of a
#GstPluginFeature. Any value is valid, including values bigger than</doc>
      <member name="none"
              value="0"
              c:identifier="GST_RANK_NONE"
              glib:nick="none"/>
      <member name="marginal"
              value="64"
              c:identifier="GST_RANK_MARGINAL"
              glib:nick="marginal"/>
      <member name="secondary"
              value="128"
              c:identifier="GST_RANK_SECONDARY"
              glib:nick="secondary"/>
      <member name="primary"
              value="256"
              c:identifier="GST_RANK_PRIMARY"
              glib:nick="primary"/>
    </enumeration>
    <class name="Registry"
           c:type="GstRegistry"
           parent="Object"
           glib:type-name="GstRegistry"
           glib:get-type="gst_registry_get_type"
           glib:type-struct="RegistryClass">
      <doc xml:whitespace="preserve">Opaque #GstRegistry structure.</doc>
      <function name="get_default" c:identifier="gst_registry_get_default">
        <return-value transfer-ownership="full">
          <type name="Registry" c:type="GstRegistry*"/>
        </return-value>
      </function>
      <function name="fork_is_enabled"
                c:identifier="gst_registry_fork_is_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </function>
      <function name="fork_set_enabled"
                c:identifier="gst_registry_fork_set_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </function>
      <method name="scan_path" c:identifier="gst_registry_scan_path">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_path" c:identifier="gst_registry_add_path">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_path_list"
              c:identifier="gst_registry_get_path_list"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="add_plugin" c:identifier="gst_registry_add_plugin">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="GstPlugin*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_plugin" c:identifier="gst_registry_remove_plugin">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="plugin" transfer-ownership="none">
            <type name="Plugin" c:type="GstPlugin*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_feature" c:identifier="gst_registry_add_feature">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="PluginFeature" c:type="GstPluginFeature*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_feature" c:identifier="gst_registry_remove_feature">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="PluginFeature" c:type="GstPluginFeature*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_plugin_list"
              c:identifier="gst_registry_get_plugin_list"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="plugin_filter"
              c:identifier="gst_registry_plugin_filter"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="filter" transfer-ownership="none" scope="call">
            <type name="PluginFilter" c:type="GstPluginFilter"/>
          </parameter>
          <parameter name="first" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="feature_filter"
              c:identifier="gst_registry_feature_filter"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="filter" transfer-ownership="none" scope="call">
            <type name="PluginFeatureFilter" c:type="GstPluginFeatureFilter"/>
          </parameter>
          <parameter name="first" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_feature_list"
              c:identifier="gst_registry_get_feature_list"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_feature_list_by_plugin"
              c:identifier="gst_registry_get_feature_list_by_plugin"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_feature_list_cookie"
              c:identifier="gst_registry_get_feature_list_cookie">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="find_plugin" c:identifier="gst_registry_find_plugin">
        <return-value transfer-ownership="full">
          <type name="Plugin" c:type="GstPlugin*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_feature" c:identifier="gst_registry_find_feature">
        <return-value transfer-ownership="full">
          <type name="PluginFeature" c:type="GstPluginFeature*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup" c:identifier="gst_registry_lookup">
        <return-value transfer-ownership="full">
          <type name="Plugin" c:type="GstPlugin*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_feature" c:identifier="gst_registry_lookup_feature">
        <return-value transfer-ownership="full">
          <type name="PluginFeature" c:type="GstPluginFeature*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="xml_read_cache" c:identifier="gst_registry_xml_read_cache">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="xml_write_cache"
              c:identifier="gst_registry_xml_write_cache">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="plugins">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="features">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="paths">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="cache_file">
        <type name="int" c:type="int"/>
      </field>
      <field name="feature_hash">
        <type name="GLib.HashTable" c:type="GHashTable*"/>
      </field>
      <field name="basename_hash">
        <type name="GLib.HashTable" c:type="GHashTable*"/>
      </field>
      <field name="priv">
        <type name="RegistryPrivate" c:type="GstRegistryPrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="1">
          <type name="any"/>
        </array>
      </field>
      <glib:signal name="feature-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="plugin-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="RegistryClass"
            c:type="GstRegistryClass"
            glib:is-gtype-struct-for="Registry">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="plugin_added">
        <callback name="plugin_added" c:type="plugin_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="registry" transfer-ownership="none">
              <type name="Registry" c:type="GstRegistry*"/>
            </parameter>
            <parameter name="plugin" transfer-ownership="none">
              <type name="Plugin" c:type="GstPlugin*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="feature_added">
        <callback name="feature_added" c:type="feature_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="registry" transfer-ownership="none">
              <type name="Registry" c:type="GstRegistry*"/>
            </parameter>
            <parameter name="feature" transfer-ownership="none">
              <type name="PluginFeature" c:type="GstPluginFeature*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="RegistryPrivate" c:type="GstRegistryPrivate">
    </record>
    <enumeration name="ResourceError"
                 glib:type-name="GstResourceError"
                 glib:get-type="gst_resource_error_get_type"
                 c:type="GstResourceError"
                 glib:error-quark="gst_resource_error_quark">
      <doc xml:whitespace="preserve">Resource errors are for any resource used by an element:
memory, files, network connections, process space, ...
They're typically used by source and sink elements.</doc>
      <member name="failed"
              value="1"
              c:identifier="GST_RESOURCE_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="too_lazy"
              value="2"
              c:identifier="GST_RESOURCE_ERROR_TOO_LAZY"
              glib:nick="too-lazy"/>
      <member name="not_found"
              value="3"
              c:identifier="GST_RESOURCE_ERROR_NOT_FOUND"
              glib:nick="not-found"/>
      <member name="busy"
              value="4"
              c:identifier="GST_RESOURCE_ERROR_BUSY"
              glib:nick="busy"/>
      <member name="open_read"
              value="5"
              c:identifier="GST_RESOURCE_ERROR_OPEN_READ"
              glib:nick="open-read"/>
      <member name="open_write"
              value="6"
              c:identifier="GST_RESOURCE_ERROR_OPEN_WRITE"
              glib:nick="open-write"/>
      <member name="open_read_write"
              value="7"
              c:identifier="GST_RESOURCE_ERROR_OPEN_READ_WRITE"
              glib:nick="open-read-write"/>
      <member name="close"
              value="8"
              c:identifier="GST_RESOURCE_ERROR_CLOSE"
              glib:nick="close"/>
      <member name="read"
              value="9"
              c:identifier="GST_RESOURCE_ERROR_READ"
              glib:nick="read"/>
      <member name="write"
              value="10"
              c:identifier="GST_RESOURCE_ERROR_WRITE"
              glib:nick="write"/>
      <member name="seek"
              value="11"
              c:identifier="GST_RESOURCE_ERROR_SEEK"
              glib:nick="seek"/>
      <member name="sync"
              value="12"
              c:identifier="GST_RESOURCE_ERROR_SYNC"
              glib:nick="sync"/>
      <member name="settings"
              value="13"
              c:identifier="GST_RESOURCE_ERROR_SETTINGS"
              glib:nick="settings"/>
      <member name="no_space_left"
              value="14"
              c:identifier="GST_RESOURCE_ERROR_NO_SPACE_LEFT"
              glib:nick="no-space-left"/>
      <member name="num_errors"
              value="15"
              c:identifier="GST_RESOURCE_ERROR_NUM_ERRORS"
              glib:nick="num-errors"/>
    </enumeration>
    <constant name="SECOND" value="0">
      <type name="int"/>
    </constant>
    <constant name="SEGMENT_FORMAT" value="Q">
      <type name="utf8"/>
    </constant>
    <enumeration name="SearchMode"
                 version="0.10.23"
                 glib:type-name="GstSearchMode"
                 glib:get-type="gst_search_mode_get_type"
                 c:type="GstSearchMode">
      <doc xml:whitespace="preserve">The different search modes.</doc>
      <member name="exact"
              value="0"
              c:identifier="GST_SEARCH_MODE_EXACT"
              glib:nick="exact"/>
      <member name="before"
              value="1"
              c:identifier="GST_SEARCH_MODE_BEFORE"
              glib:nick="before"/>
      <member name="after"
              value="2"
              c:identifier="GST_SEARCH_MODE_AFTER"
              glib:nick="after"/>
    </enumeration>
    <bitfield name="SeekFlags"
              glib:type-name="GstSeekFlags"
              glib:get-type="gst_seek_flags_get_type"
              c:type="GstSeekFlags">
      <doc xml:whitespace="preserve">Flags to be used with gst_element_seek() or gst_event_new_seek(). All flags
can be used together.
A non flushing seek might take some time to perform as the currently
playing data in the pipeline will not be cleared.
An accurate seek might be slower for formats that don't have any indexes
or timestamp markers in the stream. Specifying this flag might require a
complete scan of the file in those cases.
no EOS will be emmited by the element that performed the seek, but a
#GST_MESSAGE_SEGMENT_DONE message will be posted on the bus by the element.
When this message is posted, it is possible to send a new seek event to
continue playback. With this seek method it is possible to perform seemless
looping or simple linear editing.
When doing fast forward (rate &gt; 1.0) or fast reverse (rate &lt; -1.0) trickmode
playback, the @GST_SEEK_FLAG_SKIP flag can be used to instruct decoders
and demuxers to adjust the playback rate by skipping frames. This can improve
performance and decrease CPU usage because not all frames need to be decoded.</doc>
      <member name="none"
              value="0"
              c:identifier="GST_SEEK_FLAG_NONE"
              glib:nick="none"/>
      <member name="flush"
              value="1"
              c:identifier="GST_SEEK_FLAG_FLUSH"
              glib:nick="flush"/>
      <member name="accurate"
              value="2"
              c:identifier="GST_SEEK_FLAG_ACCURATE"
              glib:nick="accurate"/>
      <member name="key_unit"
              value="4"
              c:identifier="GST_SEEK_FLAG_KEY_UNIT"
              glib:nick="key-unit"/>
      <member name="segment"
              value="8"
              c:identifier="GST_SEEK_FLAG_SEGMENT"
              glib:nick="segment"/>
      <member name="skip"
              value="16"
              c:identifier="GST_SEEK_FLAG_SKIP"
              glib:nick="skip"/>
    </bitfield>
    <enumeration name="SeekType"
                 glib:type-name="GstSeekType"
                 glib:get-type="gst_seek_type_get_type"
                 c:type="GstSeekType">
      <doc xml:whitespace="preserve">The different types of seek events. When constructing a seek event with
gst_event_new_seek(), a format, a seek method and optional flags are to
be provided. The seek event is then inserted into the graph with
gst_pad_send_event() or gst_element_send_event().</doc>
      <member name="none"
              value="0"
              c:identifier="GST_SEEK_TYPE_NONE"
              glib:nick="none"/>
      <member name="cur"
              value="1"
              c:identifier="GST_SEEK_TYPE_CUR"
              glib:nick="cur"/>
      <member name="set"
              value="2"
              c:identifier="GST_SEEK_TYPE_SET"
              glib:nick="set"/>
      <member name="end"
              value="3"
              c:identifier="GST_SEEK_TYPE_END"
              glib:nick="end"/>
    </enumeration>
    <record name="Segment"
            c:type="GstSegment"
            glib:type-name="GstSegment"
            glib:get-type="gst_segment_get_type">
      <doc xml:whitespace="preserve">A helper structure that holds the configured region of
interest in a media file.</doc>
      <field name="rate" writable="1">
        <type name="double" c:type="gdouble"/>
      </field>
      <field name="abs_rate" writable="1">
        <type name="double" c:type="gdouble"/>
      </field>
      <field name="format" writable="1">
        <type name="Format" c:type="GstFormat"/>
      </field>
      <field name="flags" writable="1">
        <type name="SeekFlags" c:type="GstSeekFlags"/>
      </field>
      <field name="start" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="stop" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="time" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="accum" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="last_stop" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="duration" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="applied_rate" writable="1">
        <type name="double" c:type="gdouble"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="guint8" fixed-size="0">
          <type name="uint8"/>
        </array>
      </field>
      <constructor name="new" c:identifier="gst_segment_new">
        <return-value transfer-ownership="full">
          <type name="Segment" c:type="GstSegment*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="gst_segment_copy">
        <return-value transfer-ownership="full">
          <type name="Segment" c:type="GstSegment*"/>
        </return-value>
      </method>
      <method name="free" c:identifier="gst_segment_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="init" c:identifier="gst_segment_init">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_duration" c:identifier="gst_segment_set_duration">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_last_stop" c:identifier="gst_segment_set_last_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_seek" c:identifier="gst_segment_set_seek">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="SeekFlags" c:type="GstSeekFlags"/>
          </parameter>
          <parameter name="start_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop_type" transfer-ownership="none">
            <type name="SeekType" c:type="GstSeekType"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="update"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_newsegment" c:identifier="gst_segment_set_newsegment">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="update" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="time" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_newsegment_full"
              c:identifier="gst_segment_set_newsegment_full">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="update" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="applied_rate" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="time" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_stream_time" c:identifier="gst_segment_to_stream_time">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_running_time"
              c:identifier="gst_segment_to_running_time">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_position" c:identifier="gst_segment_to_position">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="running_time" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="clip" c:identifier="gst_segment_clip">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="start" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="stop" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="clip_start"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
          <parameter name="clip_stop"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_running_time"
              c:identifier="gst_segment_set_running_time">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="Format" c:type="GstFormat"/>
          </parameter>
          <parameter name="running_time" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="State"
                 glib:type-name="GstState"
                 glib:get-type="gst_state_get_type"
                 c:type="GstState">
      <doc xml:whitespace="preserve">The possible states an element can be in. States can be changed using
gst_element_set_state() and checked using gst_element_get_state().</doc>
      <member name="void_pending"
              value="0"
              c:identifier="GST_STATE_VOID_PENDING"
              glib:nick="void-pending"/>
      <member name="null"
              value="1"
              c:identifier="GST_STATE_NULL"
              glib:nick="null"/>
      <member name="ready"
              value="2"
              c:identifier="GST_STATE_READY"
              glib:nick="ready"/>
      <member name="paused"
              value="3"
              c:identifier="GST_STATE_PAUSED"
              glib:nick="paused"/>
      <member name="playing"
              value="4"
              c:identifier="GST_STATE_PLAYING"
              glib:nick="playing"/>
    </enumeration>
    <enumeration name="StateChange"
                 glib:type-name="GstStateChange"
                 glib:get-type="gst_state_change_get_type"
                 c:type="GstStateChange">
      <doc xml:whitespace="preserve">These are the different state changes an element goes through.
%GST_STATE_NULL &amp;rArr; %GST_STATE_PLAYING is called an upwards state change
and %GST_STATE_PLAYING &amp;rArr; %GST_STATE_NULL a downwards state change.</doc>
      <member name="null_to_ready"
              value="10"
              c:identifier="GST_STATE_CHANGE_NULL_TO_READY"
              glib:nick="null-to-ready"/>
      <member name="ready_to_paused"
              value="19"
              c:identifier="GST_STATE_CHANGE_READY_TO_PAUSED"
              glib:nick="ready-to-paused"/>
      <member name="paused_to_playing"
              value="28"
              c:identifier="GST_STATE_CHANGE_PAUSED_TO_PLAYING"
              glib:nick="paused-to-playing"/>
      <member name="playing_to_paused"
              value="35"
              c:identifier="GST_STATE_CHANGE_PLAYING_TO_PAUSED"
              glib:nick="playing-to-paused"/>
      <member name="paused_to_ready"
              value="26"
              c:identifier="GST_STATE_CHANGE_PAUSED_TO_READY"
              glib:nick="paused-to-ready"/>
      <member name="ready_to_null"
              value="17"
              c:identifier="GST_STATE_CHANGE_READY_TO_NULL"
              glib:nick="ready-to-null"/>
    </enumeration>
    <enumeration name="StateChangeReturn"
                 glib:type-name="GstStateChangeReturn"
                 glib:get-type="gst_state_change_return_get_type"
                 c:type="GstStateChangeReturn">
      <doc xml:whitespace="preserve">The possible return values from a state change function. Only</doc>
      <member name="failure"
              value="0"
              c:identifier="GST_STATE_CHANGE_FAILURE"
              glib:nick="failure"/>
      <member name="success"
              value="1"
              c:identifier="GST_STATE_CHANGE_SUCCESS"
              glib:nick="success"/>
      <member name="async"
              value="2"
              c:identifier="GST_STATE_CHANGE_ASYNC"
              glib:nick="async"/>
      <member name="no_preroll"
              value="3"
              c:identifier="GST_STATE_CHANGE_NO_PREROLL"
              glib:nick="no-preroll"/>
    </enumeration>
    <record name="StaticCaps" c:type="GstStaticCaps">
      <doc xml:whitespace="preserve">Datastructure to initialize #GstCaps from a string description usually
used in conjunction with GST_STATIC_CAPS() and gst_static_caps_get() to
instantiate a #GstCaps.</doc>
      <field name="caps" writable="1">
        <type name="Caps" c:type="GstCaps"/>
      </field>
      <field name="string" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
      <method name="get" c:identifier="gst_static_caps_get">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
    </record>
    <record name="StaticPadTemplate" c:type="GstStaticPadTemplate">
      <field name="name_template" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="direction" writable="1">
        <type name="PadDirection" c:type="GstPadDirection"/>
      </field>
      <field name="presence" writable="1">
        <type name="PadPresence" c:type="GstPadPresence"/>
      </field>
      <field name="static_caps" writable="1">
        <type name="StaticCaps" c:type="GstStaticCaps"/>
      </field>
      <method name="get" c:identifier="gst_static_pad_template_get">
        <return-value transfer-ownership="full">
          <type name="PadTemplate" c:type="GstPadTemplate*"/>
        </return-value>
      </method>
      <method name="get_caps" c:identifier="gst_static_pad_template_get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="StreamError"
                 glib:type-name="GstStreamError"
                 glib:get-type="gst_stream_error_get_type"
                 c:type="GstStreamError"
                 glib:error-quark="gst_stream_error_quark">
      <doc xml:whitespace="preserve">Stream errors are for anything related to the stream being processed:
format errors, media type errors, ...
They're typically used by decoders, demuxers, converters, ...</doc>
      <member name="failed"
              value="1"
              c:identifier="GST_STREAM_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="too_lazy"
              value="2"
              c:identifier="GST_STREAM_ERROR_TOO_LAZY"
              glib:nick="too-lazy"/>
      <member name="not_implemented"
              value="3"
              c:identifier="GST_STREAM_ERROR_NOT_IMPLEMENTED"
              glib:nick="not-implemented"/>
      <member name="type_not_found"
              value="4"
              c:identifier="GST_STREAM_ERROR_TYPE_NOT_FOUND"
              glib:nick="type-not-found"/>
      <member name="wrong_type"
              value="5"
              c:identifier="GST_STREAM_ERROR_WRONG_TYPE"
              glib:nick="wrong-type"/>
      <member name="codec_not_found"
              value="6"
              c:identifier="GST_STREAM_ERROR_CODEC_NOT_FOUND"
              glib:nick="codec-not-found"/>
      <member name="decode"
              value="7"
              c:identifier="GST_STREAM_ERROR_DECODE"
              glib:nick="decode"/>
      <member name="encode"
              value="8"
              c:identifier="GST_STREAM_ERROR_ENCODE"
              glib:nick="encode"/>
      <member name="demux"
              value="9"
              c:identifier="GST_STREAM_ERROR_DEMUX"
              glib:nick="demux"/>
      <member name="mux"
              value="10"
              c:identifier="GST_STREAM_ERROR_MUX"
              glib:nick="mux"/>
      <member name="format"
              value="11"
              c:identifier="GST_STREAM_ERROR_FORMAT"
              glib:nick="format"/>
      <member name="decrypt"
              value="12"
              c:identifier="GST_STREAM_ERROR_DECRYPT"
              glib:nick="decrypt"/>
      <member name="decrypt_nokey"
              value="13"
              c:identifier="GST_STREAM_ERROR_DECRYPT_NOKEY"
              glib:nick="decrypt-nokey"/>
      <member name="num_errors"
              value="14"
              c:identifier="GST_STREAM_ERROR_NUM_ERRORS"
              glib:nick="num-errors"/>
    </enumeration>
    <enumeration name="StreamStatusType"
                 version="0.10.24"
                 glib:type-name="GstStreamStatusType"
                 glib:get-type="gst_stream_status_type_get_type"
                 c:type="GstStreamStatusType">
      <doc xml:whitespace="preserve">The type of a %GST_MESSAGE_STREAM_STATUS. The stream status messages inform the
application of new streaming threads and their status.</doc>
      <member name="create"
              value="0"
              c:identifier="GST_STREAM_STATUS_TYPE_CREATE"
              glib:nick="create"/>
      <member name="enter"
              value="1"
              c:identifier="GST_STREAM_STATUS_TYPE_ENTER"
              glib:nick="enter"/>
      <member name="leave"
              value="2"
              c:identifier="GST_STREAM_STATUS_TYPE_LEAVE"
              glib:nick="leave"/>
      <member name="destroy"
              value="3"
              c:identifier="GST_STREAM_STATUS_TYPE_DESTROY"
              glib:nick="destroy"/>
      <member name="start"
              value="8"
              c:identifier="GST_STREAM_STATUS_TYPE_START"
              glib:nick="start"/>
      <member name="pause"
              value="9"
              c:identifier="GST_STREAM_STATUS_TYPE_PAUSE"
              glib:nick="pause"/>
      <member name="stop"
              value="10"
              c:identifier="GST_STREAM_STATUS_TYPE_STOP"
              glib:nick="stop"/>
    </enumeration>
    <record name="Structure"
            c:type="GstStructure"
            glib:type-name="GstStructure"
            glib:get-type="gst_structure_get_type">
      <doc xml:whitespace="preserve">The GstStructure object. Most fields are private.</doc>
      <field name="type" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="name" writable="1">
        <type name="GLib.Quark" c:type="GQuark"/>
      </field>
      <field name="parent_refcount" writable="1">
        <type name="any" c:type="gint*"/>
      </field>
      <field name="fields" writable="1">
        <type name="GLib.Array" c:type="GArray*"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <constructor name="new"
                   c:identifier="gst_structure_new"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="firstfield" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gst_structure_copy">
        <return-value transfer-ownership="full">
          <type name="Structure" c:type="GstStructure*"/>
        </return-value>
      </method>
      <method name="set_parent_refcount"
              c:identifier="gst_structure_set_parent_refcount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="refcount"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gst_structure_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="gst_structure_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_name_id" c:identifier="gst_structure_get_name_id">
        <return-value transfer-ownership="full">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </method>
      <method name="has_name" c:identifier="gst_structure_has_name">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="gst_structure_set_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="id_set_value" c:identifier="gst_structure_id_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="gst_structure_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="gst_structure_set" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="id_set"
              c:identifier="gst_structure_id_set"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="gst_structure_get" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="first_fieldname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="id_get"
              c:identifier="gst_structure_id_get"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="first_field_id" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="id_get_value" c:identifier="gst_structure_id_get_value">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="gst_structure_get_value">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_field" c:identifier="gst_structure_remove_field">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_fields"
              c:identifier="gst_structure_remove_fields"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="remove_all_fields"
              c:identifier="gst_structure_remove_all_fields">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_field_type"
              c:identifier="gst_structure_get_field_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="foreach" c:identifier="gst_structure_foreach">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="StructureForeachFunc"
                  c:type="GstStructureForeachFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="map_in_place" c:identifier="gst_structure_map_in_place">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="StructureMapFunc" c:type="GstStructureMapFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="n_fields" c:identifier="gst_structure_n_fields">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="nth_field_name"
              c:identifier="gst_structure_nth_field_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="id_has_field" c:identifier="gst_structure_id_has_field">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
        </parameters>
      </method>
      <method name="id_has_field_typed"
              c:identifier="gst_structure_id_has_field_typed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_field" c:identifier="gst_structure_has_field">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_field_typed"
              c:identifier="gst_structure_has_field_typed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean" c:identifier="gst_structure_get_boolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int" c:identifier="gst_structure_get_int">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint" c:identifier="gst_structure_get_uint">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fourcc" c:identifier="gst_structure_get_fourcc">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_double" c:identifier="gst_structure_get_double">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_date" c:identifier="gst_structure_get_date">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Date" c:type="GDate**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_clock_time"
              c:identifier="gst_structure_get_clock_time">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="ClockTime" c:type="GstClockTime*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string" c:identifier="gst_structure_get_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enum" c:identifier="gst_structure_get_enum">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="enumtype" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fraction" c:identifier="gst_structure_get_fraction">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value_numerator"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="value_denominator"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="gst_structure_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="fixate_field_nearest_int"
              c:identifier="gst_structure_fixate_field_nearest_int">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="fixate_field_nearest_double"
              c:identifier="gst_structure_fixate_field_nearest_double">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="double" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="fixate_field_boolean"
              c:identifier="gst_structure_fixate_field_boolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="fixate_field_string"
              c:identifier="gst_structure_fixate_field_string">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fixate_field_nearest_fraction"
              c:identifier="gst_structure_fixate_field_nearest_fraction">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="field_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="target_numerator" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="target_denominator" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="StructureChangeType"
                 version="0.10.22"
                 glib:type-name="GstStructureChangeType"
                 glib:get-type="gst_structure_change_type_get_type"
                 c:type="GstStructureChangeType">
      <doc xml:whitespace="preserve">The type of a %GST_MESSAGE_STRUCTURE_CHANGE.</doc>
      <member name="link"
              value="0"
              c:identifier="GST_STRUCTURE_CHANGE_TYPE_PAD_LINK"
              glib:nick="link"/>
      <member name="unlink"
              value="1"
              c:identifier="GST_STRUCTURE_CHANGE_TYPE_PAD_UNLINK"
              glib:nick="unlink"/>
    </enumeration>
    <callback name="StructureForeachFunc" c:type="GstStructureForeachFunc">
      <doc xml:whitespace="preserve">A function that will be called in gst_structure_foreach(). The function may
not modify @value.
the foreach operation should stop with FALSE.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the foreach operation should continue, FALSE if</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="field_id" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GQuark of the field name</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GValue of the field</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">user data</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="StructureMapFunc" c:type="GstStructureMapFunc">
      <doc xml:whitespace="preserve">A function that will be called in gst_structure_map_in_place(). The function
may modify @value.
the map operation should stop with FALSE.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">TRUE if the map operation should continue, FALSE if</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="field_id" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GQuark of the field name</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GValue of the field</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">user data</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="SystemClock"
           c:type="GstSystemClock"
           parent="Clock"
           glib:type-name="GstSystemClock"
           glib:get-type="gst_system_clock_get_type"
           glib:type-struct="SystemClockClass">
      <doc xml:whitespace="preserve">The default implementation of a #GstClock that uses the system time.</doc>
      <function name="obtain" c:identifier="gst_system_clock_obtain">
        <return-value transfer-ownership="full">
          <type name="Clock" c:type="GstClock*"/>
        </return-value>
      </function>
      <property name="clock-type" writable="1" transfer-ownership="none">
        <type name="ClockType" c:type="GstClockType"/>
      </property>
      <field name="clock">
        <type name="Clock" c:type="GstClock"/>
      </field>
      <field name="thread">
        <type name="GLib.Thread" c:type="GThread*"/>
      </field>
      <field name="stopping">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="priv">
        <type name="SystemClockPrivate" c:type="GstSystemClockPrivate*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="3">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="SystemClockClass"
            c:type="GstSystemClockClass"
            glib:is-gtype-struct-for="SystemClock">
      <field name="parent_class">
        <type name="ClockClass" c:type="GstClockClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="SystemClockPrivate" c:type="GstSystemClockPrivate">
    </record>
    <constant name="TAG_ALBUM" value="album">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ALBUM_ARTIST" value="album-artist">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ALBUM_ARTIST_SORTNAME" value="album-artist-sortname">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ALBUM_GAIN" value="replaygain-album-gain">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ALBUM_PEAK" value="replaygain-album-peak">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ALBUM_SORTNAME" value="album-sortname">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ALBUM_VOLUME_COUNT" value="album-disc-count">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ALBUM_VOLUME_NUMBER" value="album-disc-number">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ARTIST" value="artist">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ARTIST_SORTNAME" value="musicbrainz-sortname">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ATTACHMENT" value="attachment">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_AUDIO_CODEC" value="audio-codec">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_BEATS_PER_MINUTE" value="beats-per-minute">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_BITRATE" value="bitrate">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_CODEC" value="codec">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_COMMENT" value="comment">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_COMPOSER" value="composer">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_COMPOSER_SORTNAME" value="composer-sortname">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_CONTACT" value="contact">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_CONTAINER_FORMAT" value="container-format">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_COPYRIGHT" value="copyright">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_COPYRIGHT_URI" value="copyright-uri">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_DATE" value="date">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_DESCRIPTION" value="description">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_DEVICE_MANUFACTURER" value="device-manufacturer">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_DEVICE_MODEL" value="device-model">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_DURATION" value="duration">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ENCODER" value="encoder">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ENCODER_VERSION" value="encoder-version">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_EXTENDED_COMMENT" value="extended-comment">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GENRE" value="genre">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_CAPTURE_DIRECTION"
              value="geo-location-capture-direction">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_CITY" value="geo-location-city">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_COUNTRY" value="geo-location-country">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_ELEVATION" value="geo-location-elevation">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_LATITUDE" value="geo-location-latitude">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_LONGITUDE" value="geo-location-longitude">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_MOVEMENT_DIRECTION"
              value="geo-location-movement-direction">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_MOVEMENT_SPEED"
              value="geo-location-movement-speed">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_NAME" value="geo-location-name">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GEO_LOCATION_SUBLOCATION"
              value="geo-location-sublocation">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_GROUPING" value="grouping">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_HOMEPAGE" value="homepage">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_IMAGE" value="image">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_IMAGE_ORIENTATION" value="image-orientation">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ISRC" value="isrc">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_KEYWORDS" value="keywords">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_LANGUAGE_CODE" value="language-code">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_LICENSE" value="license">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_LICENSE_URI" value="license-uri">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_LOCATION" value="location">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_LYRICS" value="lyrics">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_MAXIMUM_BITRATE" value="maximum-bitrate">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_MINIMUM_BITRATE" value="minimum-bitrate">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_NOMINAL_BITRATE" value="nominal-bitrate">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_ORGANIZATION" value="organization">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_PERFORMER" value="performer">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_PREVIEW_IMAGE" value="preview-image">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_REFERENCE_LEVEL" value="replaygain-reference-level">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_SERIAL" value="serial">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_SHOW_EPISODE_NUMBER" value="show-episode-number">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_SHOW_NAME" value="show-name">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_SHOW_SEASON_NUMBER" value="show-season-number">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_SHOW_SORTNAME" value="show-sortname">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_SUBTITLE_CODEC" value="subtitle-codec">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_TITLE" value="title">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_TITLE_SORTNAME" value="title-sortname">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_TRACK_COUNT" value="track-count">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_TRACK_GAIN" value="replaygain-track-gain">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_TRACK_NUMBER" value="track-number">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_TRACK_PEAK" value="replaygain-track-peak">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_USER_RATING" value="user-rating">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_VERSION" value="version">
      <type name="utf8"/>
    </constant>
    <constant name="TAG_VIDEO_CODEC" value="video-codec">
      <type name="utf8"/>
    </constant>
    <constant name="TIME_FORMAT" value="u:%02u:%02u.%09u">
      <type name="utf8"/>
    </constant>
    <enumeration name="TagFlag"
                 glib:type-name="GstTagFlag"
                 glib:get-type="gst_tag_flag_get_type"
                 c:type="GstTagFlag">
      <doc xml:whitespace="preserve">Extra tag flags used when registering tags.</doc>
      <member name="undefined"
              value="0"
              c:identifier="GST_TAG_FLAG_UNDEFINED"
              glib:nick="undefined"/>
      <member name="meta"
              value="1"
              c:identifier="GST_TAG_FLAG_META"
              glib:nick="meta"/>
      <member name="encoded"
              value="2"
              c:identifier="GST_TAG_FLAG_ENCODED"
              glib:nick="encoded"/>
      <member name="decoded"
              value="3"
              c:identifier="GST_TAG_FLAG_DECODED"
              glib:nick="decoded"/>
      <member name="count"
              value="4"
              c:identifier="GST_TAG_FLAG_COUNT"
              glib:nick="count"/>
    </enumeration>
    <callback name="TagForeachFunc" c:type="GstTagForeachFunc">
      <doc xml:whitespace="preserve">A function that will be called in gst_tag_list_foreach(). The function may
not modify the tag list.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GstTagList</doc>
          <type name="TagList" c:type="GstTagList*"/>
        </parameter>
        <parameter name="tag" transfer-ownership="none">
          <doc xml:whitespace="preserve">a name of a tag in @list</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">user data</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <glib:boxed c:type="GstTagList"
                glib:name="TagList"
                glib:type-name="GstTagList"
                glib:get-type="gst_tag_list_get_type">
      <constructor name="new" c:identifier="gst_tag_list_new">
        <return-value transfer-ownership="full">
          <type name="TagList" c:type="GstTagList*"/>
        </return-value>
      </constructor>
      <constructor name="new_full"
                   c:identifier="gst_tag_list_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="TagList" c:type="GstTagList*"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="gst_tag_list_copy">
        <return-value transfer-ownership="full">
          <type name="TagList" c:type="GstTagList*"/>
        </return-value>
      </method>
      <method name="is_empty" c:identifier="gst_tag_list_is_empty">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="insert" c:identifier="gst_tag_list_insert">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="from" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="merge" c:identifier="gst_tag_list_merge">
        <return-value transfer-ownership="full">
          <type name="TagList" c:type="GstTagList*"/>
        </return-value>
        <parameters>
          <parameter name="list2" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gst_tag_list_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_tag_size" c:identifier="gst_tag_list_get_tag_size">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add" c:identifier="gst_tag_list_add" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_values"
              c:identifier="gst_tag_list_add_values"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_value" c:identifier="gst_tag_list_add_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_tag" c:identifier="gst_tag_list_remove_tag">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="foreach" c:identifier="gst_tag_list_foreach">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="TagForeachFunc" c:type="GstTagForeachFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_index"
              c:identifier="gst_tag_list_get_value_index">
        <return-value transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_char" c:identifier="gst_tag_list_get_char">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_char_index" c:identifier="gst_tag_list_get_char_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uchar" c:identifier="gst_tag_list_get_uchar">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_uchar_index"
              c:identifier="gst_tag_list_get_uchar_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean" c:identifier="gst_tag_list_get_boolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean_index"
              c:identifier="gst_tag_list_get_boolean_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="boolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int" c:identifier="gst_tag_list_get_int">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int_index" c:identifier="gst_tag_list_get_int_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint" c:identifier="gst_tag_list_get_uint">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint_index" c:identifier="gst_tag_list_get_uint_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_long" c:identifier="gst_tag_list_get_long">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="long" c:type="glong*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_long_index" c:identifier="gst_tag_list_get_long_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="long" c:type="glong*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ulong" c:identifier="gst_tag_list_get_ulong">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="ulong" c:type="gulong*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ulong_index"
              c:identifier="gst_tag_list_get_ulong_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="ulong" c:type="gulong*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int64" c:identifier="gst_tag_list_get_int64">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int64_index"
              c:identifier="gst_tag_list_get_int64_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint64" c:identifier="gst_tag_list_get_uint64">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uint64_index"
              c:identifier="gst_tag_list_get_uint64_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float" c:identifier="gst_tag_list_get_float">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="float" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_index"
              c:identifier="gst_tag_list_get_float_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="float" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_double" c:identifier="gst_tag_list_get_double">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_double_index"
              c:identifier="gst_tag_list_get_double_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="double" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string" c:identifier="gst_tag_list_get_string">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_string_index"
              c:identifier="gst_tag_list_get_string_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="peek_string_index"
              c:identifier="gst_tag_list_peek_string_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_pointer" c:identifier="gst_tag_list_get_pointer">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pointer_index"
              c:identifier="gst_tag_list_get_pointer_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_date" c:identifier="gst_tag_list_get_date">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Date" c:type="GDate**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_date_index" c:identifier="gst_tag_list_get_date_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Date" c:type="GDate**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_buffer" c:identifier="gst_tag_list_get_buffer">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_buffer_index"
              c:identifier="gst_tag_list_get_buffer_index">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
    </glib:boxed>
    <callback name="TagMergeFunc" c:type="GstTagMergeFunc">
      <doc xml:whitespace="preserve">A function for merging multiple values of a tag used when registering
tags.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <doc xml:whitespace="preserve">the destination #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <doc xml:whitespace="preserve">the source #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="TagMergeMode"
                 glib:type-name="GstTagMergeMode"
                 glib:get-type="gst_tag_merge_mode_get_type"
                 c:type="GstTagMergeMode">
      <doc xml:whitespace="preserve">The different tag merging modes are basically replace, overwrite and append,
already in the element and (B) the ones that are supplied to the element (
e.g. via gst_tag_setter_merge_tags() / gst_tag_setter_add_tags() or a
%GST_EVENT_TAG), how are these tags merged?
In the table below this is shown for the cases that a tag exists in the list
(A) or does not exists (!A) and combinations thereof.
&lt;table frame="all" colsep="1" rowsep="1"&gt;
&lt;title&gt;merge mode&lt;/title&gt;
&lt;tgroup cols='5' align='left'&gt;
&lt;thead&gt;
&lt;row&gt;
&lt;entry&gt;merge mode&lt;/entry&gt;
&lt;entry&gt;A + B&lt;/entry&gt;
&lt;entry&gt;A + !B&lt;/entry&gt;
&lt;entry&gt;!A + B&lt;/entry&gt;
&lt;entry&gt;!A + !B&lt;/entry&gt;
&lt;/row&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;row&gt;
&lt;entry&gt;REPLACE_ALL&lt;/entry&gt;
&lt;entry&gt;B&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;entry&gt;B&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;/row&gt;
&lt;row&gt;
&lt;entry&gt;REPLACE&lt;/entry&gt;
&lt;entry&gt;B&lt;/entry&gt;
&lt;entry&gt;A&lt;/entry&gt;
&lt;entry&gt;B&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;/row&gt;
&lt;row&gt;
&lt;entry&gt;APPEND&lt;/entry&gt;
&lt;entry&gt;A, B&lt;/entry&gt;
&lt;entry&gt;A&lt;/entry&gt;
&lt;entry&gt;B&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;/row&gt;
&lt;row&gt;
&lt;entry&gt;PREPEND&lt;/entry&gt;
&lt;entry&gt;B, A&lt;/entry&gt;
&lt;entry&gt;A&lt;/entry&gt;
&lt;entry&gt;B&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;/row&gt;
&lt;row&gt;
&lt;entry&gt;KEEP&lt;/entry&gt;
&lt;entry&gt;A&lt;/entry&gt;
&lt;entry&gt;A&lt;/entry&gt;
&lt;entry&gt;B&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;/row&gt;
&lt;row&gt;
&lt;entry&gt;KEEP_ALL&lt;/entry&gt;
&lt;entry&gt;A&lt;/entry&gt;
&lt;entry&gt;A&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;entry&gt;-&lt;/entry&gt;
&lt;/row&gt;
&lt;/tbody&gt;
&lt;/tgroup&gt;
&lt;/table&gt;</doc>
      <member name="undefined"
              value="0"
              c:identifier="GST_TAG_MERGE_UNDEFINED"
              glib:nick="undefined"/>
      <member name="replace_all"
              value="1"
              c:identifier="GST_TAG_MERGE_REPLACE_ALL"
              glib:nick="replace-all"/>
      <member name="replace"
              value="2"
              c:identifier="GST_TAG_MERGE_REPLACE"
              glib:nick="replace"/>
      <member name="append"
              value="3"
              c:identifier="GST_TAG_MERGE_APPEND"
              glib:nick="append"/>
      <member name="prepend"
              value="4"
              c:identifier="GST_TAG_MERGE_PREPEND"
              glib:nick="prepend"/>
      <member name="keep"
              value="5"
              c:identifier="GST_TAG_MERGE_KEEP"
              glib:nick="keep"/>
      <member name="keep_all"
              value="6"
              c:identifier="GST_TAG_MERGE_KEEP_ALL"
              glib:nick="keep-all"/>
      <member name="count"
              value="7"
              c:identifier="GST_TAG_MERGE_COUNT"
              glib:nick="count"/>
    </enumeration>
    <interface name="TagSetter"
               c:type="GstTagSetter"
               glib:type-name="GstTagSetter"
               glib:get-type="gst_tag_setter_get_type">
      <doc xml:whitespace="preserve">Opaque #GstTagSetter data structure.</doc>
      <prerequisite name="Element"/>
      <method name="reset_tags" c:identifier="gst_tag_setter_reset_tags">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="merge_tags" c:identifier="gst_tag_setter_merge_tags">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="TagList" c:type="GstTagList*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_tags"
              c:identifier="gst_tag_setter_add_tags"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_tag_values"
              c:identifier="gst_tag_setter_add_tag_values"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="add_tag_value" c:identifier="gst_tag_setter_add_tag_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tag_list" c:identifier="gst_tag_setter_get_tag_list">
        <return-value transfer-ownership="none">
          <type name="TagList" c:type="GstTagList*"/>
        </return-value>
      </method>
      <method name="set_tag_merge_mode"
              c:identifier="gst_tag_setter_set_tag_merge_mode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <type name="TagMergeMode" c:type="GstTagMergeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tag_merge_mode"
              c:identifier="gst_tag_setter_get_tag_merge_mode">
        <return-value transfer-ownership="full">
          <type name="TagMergeMode" c:type="GstTagMergeMode"/>
        </return-value>
      </method>
    </interface>
    <record name="TagSetterIFace" c:type="GstTagSetterIFace">
      <doc xml:whitespace="preserve">#GstTagSetterIFace interface.</doc>
      <field name="g_iface" writable="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
    </record>
    <class name="Task"
           c:type="GstTask"
           parent="Object"
           glib:type-name="GstTask"
           glib:get-type="gst_task_get_type"
           glib:type-struct="TaskClass">
      <doc xml:whitespace="preserve">The #GstTask object.</doc>
      <function name="cleanup_all" c:identifier="gst_task_cleanup_all">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="create" c:identifier="gst_task_create">
        <return-value transfer-ownership="full">
          <type name="Task" c:type="GstTask*"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <type name="TaskFunction" c:type="GstTaskFunction"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="set_lock" c:identifier="gst_task_set_lock">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mutex" transfer-ownership="none">
            <type name="GLib.StaticRecMutex" c:type="GStaticRecMutex*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_priority" c:identifier="gst_task_set_priority">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="priority" transfer-ownership="none">
            <type name="GLib.ThreadPriority" c:type="GThreadPriority"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pool" c:identifier="gst_task_get_pool">
        <return-value transfer-ownership="full">
          <type name="TaskPool" c:type="GstTaskPool*"/>
        </return-value>
      </method>
      <method name="set_pool" c:identifier="gst_task_set_pool">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pool" transfer-ownership="none">
            <type name="TaskPool" c:type="GstTaskPool*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_thread_callbacks"
              c:identifier="gst_task_set_thread_callbacks">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="callbacks" transfer-ownership="none">
            <type name="TaskThreadCallbacks" c:type="GstTaskThreadCallbacks*"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="gst_task_get_state">
        <return-value transfer-ownership="full">
          <type name="TaskState" c:type="GstTaskState"/>
        </return-value>
      </method>
      <method name="set_state" c:identifier="gst_task_set_state">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="TaskState" c:type="GstTaskState"/>
          </parameter>
        </parameters>
      </method>
      <method name="start" c:identifier="gst_task_start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="gst_task_stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="pause" c:identifier="gst_task_pause">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="join" c:identifier="gst_task_join">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="state">
        <type name="TaskState" c:type="GstTaskState"/>
      </field>
      <field name="cond">
        <type name="GLib.Cond" c:type="GCond*"/>
      </field>
      <field name="lock">
        <type name="GLib.StaticRecMutex" c:type="GStaticRecMutex*"/>
      </field>
      <field name="func">
        <type name="TaskFunction" c:type="GstTaskFunction"/>
      </field>
      <field name="data">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="running">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <union name="abidata" c:type="abidata">
        <record name="ABI" c:type="ABI">
          <field name="thread" writable="1">
            <type name="GLib.Thread" c:type="GThread*"/>
          </field>
        </record>
        <field name="_gst_reserved" writable="1">
          <array zero-terminated="0" c:type="gpointer" fixed-size="3">
            <type name="any"/>
          </array>
        </field>
      </union>
      <field name="priv">
        <type name="TaskPrivate" c:type="GstTaskPrivate*"/>
      </field>
    </class>
    <record name="TaskClass"
            c:type="GstTaskClass"
            glib:is-gtype-struct-for="Task">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="pool">
        <type name="TaskPool" c:type="GstTaskPool*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="TaskFunction" c:type="GstTaskFunction">
      <doc xml:whitespace="preserve">A function that will repeatedly be called in the thread created by
a #GstTask.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">user data passed to the function</doc>
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="TaskPool"
           c:type="GstTaskPool"
           parent="Object"
           glib:type-name="GstTaskPool"
           glib:get-type="gst_task_pool_get_type"
           glib:type-struct="TaskPoolClass">
      <doc xml:whitespace="preserve">The #GstTaskPool object.</doc>
      <constructor name="new" c:identifier="gst_task_pool_new">
        <return-value transfer-ownership="full">
          <type name="TaskPool" c:type="GstTaskPool*"/>
        </return-value>
      </constructor>
      <virtual-method name="prepare" invoker="prepare" throws="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="cleanup" invoker="cleanup">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="push" invoker="push" throws="1">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none">
            <type name="TaskPoolFunction" c:type="GstTaskPoolFunction"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="2">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="join" invoker="join">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="prepare" c:identifier="gst_task_pool_prepare" throws="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="push" c:identifier="gst_task_pool_push" throws="1">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <type name="TaskPoolFunction" c:type="GstTaskPoolFunction"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="join" c:identifier="gst_task_pool_join">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="cleanup" c:identifier="gst_task_pool_cleanup">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="pool">
        <type name="GLib.ThreadPool" c:type="GThreadPool*"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="TaskPoolClass"
            c:type="GstTaskPoolClass"
            glib:is-gtype-struct-for="TaskPool">
      <doc xml:whitespace="preserve">The #GstTaskPoolClass object.</doc>
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="prepare">
        <callback name="prepare" c:type="prepare" throws="1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="TaskPool" c:type="GstTaskPool*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cleanup">
        <callback name="cleanup" c:type="cleanup">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="TaskPool" c:type="GstTaskPool*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="push">
        <callback name="push" c:type="push" throws="1">
          <return-value transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="TaskPool" c:type="GstTaskPool*"/>
            </parameter>
            <parameter name="func" transfer-ownership="none">
              <type name="TaskPoolFunction" c:type="GstTaskPoolFunction"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="2">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="join">
        <callback name="join" c:type="join">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pool" transfer-ownership="none">
              <type name="TaskPool" c:type="GstTaskPool*"/>
            </parameter>
            <parameter name="id" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="TaskPoolFunction"
              c:type="GstTaskPoolFunction"
              version="0.10.24">
      <doc xml:whitespace="preserve">Task function, see gst_task_pool_push().</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">user data for the task function</doc>
          <type name="any" c:type="void*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="TaskPrivate" c:type="GstTaskPrivate">
    </record>
    <enumeration name="TaskState"
                 glib:type-name="GstTaskState"
                 glib:get-type="gst_task_state_get_type"
                 c:type="GstTaskState">
      <doc xml:whitespace="preserve">The different states a task can be in</doc>
      <member name="started"
              value="0"
              c:identifier="GST_TASK_STARTED"
              glib:nick="started"/>
      <member name="stopped"
              value="1"
              c:identifier="GST_TASK_STOPPED"
              glib:nick="stopped"/>
      <member name="paused"
              value="2"
              c:identifier="GST_TASK_PAUSED"
              glib:nick="paused"/>
    </enumeration>
    <record name="TaskThreadCallbacks"
            c:type="GstTaskThreadCallbacks"
            version="0.10.24">
      <doc xml:whitespace="preserve">Custom GstTask thread callback functions that can be installed.</doc>
      <field name="enter_thread">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="leave_thread">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="Trace" c:type="GstTrace">
      <doc xml:whitespace="preserve">Opaque #GstTrace structure.</doc>
      <field name="filename" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="fd" writable="1">
        <type name="int" c:type="int"/>
      </field>
      <field name="buf" writable="1">
        <type name="TraceEntry" c:type="GstTraceEntry*"/>
      </field>
      <field name="bufsize" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="bufoffset" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <constructor name="new" c:identifier="gst_trace_new">
        <return-value transfer-ownership="full">
          <type name="Trace" c:type="GstTrace*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="destroy" c:identifier="gst_trace_destroy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="flush" c:identifier="gst_trace_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="text_flush" c:identifier="gst_trace_text_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_default" c:identifier="gst_trace_set_default">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <record name="TraceEntry" c:type="GstTraceEntry">
      <field name="timestamp" writable="1">
        <type name="int64" c:type="gint64"/>
      </field>
      <field name="sequence" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="data" writable="1">
        <type name="uint32" c:type="guint32"/>
      </field>
      <field name="message" writable="1">
        <array zero-terminated="0" c:type="gchar" fixed-size="112">
          <type name="int8"/>
        </array>
      </field>
    </record>
    <record name="TypeFind" c:type="GstTypeFind">
      <doc xml:whitespace="preserve">Object that stores typefind callbacks. To use with #GstTypeFindFactory.</doc>
      <field name="peek">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="suggest">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="data" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="get_length">
        <type name="any" c:type="pointer"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
      <method name="peek" c:identifier="gst_type_find_peek">
        <return-value transfer-ownership="full">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="suggest" c:identifier="gst_type_find_suggest">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="probability" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="suggest_simple"
              c:identifier="gst_type_find_suggest_simple"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="probability" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="media_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="fieldname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="get_length" c:identifier="gst_type_find_get_length">
        <return-value transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </return-value>
      </method>
    </record>
    <class name="TypeFindFactory"
           c:type="GstTypeFindFactory"
           parent="PluginFeature"
           glib:type-name="GstTypeFindFactory"
           glib:get-type="gst_type_find_factory_get_type"
           glib:type-struct="TypeFindFactoryClass">
      <doc xml:whitespace="preserve">Object that stores information about a typefind function.</doc>
      <function name="get_list"
                c:identifier="gst_type_find_factory_get_list"
                introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </function>
      <method name="get_extensions"
              c:identifier="gst_type_find_factory_get_extensions">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_caps" c:identifier="gst_type_find_factory_get_caps">
        <return-value transfer-ownership="full">
          <type name="Caps" c:type="GstCaps*"/>
        </return-value>
      </method>
      <method name="call_function"
              c:identifier="gst_type_find_factory_call_function">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="find" transfer-ownership="none">
            <type name="TypeFind" c:type="GstTypeFind*"/>
          </parameter>
        </parameters>
      </method>
      <field name="feature">
        <type name="PluginFeature" c:type="GstPluginFeature"/>
      </field>
      <field name="function">
        <type name="TypeFindFunction" c:type="GstTypeFindFunction"/>
      </field>
      <field name="extensions">
        <type name="utf8" c:type="gchar**"/>
      </field>
      <field name="caps">
        <type name="Caps" c:type="GstCaps*"/>
      </field>
      <field name="user_data">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="user_data_notify">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </class>
    <record name="TypeFindFactoryClass"
            c:type="GstTypeFindFactoryClass"
            glib:is-gtype-struct-for="TypeFindFactory">
      <field name="parent">
        <type name="PluginFeatureClass" c:type="GstPluginFeatureClass"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="TypeFindFunction" c:type="GstTypeFindFunction">
      <doc xml:whitespace="preserve">A function that will be called by typefinding.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="find" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GstTypeFind structure</doc>
          <type name="TypeFind" c:type="GstTypeFind*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">optionnal data to pass to the function</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="TypeFindHelperGetRangeFunction"
              c:type="GstTypeFindHelperGetRangeFunction">
      <doc xml:whitespace="preserve">This function will be called by gst_type_find_helper_get_range() when
typefinding functions request to peek at the data of a stream at certain
offsets. If this function returns GST_FLOW_OK, the result buffer will be
stored in @buffer. The  contents of @buffer is invalid for any other
return value.
This function is supposed to behave exactly like a #GstPadGetRangeFunction.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">GST_FLOW_OK for success</doc>
        <type name="FlowReturn" c:type="GstFlowReturn"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GstObject that will handle the getrange request</doc>
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <doc xml:whitespace="preserve">the offset of the range</doc>
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="length" transfer-ownership="none">
          <doc xml:whitespace="preserve">the length of the range</doc>
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:whitespace="preserve">a memory location to hold the result buffer</doc>
          <type name="Buffer" c:type="GstBuffer**"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="TypeFindProbability"
                 glib:type-name="GstTypeFindProbability"
                 glib:get-type="gst_type_find_probability_get_type"
                 c:type="GstTypeFindProbability">
      <doc xml:whitespace="preserve">The probability of the typefind function. Higher values have more certainty
in doing a reliable typefind.</doc>
      <member name="minimum"
              value="1"
              c:identifier="GST_TYPE_FIND_MINIMUM"
              glib:nick="minimum"/>
      <member name="possible"
              value="50"
              c:identifier="GST_TYPE_FIND_POSSIBLE"
              glib:nick="possible"/>
      <member name="likely"
              value="80"
              c:identifier="GST_TYPE_FIND_LIKELY"
              glib:nick="likely"/>
      <member name="nearly_certain"
              value="99"
              c:identifier="GST_TYPE_FIND_NEARLY_CERTAIN"
              glib:nick="nearly-certain"/>
      <member name="maximum"
              value="100"
              c:identifier="GST_TYPE_FIND_MAXIMUM"
              glib:nick="maximum"/>
    </enumeration>
    <record name="TypeNameData" c:type="GstTypeNameData">
      <doc xml:whitespace="preserve">Structure used for filtering based on @name and @type.</doc>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="type" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
    </record>
    <interface name="URIHandler"
               c:type="GstURIHandler"
               glib:type-name="GstURIHandler"
               glib:get-type="gst_uri_handler_get_type"
               glib:type-struct="URIHandlerInterface">
      <doc xml:whitespace="preserve">Opaque #GstURIHandler structure.</doc>
      <virtual-method name="get_uri" invoker="get_uri">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_uri" invoker="set_uri">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_uri_type" c:identifier="gst_uri_handler_get_uri_type">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_protocols"
              c:identifier="gst_uri_handler_get_protocols">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_uri" c:identifier="gst_uri_handler_get_uri">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_uri" c:identifier="gst_uri_handler_set_uri">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_uri" c:identifier="gst_uri_handler_new_uri">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="new-uri">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="URIHandlerInterface"
            c:type="GstURIHandlerInterface"
            glib:is-gtype-struct-for="URIHandler">
      <doc xml:whitespace="preserve">Any #GstElement using this interface should implement these methods.</doc>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="new_uri">
        <callback name="new_uri" c:type="new_uri">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="handler" transfer-ownership="none">
              <type name="URIHandler" c:type="GstURIHandler*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_type">
        <callback name="get_type" c:type="get_type">
          <return-value transfer-ownership="full">
            <type name="URIType" c:type="GstURIType"/>
          </return-value>
        </callback>
      </field>
      <field name="get_protocols">
        <callback name="get_protocols" c:type="get_protocols">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
        </callback>
      </field>
      <field name="get_uri">
        <callback name="get_uri" c:type="get_uri">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="handler" transfer-ownership="none">
              <type name="URIHandler" c:type="GstURIHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_uri">
        <callback name="set_uri" c:type="set_uri">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="handler" transfer-ownership="none">
              <type name="URIHandler" c:type="GstURIHandler*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_type_full">
        <callback name="get_type_full" c:type="get_type_full">
          <return-value transfer-ownership="full">
            <type name="URIType" c:type="GstURIType"/>
          </return-value>
          <parameters>
            <parameter name="type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_protocols_full">
        <callback name="get_protocols_full" c:type="get_protocols_full">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="type" transfer-ownership="none">
              <type name="GType" c:type="GType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="2">
          <type name="any"/>
        </array>
      </field>
    </record>
    <enumeration name="URIType"
                 glib:type-name="GstURIType"
                 glib:get-type="gst_uri_type_get_type"
                 c:type="GstURIType">
      <doc xml:whitespace="preserve">The different types of URI direction.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GST_URI_UNKNOWN"
              glib:nick="unknown"/>
      <member name="sink"
              value="1"
              c:identifier="GST_URI_SINK"
              glib:nick="sink"/>
      <member name="src" value="2" c:identifier="GST_URI_SRC" glib:nick="src"/>
    </enumeration>
    <constant name="USECOND" value="0">
      <type name="int"/>
    </constant>
    <constant name="VALUE_EQUAL" value="0">
      <type name="int"/>
    </constant>
    <constant name="VALUE_GREATER_THAN" value="1">
      <type name="int"/>
    </constant>
    <constant name="VALUE_LESS_THAN" value="-1">
      <type name="int"/>
    </constant>
    <constant name="VALUE_UNORDERED" value="2">
      <type name="int"/>
    </constant>
    <constant name="VERSION_MAJOR" value="0">
      <type name="int"/>
    </constant>
    <constant name="VERSION_MICRO" value="29">
      <type name="int"/>
    </constant>
    <constant name="VERSION_MINOR" value="10">
      <type name="int"/>
    </constant>
    <constant name="VERSION_NANO" value="4">
      <type name="int"/>
    </constant>
    <callback name="ValueCompareFunc" c:type="GstValueCompareFunc">
      <doc xml:whitespace="preserve">Used together with gst_value_compare() to compare #GValue items.
or GST_VALUE_UNORDERED</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">one of GST_VALUE_LESS_THAN, GST_VALUE_EQUAL, GST_VALUE_GREATER_THAN</doc>
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <doc xml:whitespace="preserve">first value for comparison</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <doc xml:whitespace="preserve">second value for comparison</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ValueDeserializeFunc" c:type="GstValueDeserializeFunc">
      <doc xml:whitespace="preserve">Used by gst_value_deserialize() to parse a non-binary form into the #GValue.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE for success</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="s" transfer-ownership="none">
          <doc xml:whitespace="preserve">a string</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ValueIntersectFunc" c:type="GstValueIntersectFunc">
      <doc xml:whitespace="preserve">Used by gst_value_intersect() to perform intersection for a specific #GValue
type. If the intersection is non-empty, the result is
placed in @dest and TRUE is returned.  If the intersection is
empty, @dest is unmodified and FALSE is returned.
Register a new implementation with gst_value_register_intersect_func().</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if the values can intersect</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue for the result</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value1" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue operand</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue operand</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ValueSerializeFunc" c:type="GstValueSerializeFunc">
      <doc xml:whitespace="preserve">Used by gst_value_serialize() to obtain a non-binary form of the #GValue.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">the string representation of the value</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ValueSubtractFunc" c:type="GstValueSubtractFunc">
      <doc xml:whitespace="preserve">Used by gst_value_subtract() to perform subtraction for a specific #GValue
type. Register a new implementation with gst_value_register_subtract_func().</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if the subtraction is not empty</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue for the result</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="minuend" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue operand</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="subtrahend" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue operand</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="ValueTable" c:type="GstValueTable">
      <doc xml:whitespace="preserve">VTable for the #GValue @type.</doc>
      <field name="type" writable="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="compare" writable="1">
        <type name="ValueCompareFunc" c:type="GstValueCompareFunc"/>
      </field>
      <field name="serialize" writable="1">
        <type name="ValueSerializeFunc" c:type="GstValueSerializeFunc"/>
      </field>
      <field name="deserialize" writable="1">
        <type name="ValueDeserializeFunc" c:type="GstValueDeserializeFunc"/>
      </field>
      <field name="_gst_reserved" writable="1">
        <array zero-terminated="0" c:type="void*" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="ValueUnionFunc" c:type="GstValueUnionFunc">
      <doc xml:whitespace="preserve">Used by gst_value_union() to perform unification for a specific #GValue
type. Register a new implementation with gst_value_register_union_func().</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if a union was successful</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue for the result</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value1" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue operand</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue operand</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="XML"
           c:type="GstXML"
           parent="Object"
           glib:type-name="GstXML"
           glib:get-type="gst_xml_get_type"
           glib:type-struct="XMLClass">
      <doc xml:whitespace="preserve">XML parser object</doc>
      <constructor name="new" c:identifier="gst_xml_new">
        <return-value transfer-ownership="full">
          <type name="XML" c:type="GstXML*"/>
        </return-value>
      </constructor>
      <function name="write" c:identifier="gst_xml_write">
        <return-value transfer-ownership="full">
          <type name="libxml2.DocPtr" c:type="xmlDocPtr"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <type name="Element" c:type="GstElement*"/>
          </parameter>
        </parameters>
      </function>
      <function name="make_element" c:identifier="gst_xml_make_element">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="cur" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="object_saved">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Object" c:type="GstObject*"/>
          </parameter>
          <parameter name="self" transfer-ownership="none">
            <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="parse_doc" c:identifier="gst_xml_parse_doc">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="doc" transfer-ownership="none">
            <type name="libxml2.DocPtr" c:type="xmlDocPtr"/>
          </parameter>
          <parameter name="root" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="parse_file" c:identifier="gst_xml_parse_file">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fname" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="root" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="parse_memory" c:identifier="gst_xml_parse_memory">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="root" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_element" c:identifier="gst_xml_get_element">
        <return-value transfer-ownership="full">
          <type name="Element" c:type="GstElement*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_topelements"
              c:identifier="gst_xml_get_topelements"
              introspectable="0">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <field name="object">
        <type name="Object" c:type="GstObject"/>
      </field>
      <field name="topelements">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </field>
      <field name="ns">
        <type name="libxml2.NsPtr" c:type="xmlNsPtr"/>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
      <glib:signal name="object-loaded">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Object" c:type="GstObject"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="XMLClass"
            c:type="GstXMLClass"
            glib:is-gtype-struct-for="XML">
      <field name="parent_class">
        <type name="ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="object_loaded">
        <callback name="object_loaded" c:type="object_loaded">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="xml" transfer-ownership="none">
              <type name="XML" c:type="GstXML*"/>
            </parameter>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="self" transfer-ownership="none">
              <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="object_saved">
        <callback name="object_saved" c:type="object_saved">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="xml" transfer-ownership="none">
              <type name="XML" c:type="GstXML*"/>
            </parameter>
            <parameter name="object" transfer-ownership="none">
              <type name="Object" c:type="GstObject*"/>
            </parameter>
            <parameter name="self" transfer-ownership="none">
              <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gst_reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="4">
          <type name="any"/>
        </array>
      </field>
    </record>
    <function name="alloc_trace_available"
              c:identifier="gst_alloc_trace_available">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="alloc_trace_get" c:identifier="gst_alloc_trace_get">
      <return-value transfer-ownership="full">
        <type name="AllocTrace" c:type="GstAllocTrace*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="alloc_trace_list"
              c:identifier="gst_alloc_trace_list"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </return-value>
    </function>
    <function name="alloc_trace_live_all"
              c:identifier="gst_alloc_trace_live_all">
      <return-value transfer-ownership="none">
        <type name="int" c:type="int"/>
      </return-value>
    </function>
    <function name="alloc_trace_print_all"
              c:identifier="gst_alloc_trace_print_all">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="alloc_trace_print_live"
              c:identifier="gst_alloc_trace_print_live">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="alloc_trace_set_flags_all"
              c:identifier="gst_alloc_trace_set_flags_all">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <type name="AllocTraceFlags" c:type="GstAllocTraceFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="atomic_int_set" c:identifier="gst_atomic_int_set">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="atomic_int"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="caps_from_string" c:identifier="gst_caps_from_string">
      <return-value transfer-ownership="full">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="caps_load_thyself" c:identifier="gst_caps_load_thyself">
      <return-value transfer-ownership="full">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="parent" transfer-ownership="none">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </parameter>
      </parameters>
    </function>
    <function name="child_proxy_child_added"
              c:identifier="gst_child_proxy_child_added">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
      </parameters>
    </function>
    <function name="child_proxy_child_removed"
              c:identifier="gst_child_proxy_child_removed">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="child" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
      </parameters>
    </function>
    <function name="child_proxy_get"
              c:identifier="gst_child_proxy_get"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="child_proxy_get_property"
              c:identifier="gst_child_proxy_get_property">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="child_proxy_lookup" c:identifier="gst_child_proxy_lookup">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="target" transfer-ownership="none">
          <type name="Object" c:type="GstObject**"/>
        </parameter>
        <parameter name="pspec" transfer-ownership="none">
          <type name="GObject.ParamSpec" c:type="GParamSpec**"/>
        </parameter>
      </parameters>
    </function>
    <function name="child_proxy_set"
              c:identifier="gst_child_proxy_set"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="child_proxy_set_property"
              c:identifier="gst_child_proxy_set_property">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="class_signal_connect"
              c:identifier="gst_class_signal_connect">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <type name="ObjectClass" c:type="GstObjectClass*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="func" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="func_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="class_signal_emit_by_name"
              c:identifier="gst_class_signal_emit_by_name">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="self" transfer-ownership="none">
          <type name="libxml2.NodePtr" c:type="xmlNodePtr"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_add_log_function"
              c:identifier="gst_debug_add_log_function">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="call"
                   closure="1">
          <type name="LogFunction" c:type="GstLogFunction"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_construct_term_color"
              c:identifier="gst_debug_construct_term_color">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="colorinfo" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_construct_win_color"
              c:identifier="gst_debug_construct_win_color">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="colorinfo" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_get_all_categories"
              c:identifier="gst_debug_get_all_categories">
      <return-value transfer-ownership="full">
        <type name="GLib.SList" c:type="GSList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </return-value>
    </function>
    <function name="debug_get_default_threshold"
              c:identifier="gst_debug_get_default_threshold">
      <return-value transfer-ownership="full">
        <type name="DebugLevel" c:type="GstDebugLevel"/>
      </return-value>
    </function>
    <function name="debug_is_active" c:identifier="gst_debug_is_active">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="debug_is_colored" c:identifier="gst_debug_is_colored">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="debug_level_get_name"
              c:identifier="gst_debug_level_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="level" transfer-ownership="none">
          <type name="DebugLevel" c:type="GstDebugLevel"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_log" c:identifier="gst_debug_log" introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="GstDebugCategory*"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="DebugLevel" c:type="GstDebugLevel"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="function" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="line" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="debug_log_default" c:identifier="gst_debug_log_default">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="GstDebugCategory*"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="DebugLevel" c:type="GstDebugLevel"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="function" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="line" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <type name="DebugMessage" c:type="GstDebugMessage*"/>
        </parameter>
        <parameter name="unused" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_print_stack_trace"
              c:identifier="gst_debug_print_stack_trace">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="debug_remove_log_function"
              c:identifier="gst_debug_remove_log_function">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="LogFunction" c:type="GstLogFunction"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_remove_log_function_by_data"
              c:identifier="gst_debug_remove_log_function_by_data">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_set_active" c:identifier="gst_debug_set_active">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="active" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_set_colored" c:identifier="gst_debug_set_colored">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="colored" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_set_default_threshold"
              c:identifier="gst_debug_set_default_threshold">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="level" transfer-ownership="none">
          <type name="DebugLevel" c:type="GstDebugLevel"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_set_threshold_for_name"
              c:identifier="gst_debug_set_threshold_for_name">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="DebugLevel" c:type="GstDebugLevel"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_unset_threshold_for_name"
              c:identifier="gst_debug_unset_threshold_for_name">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="default_registry_check_feature_version"
              c:identifier="gst_default_registry_check_feature_version">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="feature_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="min_major" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="min_minor" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="min_micro" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="deinit" c:identifier="gst_deinit">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="error_get_message" c:identifier="gst_error_get_message">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="domain" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="filter_run"
              c:identifier="gst_filter_run"
              introspectable="0">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="any" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="list" transfer-ownership="none">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="FilterFunc" c:type="GstFilterFunc"/>
        </parameter>
        <parameter name="first" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="flow_get_name" c:identifier="gst_flow_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="ret" transfer-ownership="none">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </parameter>
      </parameters>
    </function>
    <function name="flow_to_quark" c:identifier="gst_flow_to_quark">
      <return-value transfer-ownership="full">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
      <parameters>
        <parameter name="ret" transfer-ownership="none">
          <type name="FlowReturn" c:type="GstFlowReturn"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_get_by_nick" c:identifier="gst_format_get_by_nick">
      <return-value transfer-ownership="full">
        <type name="Format" c:type="GstFormat"/>
      </return-value>
      <parameters>
        <parameter name="nick" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_get_details" c:identifier="gst_format_get_details">
      <return-value transfer-ownership="none">
        <type name="FormatDefinition" c:type="GstFormatDefinition*"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="Format" c:type="GstFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_get_name" c:identifier="gst_format_get_name">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="Format" c:type="GstFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_iterate_definitions"
              c:identifier="gst_format_iterate_definitions">
      <return-value transfer-ownership="full">
        <type name="Iterator" c:type="GstIterator*"/>
      </return-value>
    </function>
    <function name="format_register" c:identifier="gst_format_register">
      <return-value transfer-ownership="full">
        <type name="Format" c:type="GstFormat"/>
      </return-value>
      <parameters>
        <parameter name="nick" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="description" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="format_to_quark" c:identifier="gst_format_to_quark">
      <return-value transfer-ownership="full">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <type name="Format" c:type="GstFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="formats_contains" c:identifier="gst_formats_contains">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="formats" transfer-ownership="none">
          <type name="Format" c:type="GstFormat*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="Format" c:type="GstFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="implements_interface_cast"
              c:identifier="gst_implements_interface_cast">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="from" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="implements_interface_check"
              c:identifier="gst_implements_interface_check">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="from" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="gst_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:whitespace="preserve">argument count</doc>
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   allow-none="1">
          <doc xml:whitespace="preserve">arguments</doc>
          <array length="0" c:type="char**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="init_check" c:identifier="gst_init_check" throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="init_get_option_group"
              c:identifier="gst_init_get_option_group">
      <return-value transfer-ownership="full">
        <type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
      </return-value>
    </function>
    <function name="is_tag_list" c:identifier="gst_is_tag_list">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="p" transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="param_spec_fraction"
              c:identifier="gst_param_spec_fraction">
      <return-value transfer-ownership="full">
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="nick" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="blurb" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="min_num" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="min_denom" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="max_num" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="max_denom" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="default_num" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="default_denom" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="GObject.ParamFlags" c:type="GParamFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="param_spec_mini_object"
              c:identifier="gst_param_spec_mini_object">
      <return-value transfer-ownership="full">
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="nick" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="blurb" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="GObject.ParamFlags" c:type="GParamFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_bin_from_description"
              c:identifier="gst_parse_bin_from_description"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Element" c:type="GstElement*"/>
      </return-value>
      <parameters>
        <parameter name="bin_description" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="ghost_unlinked_pads" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_bin_from_description_full"
              c:identifier="gst_parse_bin_from_description_full"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Element" c:type="GstElement*"/>
      </return-value>
      <parameters>
        <parameter name="bin_description" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="ghost_unlinked_pads" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <type name="ParseContext" c:type="GstParseContext*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="ParseFlags" c:type="GstParseFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_launch" c:identifier="gst_parse_launch" throws="1">
      <return-value transfer-ownership="full">
        <type name="Element" c:type="GstElement*"/>
      </return-value>
      <parameters>
        <parameter name="pipeline_description" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_launch_full"
              c:identifier="gst_parse_launch_full"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Element" c:type="GstElement*"/>
      </return-value>
      <parameters>
        <parameter name="pipeline_description" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <type name="ParseContext" c:type="GstParseContext*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="ParseFlags" c:type="GstParseFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="parse_launchv" c:identifier="gst_parse_launchv" throws="1">
      <return-value transfer-ownership="full">
        <type name="Element" c:type="GstElement*"/>
      </return-value>
      <parameters>
        <parameter name="argv" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="parse_launchv_full"
              c:identifier="gst_parse_launchv_full"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Element" c:type="GstElement*"/>
      </return-value>
      <parameters>
        <parameter name="argv" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <type name="ParseContext" c:type="GstParseContext*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="ParseFlags" c:type="GstParseFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="print_element_args" c:identifier="gst_print_element_args">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buf" transfer-ownership="none">
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
        <parameter name="indent" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="element" transfer-ownership="none">
          <type name="Element" c:type="GstElement*"/>
        </parameter>
      </parameters>
    </function>
    <function name="print_pad_caps" c:identifier="gst_print_pad_caps">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buf" transfer-ownership="none">
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
        <parameter name="indent" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="pad" transfer-ownership="none">
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
      </parameters>
    </function>
    <function name="segtrap_is_enabled" c:identifier="gst_segtrap_is_enabled">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="segtrap_set_enabled"
              c:identifier="gst_segtrap_set_enabled">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="enabled" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="structure_empty_new"
              c:identifier="gst_structure_empty_new">
      <return-value transfer-ownership="full">
        <type name="Structure" c:type="GstStructure*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="structure_from_string"
              c:identifier="gst_structure_from_string">
      <return-value transfer-ownership="full">
        <type name="Structure" c:type="GstStructure*"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="end" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="structure_id_empty_new"
              c:identifier="gst_structure_id_empty_new">
      <return-value transfer-ownership="full">
        <type name="Structure" c:type="GstStructure*"/>
      </return-value>
      <parameters>
        <parameter name="quark" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
      </parameters>
    </function>
    <function name="structure_id_new"
              c:identifier="gst_structure_id_new"
              introspectable="0">
      <return-value transfer-ownership="full">
        <type name="Structure" c:type="GstStructure*"/>
      </return-value>
      <parameters>
        <parameter name="name_quark" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="field_quark" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="tag_exists" c:identifier="gst_tag_exists">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="tag" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_get_description"
              c:identifier="gst_tag_get_description">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="tag" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_get_flag" c:identifier="gst_tag_get_flag">
      <return-value transfer-ownership="full">
        <type name="TagFlag" c:type="GstTagFlag"/>
      </return-value>
      <parameters>
        <parameter name="tag" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_get_nick" c:identifier="gst_tag_get_nick">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="tag" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_get_type" c:identifier="gst_tag_get_type">
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="tag" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_is_fixed" c:identifier="gst_tag_is_fixed">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="tag" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_list_copy_value"
              c:identifier="gst_tag_list_copy_value">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="list" transfer-ownership="none">
          <type name="TagList" c:type="GstTagList*"/>
        </parameter>
        <parameter name="tag" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_merge_strings_with_comma"
              c:identifier="gst_tag_merge_strings_with_comma">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_merge_use_first"
              c:identifier="gst_tag_merge_use_first">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="tag_register" c:identifier="gst_tag_register">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flag" transfer-ownership="none">
          <type name="TagFlag" c:type="GstTagFlag"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="nick" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="blurb" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="TagMergeFunc" c:type="GstTagMergeFunc"/>
        </parameter>
      </parameters>
    </function>
    <function name="trace_read_tsc" c:identifier="gst_trace_read_tsc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dst"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int64" c:type="gint64*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_find_helper" c:identifier="gst_type_find_helper">
      <return-value transfer-ownership="full">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="src" transfer-ownership="none">
          <type name="Pad" c:type="GstPad*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_find_helper_for_buffer"
              c:identifier="gst_type_find_helper_for_buffer">
      <return-value transfer-ownership="full">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="buf" transfer-ownership="none">
          <type name="Buffer" c:type="GstBuffer*"/>
        </parameter>
        <parameter name="prob" transfer-ownership="none">
          <type name="TypeFindProbability" c:type="GstTypeFindProbability*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_find_helper_for_extension"
              c:identifier="gst_type_find_helper_for_extension">
      <return-value transfer-ownership="full">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="extension" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_find_helper_get_range"
              c:identifier="gst_type_find_helper_get_range">
      <return-value transfer-ownership="full">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="TypeFindHelperGetRangeFunction"
                c:type="GstTypeFindHelperGetRangeFunction"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="prob" transfer-ownership="none">
          <type name="TypeFindProbability" c:type="GstTypeFindProbability*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_find_helper_get_range_ext"
              c:identifier="gst_type_find_helper_get_range_ext">
      <return-value transfer-ownership="full">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="obj" transfer-ownership="none">
          <type name="Object" c:type="GstObject*"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="TypeFindHelperGetRangeFunction"
                c:type="GstTypeFindHelperGetRangeFunction"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="extension" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="prob" transfer-ownership="none">
          <type name="TypeFindProbability" c:type="GstTypeFindProbability*"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_find_register" c:identifier="gst_type_find_register">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="plugin" transfer-ownership="none">
          <type name="Plugin" c:type="GstPlugin*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="rank" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="TypeFindFunction" c:type="GstTypeFindFunction"/>
        </parameter>
        <parameter name="extensions" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="possible_caps" transfer-ownership="none">
          <type name="Caps" c:type="GstCaps*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="data_notify" transfer-ownership="none" scope="call">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="type_register_static_full"
              c:identifier="gst_type_register_static_full">
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="parent_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="type_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="class_size" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="base_init" transfer-ownership="none" scope="call">
          <type name="GObject.BaseInitFunc" c:type="GBaseInitFunc"/>
        </parameter>
        <parameter name="base_finalize" transfer-ownership="none" scope="call">
          <type name="GObject.BaseFinalizeFunc" c:type="GBaseFinalizeFunc"/>
        </parameter>
        <parameter name="class_init" transfer-ownership="none" scope="call">
          <type name="GObject.ClassInitFunc" c:type="GClassInitFunc"/>
        </parameter>
        <parameter name="class_finalize"
                   transfer-ownership="none"
                   scope="call"
                   closure="7">
          <type name="GObject.ClassFinalizeFunc" c:type="GClassFinalizeFunc"/>
        </parameter>
        <parameter name="class_data" transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
        <parameter name="instance_size" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="n_preallocs" transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </parameter>
        <parameter name="instance_init" transfer-ownership="none" scope="call">
          <type name="GObject.InstanceInitFunc" c:type="GInstanceInitFunc"/>
        </parameter>
        <parameter name="value_table" transfer-ownership="none">
          <type name="GObject.TypeValueTable" c:type="GTypeValueTable*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="GObject.TypeFlags" c:type="GTypeFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="update_registry" c:identifier="gst_update_registry">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="uri_construct" c:identifier="gst_uri_construct">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="location" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uri_get_location" c:identifier="gst_uri_get_location">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uri_get_protocol" c:identifier="gst_uri_get_protocol">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uri_has_protocol" c:identifier="gst_uri_has_protocol">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uri_is_valid" c:identifier="gst_uri_is_valid">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uri_protocol_is_supported"
              c:identifier="gst_uri_protocol_is_supported">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="URIType" c:type="GstURIType"/>
        </parameter>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uri_protocol_is_valid"
              c:identifier="gst_uri_protocol_is_valid">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_array_binary_search"
              c:identifier="gst_util_array_binary_search">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="num_elements" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="element_size" transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="search_func" transfer-ownership="none" scope="call">
          <type name="GLib.CompareDataFunc" c:type="GCompareDataFunc"/>
        </parameter>
        <parameter name="mode" transfer-ownership="none">
          <type name="SearchMode" c:type="GstSearchMode"/>
        </parameter>
        <parameter name="search_data" transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_double_to_fraction"
              c:identifier="gst_util_double_to_fraction">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="src" transfer-ownership="none">
          <type name="double" c:type="gdouble"/>
        </parameter>
        <parameter name="dest_n"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </parameter>
        <parameter name="dest_d"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_dump_mem" c:identifier="gst_util_dump_mem">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <array c:type="guchar*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_fraction_add" c:identifier="gst_util_fraction_add">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="a_n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="a_d" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="b_n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="b_d" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="res_n"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </parameter>
        <parameter name="res_d"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_fraction_multiply"
              c:identifier="gst_util_fraction_multiply">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="a_n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="a_d" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="b_n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="b_d" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="res_n"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </parameter>
        <parameter name="res_d"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_fraction_to_double"
              c:identifier="gst_util_fraction_to_double">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="src_n" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="src_d" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="dest"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="double" c:type="gdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_gdouble_to_guint64"
              c:identifier="gst_util_gdouble_to_guint64">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="double" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_get_timestamp" c:identifier="gst_util_get_timestamp">
      <return-value transfer-ownership="full">
        <type name="ClockTime" c:type="GstClockTime"/>
      </return-value>
    </function>
    <function name="util_greatest_common_divisor"
              c:identifier="gst_util_greatest_common_divisor">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_guint64_to_gdouble"
              c:identifier="gst_util_guint64_to_gdouble">
      <return-value transfer-ownership="none">
        <type name="double" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_seqnum_compare"
              c:identifier="gst_util_seqnum_compare">
      <return-value transfer-ownership="none">
        <type name="int32" c:type="gint32"/>
      </return-value>
      <parameters>
        <parameter name="s1" transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </parameter>
        <parameter name="s2" transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_seqnum_next" c:identifier="gst_util_seqnum_next">
      <return-value transfer-ownership="none">
        <type name="uint32" c:type="guint32"/>
      </return-value>
    </function>
    <function name="util_set_object_arg"
              c:identifier="gst_util_set_object_arg">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_set_value_from_string"
              c:identifier="gst_util_set_value_from_string">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value_str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_uint64_scale" c:identifier="gst_util_uint64_scale">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="num" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="denom" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_uint64_scale_ceil"
              c:identifier="gst_util_uint64_scale_ceil">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="num" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="denom" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_uint64_scale_int"
              c:identifier="gst_util_uint64_scale_int">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="num" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="denom" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_uint64_scale_int_ceil"
              c:identifier="gst_util_uint64_scale_int_ceil">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="num" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="denom" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_uint64_scale_int_round"
              c:identifier="gst_util_uint64_scale_int_round">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="num" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="denom" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="util_uint64_scale_round"
              c:identifier="gst_util_uint64_scale_round">
      <return-value transfer-ownership="none">
        <type name="uint64" c:type="guint64"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="num" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="denom" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_array_append_value"
              c:identifier="gst_value_array_append_value">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="append_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_array_get_size"
              c:identifier="gst_value_array_get_size">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_array_get_value"
              c:identifier="gst_value_array_get_value">
      <return-value transfer-ownership="none">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="index" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_array_prepend_value"
              c:identifier="gst_value_array_prepend_value">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="prepend_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_can_compare" c:identifier="gst_value_can_compare">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_can_intersect"
              c:identifier="gst_value_can_intersect">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_can_subtract" c:identifier="gst_value_can_subtract">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="minuend" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="subtrahend" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_can_union" c:identifier="gst_value_can_union">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_compare" c:identifier="gst_value_compare">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_deserialize" c:identifier="gst_value_deserialize">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_dup_mini_object"
              c:identifier="gst_value_dup_mini_object">
      <return-value transfer-ownership="full">
        <type name="MiniObject" c:type="GstMiniObject*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_fraction_multiply"
              c:identifier="gst_value_fraction_multiply">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="product" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="factor1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="factor2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_fraction_subtract"
              c:identifier="gst_value_fraction_subtract">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="minuend" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="subtrahend" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_caps" c:identifier="gst_value_get_caps">
      <return-value transfer-ownership="none">
        <type name="Caps" c:type="GstCaps*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_date" c:identifier="gst_value_get_date">
      <return-value transfer-ownership="none">
        <type name="GLib.Date" c:type="GDate*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_double_range_max"
              c:identifier="gst_value_get_double_range_max">
      <return-value transfer-ownership="none">
        <type name="double" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_double_range_min"
              c:identifier="gst_value_get_double_range_min">
      <return-value transfer-ownership="none">
        <type name="double" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_fourcc" c:identifier="gst_value_get_fourcc">
      <return-value transfer-ownership="none">
        <type name="uint32" c:type="guint32"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_fraction_denominator"
              c:identifier="gst_value_get_fraction_denominator">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_fraction_numerator"
              c:identifier="gst_value_get_fraction_numerator">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_fraction_range_max"
              c:identifier="gst_value_get_fraction_range_max">
      <return-value transfer-ownership="none">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_fraction_range_min"
              c:identifier="gst_value_get_fraction_range_min">
      <return-value transfer-ownership="none">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_int_range_max"
              c:identifier="gst_value_get_int_range_max">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_int_range_min"
              c:identifier="gst_value_get_int_range_min">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_mini_object"
              c:identifier="gst_value_get_mini_object">
      <return-value transfer-ownership="full">
        <type name="MiniObject" c:type="GstMiniObject*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_structure"
              c:identifier="gst_value_get_structure">
      <return-value transfer-ownership="none">
        <type name="Structure" c:type="GstStructure*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_init_and_copy"
              c:identifier="gst_value_init_and_copy">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="src" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_intersect" c:identifier="gst_value_intersect">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_is_fixed" c:identifier="gst_value_is_fixed">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_list_append_value"
              c:identifier="gst_value_list_append_value">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="append_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_list_concat" c:identifier="gst_value_list_concat">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_list_get_size"
              c:identifier="gst_value_list_get_size">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_list_get_value"
              c:identifier="gst_value_list_get_value">
      <return-value transfer-ownership="none">
        <type name="GObject.Value" c:type="GValue*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="index" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_list_prepend_value"
              c:identifier="gst_value_list_prepend_value">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="prepend_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_register" c:identifier="gst_value_register">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="table" transfer-ownership="none">
          <type name="ValueTable" c:type="GstValueTable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_register_intersect_func"
              c:identifier="gst_value_register_intersect_func">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="type1" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="type2" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="ValueIntersectFunc" c:type="GstValueIntersectFunc"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_register_subtract_func"
              c:identifier="gst_value_register_subtract_func">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="minuend_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="subtrahend_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="ValueSubtractFunc" c:type="GstValueSubtractFunc"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_register_union_func"
              c:identifier="gst_value_register_union_func">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="type1" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="type2" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" scope="call">
          <type name="ValueUnionFunc" c:type="GstValueUnionFunc"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_serialize" c:identifier="gst_value_serialize">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_caps" c:identifier="gst_value_set_caps">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="caps" transfer-ownership="none">
          <type name="Caps" c:type="GstCaps*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_date" c:identifier="gst_value_set_date">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="date" transfer-ownership="none">
          <type name="GLib.Date" c:type="GDate*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_double_range"
              c:identifier="gst_value_set_double_range">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <type name="double" c:type="gdouble"/>
        </parameter>
        <parameter name="end" transfer-ownership="none">
          <type name="double" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_fourcc" c:identifier="gst_value_set_fourcc">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="fourcc" transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_fraction" c:identifier="gst_value_set_fraction">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="numerator" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="denominator" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_fraction_range"
              c:identifier="gst_value_set_fraction_range">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="end" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_fraction_range_full"
              c:identifier="gst_value_set_fraction_range_full">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="numerator_start" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="denominator_start" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="numerator_end" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="denominator_end" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_int_range"
              c:identifier="gst_value_set_int_range">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="start" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="end" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_mini_object"
              c:identifier="gst_value_set_mini_object">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="mini_object" transfer-ownership="none">
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_structure"
              c:identifier="gst_value_set_structure">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="structure" transfer-ownership="none">
          <type name="Structure" c:type="GstStructure*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_subtract" c:identifier="gst_value_subtract">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="minuend" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="subtrahend" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_take_mini_object"
              c:identifier="gst_value_take_mini_object">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="mini_object" transfer-ownership="none">
          <type name="MiniObject" c:type="GstMiniObject*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_union" c:identifier="gst_value_union">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="dest" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value1" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="value2" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="version" c:identifier="gst_version">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="major"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="uint" c:type="guint*"/>
        </parameter>
        <parameter name="minor"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="uint" c:type="guint*"/>
        </parameter>
        <parameter name="micro"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="uint" c:type="guint*"/>
        </parameter>
        <parameter name="nano"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="uint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="version_string" c:identifier="gst_version_string">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
  </namespace>
</repository>

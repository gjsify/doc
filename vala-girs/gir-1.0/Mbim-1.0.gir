<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="libmbim-glib"/>
  <c:include name="libmbim-glib.h"/>
  <namespace name="Mbim"
             version="1.0"
             shared-library="libmbim-glib.so.4"
             c:identifier-prefixes="MBIM,Mbim"
             c:symbol-prefixes="mbim_">
    <alias name="AtdsProviderArray" c:type="MbimAtdsProviderArray">
      <doc xml:space="preserve"
           filename="generated/mbim-atds.h"
           line="60">A NULL-terminated array of MbimAtdsProvider elements.</doc>
      <source-position filename="generated/mbim-atds.h" line="67"/>
      <type name="AtdsProvider" c:type="MbimAtdsProvider*"/>
    </alias>
    <alias name="DeprecatedCidBasicConnect"
           c:type="MbimDeprecatedCidBasicConnect">
      <source-position filename="mbim-compat.h" line="67"/>
      <type name="gint" c:type="int"/>
    </alias>
    <alias name="DeprecatedRegistrationFlag"
           c:type="MbimDeprecatedRegistrationFlag">
      <source-position filename="mbim-compat.h" line="50"/>
      <type name="gint" c:type="int"/>
    </alias>
    <alias name="DeviceServiceElementArray"
           c:type="MbimDeviceServiceElementArray">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="253">A NULL-terminated array of MbimDeviceServiceElement elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="260"/>
      <type name="DeviceServiceElement" c:type="MbimDeviceServiceElement*"/>
    </alias>
    <alias name="EventEntryArray" c:type="MbimEventEntryArray">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="289">A NULL-terminated array of MbimEventEntry elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="296"/>
      <type name="EventEntry" c:type="MbimEventEntry*"/>
    </alias>
    <alias name="IPv4ElementArray" c:type="MbimIPv4ElementArray">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="179">A NULL-terminated array of MbimIPv4Element elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="186"/>
      <type name="IPv4Element" c:type="MbimIPv4Element*"/>
    </alias>
    <alias name="IPv6ElementArray" c:type="MbimIPv6ElementArray">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="213">A NULL-terminated array of MbimIPv6Element elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="220"/>
      <type name="IPv6Element" c:type="MbimIPv6Element*"/>
    </alias>
    <alias name="LteAttachConfigurationArray"
           c:type="MbimLteAttachConfigurationArray">
      <doc xml:space="preserve"
           filename="generated/mbim-ms-basic-connect-extensions.h"
           line="94">A NULL-terminated array of MbimLteAttachConfiguration elements.</doc>
      <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                       line="101"/>
      <type name="LteAttachConfiguration"
            c:type="MbimLteAttachConfiguration*"/>
    </alias>
    <alias name="PacketFilterArray" c:type="MbimPacketFilterArray">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="325">A NULL-terminated array of MbimPacketFilter elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="332"/>
      <type name="PacketFilter" c:type="MbimPacketFilter*"/>
    </alias>
    <alias name="PhonebookEntryArray" c:type="MbimPhonebookEntryArray">
      <doc xml:space="preserve"
           filename="generated/mbim-phonebook.h"
           line="54">A NULL-terminated array of MbimPhonebookEntry elements.</doc>
      <source-position filename="generated/mbim-phonebook.h" line="61"/>
      <type name="PhonebookEntry" c:type="MbimPhonebookEntry*"/>
    </alias>
    <alias name="ProviderArray" c:type="MbimProviderArray">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="101">A NULL-terminated array of MbimProvider elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="108"/>
      <type name="Provider" c:type="MbimProvider*"/>
    </alias>
    <alias name="ProvisionedContextElementArray"
           c:type="MbimProvisionedContextElementArray">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="145">A NULL-terminated array of MbimProvisionedContextElement elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="152"/>
      <type name="ProvisionedContextElement"
            c:type="MbimProvisionedContextElement*"/>
    </alias>
    <alias name="SmsCdmaReadRecordArray" c:type="MbimSmsCdmaReadRecordArray">
      <doc xml:space="preserve"
           filename="generated/mbim-sms.h"
           line="104">A NULL-terminated array of MbimSmsCdmaReadRecord elements.</doc>
      <source-position filename="generated/mbim-sms.h" line="111"/>
      <type name="SmsCdmaReadRecord" c:type="MbimSmsCdmaReadRecord*"/>
    </alias>
    <alias name="SmsPduReadRecordArray" c:type="MbimSmsPduReadRecordArray">
      <doc xml:space="preserve"
           filename="generated/mbim-sms.h"
           line="56">A NULL-terminated array of MbimSmsPduReadRecord elements.</doc>
      <source-position filename="generated/mbim-sms.h" line="63"/>
      <type name="SmsPduReadRecord" c:type="MbimSmsPduReadRecord*"/>
    </alias>
    <enumeration name="ActivationCommand"
                 version="1.0"
                 glib:type-name="MbimActivationCommand"
                 glib:get-type="mbim_activation_command_get_type"
                 c:type="MbimActivationCommand">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="619">Activation Command.</doc>
      <member name="deactivate"
              value="0"
              c:identifier="MBIM_ACTIVATION_COMMAND_DEACTIVATE"
              glib:nick="deactivate">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="621">Deactivate.</doc>
      </member>
      <member name="activate"
              value="1"
              c:identifier="MBIM_ACTIVATION_COMMAND_ACTIVATE"
              glib:nick="activate">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="622">Activate.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_activation_command_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1317">Gets the nickname string for the #MbimActivationCommand specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1327"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1323">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1319">a MbimActivationCommand.</doc>
            <type name="ActivationCommand" c:type="MbimActivationCommand"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ActivationState"
                 version="1.0"
                 glib:type-name="MbimActivationState"
                 glib:get-type="mbim_activation_state_get_type"
                 c:type="MbimActivationState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="685">Activation State.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_ACTIVATION_STATE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="687">Unknown.</doc>
      </member>
      <member name="activated"
              value="1"
              c:identifier="MBIM_ACTIVATION_STATE_ACTIVATED"
              glib:nick="activated">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="688">Activated.</doc>
      </member>
      <member name="activating"
              value="2"
              c:identifier="MBIM_ACTIVATION_STATE_ACTIVATING"
              glib:nick="activating">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="689">Activating.</doc>
      </member>
      <member name="deactivated"
              value="3"
              c:identifier="MBIM_ACTIVATION_STATE_DEACTIVATED"
              glib:nick="deactivated">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="690">Deactivated.</doc>
      </member>
      <member name="deactivating"
              value="4"
              c:identifier="MBIM_ACTIVATION_STATE_DEACTIVATING"
              glib:nick="deactivating">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="691">Deactivating.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_activation_state_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1453">Gets the nickname string for the #MbimActivationState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1463"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1459">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1455">a MbimActivationState.</doc>
            <type name="ActivationState" c:type="MbimActivationState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="AtdsProvider" c:type="MbimAtdsProvider" version="1.16">
      <source-position filename="generated/mbim-atds.h" line="58"/>
      <field name="provider_id" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="42">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="provider_state" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="43">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="provider_name" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="44">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="plmn_mode" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="45">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="rssi" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="46">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="error_rate" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="47">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_atds_provider_array_free"
                version="1.16">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="68">Frees the memory allocated for the array of #MbimAtdsProviders.</doc>
        <source-position filename="generated/mbim-atds.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="70">a #NULL terminated array of #MbimAtdsProvider structs.</doc>
            <type name="AtdsProviderArray" c:type="MbimAtdsProviderArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="AtdsProviderPlmnMode"
                 version="1.16"
                 glib:type-name="MbimAtdsProviderPlmnMode"
                 glib:get-type="mbim_atds_provider_plmn_mode_get_type"
                 c:type="MbimAtdsProviderPlmnMode">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1115">Provider PLMN mode.</doc>
      <member name="gsm"
              value="0"
              c:identifier="MBIM_ATDS_PROVIDER_PLMN_MODE_GSM"
              glib:nick="gsm">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1117">GSM.</doc>
      </member>
      <member name="utran"
              value="6"
              c:identifier="MBIM_ATDS_PROVIDER_PLMN_MODE_UTRAN"
              glib:nick="utran">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1118">UTRAN (UMTS).</doc>
      </member>
      <member name="lte"
              value="7"
              c:identifier="MBIM_ATDS_PROVIDER_PLMN_MODE_LTE"
              glib:nick="lte">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1119">LTE.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_atds_provider_plmn_mode_get_string"
                version="1.16">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2201">Gets the nickname string for the #MbimAtdsProviderPlmnMode specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2211"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2207">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2203">a MbimAtdsProviderPlmnMode.</doc>
            <type name="AtdsProviderPlmnMode"
                  c:type="MbimAtdsProviderPlmnMode"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="AtdsRatMode"
                 version="1.16"
                 glib:type-name="MbimAtdsRatMode"
                 glib:get-type="mbim_atds_rat_mode_get_type"
                 c:type="MbimAtdsRatMode">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1094">RAT mode preferences.</doc>
      <member name="automatic"
              value="0"
              c:identifier="MBIM_ATDS_RAT_MODE_AUTOMATIC"
              glib:nick="automatic">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1096">Automatic.</doc>
      </member>
      <member name="2g_only"
              value="1"
              c:identifier="MBIM_ATDS_RAT_MODE_2G_ONLY"
              glib:nick="2g-only">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1097">2G only.</doc>
      </member>
      <member name="3g_only"
              value="2"
              c:identifier="MBIM_ATDS_RAT_MODE_3G_ONLY"
              glib:nick="3g-only">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1098">3G only.</doc>
      </member>
      <member name="4g_only"
              value="3"
              c:identifier="MBIM_ATDS_RAT_MODE_4G_ONLY"
              glib:nick="4g-only">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1099">4G only.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_atds_rat_mode_get_string"
                version="1.16">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2167">Gets the nickname string for the #MbimAtdsRatMode specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2173">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2169">a MbimAtdsRatMode.</doc>
            <type name="AtdsRatMode" c:type="MbimAtdsRatMode"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="AuthProtocol"
                 version="1.0"
                 glib:type-name="MbimAuthProtocol"
                 glib:get-type="mbim_auth_protocol_get_type"
                 c:type="MbimAuthProtocol">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="647">Auth Protocol.</doc>
      <member name="none"
              value="0"
              c:identifier="MBIM_AUTH_PROTOCOL_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="649">None.</doc>
      </member>
      <member name="pap"
              value="1"
              c:identifier="MBIM_AUTH_PROTOCOL_PAP"
              glib:nick="pap">
        <doc xml:space="preserve" filename="mbim-enums.h" line="650">Pap.</doc>
      </member>
      <member name="chap"
              value="2"
              c:identifier="MBIM_AUTH_PROTOCOL_CHAP"
              glib:nick="chap">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="651">Chap.</doc>
      </member>
      <member name="mschapv2"
              value="3"
              c:identifier="MBIM_AUTH_PROTOCOL_MSCHAPV2"
              glib:nick="mschapv2">
        <doc xml:space="preserve" filename="mbim-enums.h" line="652">V2.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_auth_protocol_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1385">Gets the nickname string for the #MbimAuthProtocol specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1395"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1391">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1387">a MbimAuthProtocol.</doc>
            <type name="AuthProtocol" c:type="MbimAuthProtocol"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <function-macro name="CHECK_VERSION"
                    c:identifier="MBIM_CHECK_VERSION"
                    version="1.2"
                    introspectable="0">
      <source-position filename="mbim-version.h" line="73"/>
      <parameters>
        <parameter name="major">
          <doc xml:space="preserve"
               filename="mbim-version.h"
               line="64">major version (e.g. 1 for version 1.2.5)</doc>
        </parameter>
        <parameter name="minor">
          <doc xml:space="preserve"
               filename="mbim-version.h"
               line="65">minor version (e.g. 2 for version 1.2.5)</doc>
        </parameter>
        <parameter name="micro">
          <doc xml:space="preserve"
               filename="mbim-version.h"
               line="66">micro version (e.g. 5 for version 1.2.5)</doc>
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="CellularClass"
              version="1.0"
              glib:type-name="MbimCellularClass"
              glib:get-type="mbim_cellular_class_get_type"
              c:type="MbimCellularClass">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="62">Cellular class.</doc>
      <member name="gsm"
              value="1"
              c:identifier="MBIM_CELLULAR_CLASS_GSM"
              glib:nick="gsm">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="64">Device is 3GPP.</doc>
      </member>
      <member name="cdma"
              value="2"
              c:identifier="MBIM_CELLULAR_CLASS_CDMA"
              glib:nick="cdma">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="65">Device is 3GPP2.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_cellular_class_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="549">Builds a string containing a comma-separated list of nicknames for
each #MbimCellularClass in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="560"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="556">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="551">bitmask of MbimCellularClass values.</doc>
            <type name="CellularClass" c:type="MbimCellularClass"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <enumeration name="CidAtds"
                 version="1.16"
                 glib:type-name="MbimCidAtds"
                 glib:get-type="mbim_cid_atds_get_type"
                 c:type="MbimCidAtds">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="264">MBIM commands in the %MBIM_SERVICE_ATDS service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_ATDS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="266">Unknown command.</doc>
      </member>
      <member name="signal"
              value="1"
              c:identifier="MBIM_CID_ATDS_SIGNAL"
              glib:nick="signal">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="267">Radio signal information.</doc>
      </member>
      <member name="location"
              value="2"
              c:identifier="MBIM_CID_ATDS_LOCATION"
              glib:nick="location">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="268">Cell location information.</doc>
      </member>
      <member name="operators"
              value="3"
              c:identifier="MBIM_CID_ATDS_OPERATORS"
              glib:nick="operators">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="269">Operator selection.</doc>
      </member>
      <member name="rat"
              value="4"
              c:identifier="MBIM_CID_ATDS_RAT"
              glib:nick="rat">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="270">Radio Access Technology selection.</doc>
      </member>
      <member name="register_state"
              value="9"
              c:identifier="MBIM_CID_ATDS_REGISTER_STATE"
              glib:nick="register-state">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="271">Registration state.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_atds_get_string"
                version="1.16">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="397">Gets the nickname string for the #MbimCidAtds specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="407"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="403">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="399">a MbimCidAtds.</doc>
            <type name="CidAtds" c:type="MbimCidAtds"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidAuth"
                 version="1.0"
                 glib:type-name="MbimCidAuth"
                 glib:get-type="mbim_cid_auth_get_type"
                 c:type="MbimCidAuth">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="176">MBIM commands in the %MBIM_SERVICE_AUTH service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_AUTH_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="178">Unknow command</doc>
      </member>
      <member name="aka"
              value="1"
              c:identifier="MBIM_CID_AUTH_AKA"
              glib:nick="aka">
        <doc xml:space="preserve" filename="mbim-cid.h" line="179">AKA.</doc>
      </member>
      <member name="akap"
              value="2"
              c:identifier="MBIM_CID_AUTH_AKAP"
              glib:nick="akap">
        <doc xml:space="preserve" filename="mbim-cid.h" line="180">AKAP.</doc>
      </member>
      <member name="sim"
              value="3"
              c:identifier="MBIM_CID_AUTH_SIM"
              glib:nick="sim">
        <doc xml:space="preserve" filename="mbim-cid.h" line="181">SIM.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_auth_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="193">Gets the nickname string for the #MbimCidAuth specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="199">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="195">a MbimCidAuth.</doc>
            <type name="CidAuth" c:type="MbimCidAuth"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidBasicConnect"
                 version="1.0"
                 glib:type-name="MbimCidBasicConnect"
                 glib:get-type="mbim_cid_basic_connect_get_type"
                 c:type="MbimCidBasicConnect">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="45">MBIM commands in the %MBIM_SERVICE_BASIC_CONNECT service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_BASIC_CONNECT_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="47">Unknown command.</doc>
      </member>
      <member name="device_caps"
              value="1"
              c:identifier="MBIM_CID_BASIC_CONNECT_DEVICE_CAPS"
              glib:nick="device-caps">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="48">Device capabilities.</doc>
      </member>
      <member name="subscriber_ready_status"
              value="2"
              c:identifier="MBIM_CID_BASIC_CONNECT_SUBSCRIBER_READY_STATUS"
              glib:nick="subscriber-ready-status">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="49">Subscriber ready status.</doc>
      </member>
      <member name="radio_state"
              value="3"
              c:identifier="MBIM_CID_BASIC_CONNECT_RADIO_STATE"
              glib:nick="radio-state">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="50">Radio state.</doc>
      </member>
      <member name="pin"
              value="4"
              c:identifier="MBIM_CID_BASIC_CONNECT_PIN"
              glib:nick="pin">
        <doc xml:space="preserve" filename="mbim-cid.h" line="51">PIN.</doc>
      </member>
      <member name="pin_list"
              value="5"
              c:identifier="MBIM_CID_BASIC_CONNECT_PIN_LIST"
              glib:nick="pin-list">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="52">PIN list.</doc>
      </member>
      <member name="home_provider"
              value="6"
              c:identifier="MBIM_CID_BASIC_CONNECT_HOME_PROVIDER"
              glib:nick="home-provider">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="53">Home provider.</doc>
      </member>
      <member name="preferred_providers"
              value="7"
              c:identifier="MBIM_CID_BASIC_CONNECT_PREFERRED_PROVIDERS"
              glib:nick="preferred-providers">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="54">Preferred providers.</doc>
      </member>
      <member name="visible_providers"
              value="8"
              c:identifier="MBIM_CID_BASIC_CONNECT_VISIBLE_PROVIDERS"
              glib:nick="visible-providers">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="55">Visible providers.</doc>
      </member>
      <member name="register_state"
              value="9"
              c:identifier="MBIM_CID_BASIC_CONNECT_REGISTER_STATE"
              glib:nick="register-state">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="56">Register state.</doc>
      </member>
      <member name="packet_service"
              value="10"
              c:identifier="MBIM_CID_BASIC_CONNECT_PACKET_SERVICE"
              glib:nick="packet-service">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="57">Packet service.</doc>
      </member>
      <member name="signal_state"
              value="11"
              c:identifier="MBIM_CID_BASIC_CONNECT_SIGNAL_STATE"
              glib:nick="signal-state">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="58">Signal state.</doc>
      </member>
      <member name="connect"
              value="12"
              c:identifier="MBIM_CID_BASIC_CONNECT_CONNECT"
              glib:nick="connect">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="59">Connect.</doc>
      </member>
      <member name="provisioned_contexts"
              value="13"
              c:identifier="MBIM_CID_BASIC_CONNECT_PROVISIONED_CONTEXTS"
              glib:nick="provisioned-contexts">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="60">Provisioned contexts.</doc>
      </member>
      <member name="service_activation"
              value="14"
              c:identifier="MBIM_CID_BASIC_CONNECT_SERVICE_ACTIVATION"
              glib:nick="service-activation">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="61">Service activation.</doc>
      </member>
      <member name="ip_configuration"
              value="15"
              c:identifier="MBIM_CID_BASIC_CONNECT_IP_CONFIGURATION"
              glib:nick="ip-configuration">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="62">IP configuration.</doc>
      </member>
      <member name="device_services"
              value="16"
              c:identifier="MBIM_CID_BASIC_CONNECT_DEVICE_SERVICES"
              glib:nick="device-services">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="63">Device services.</doc>
      </member>
      <member name="device_service_subscribe_list"
              value="19"
              c:identifier="MBIM_CID_BASIC_CONNECT_DEVICE_SERVICE_SUBSCRIBE_LIST"
              glib:nick="device-service-subscribe-list">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="64">Device service subscribe list. Since 1.8.</doc>
      </member>
      <member name="packet_statistics"
              value="20"
              c:identifier="MBIM_CID_BASIC_CONNECT_PACKET_STATISTICS"
              glib:nick="packet-statistics">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="65">Packet statistics.</doc>
      </member>
      <member name="network_idle_hint"
              value="21"
              c:identifier="MBIM_CID_BASIC_CONNECT_NETWORK_IDLE_HINT"
              glib:nick="network-idle-hint">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="66">Network idle hint.</doc>
      </member>
      <member name="emergency_mode"
              value="22"
              c:identifier="MBIM_CID_BASIC_CONNECT_EMERGENCY_MODE"
              glib:nick="emergency-mode">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="67">Emergency mode.</doc>
      </member>
      <member name="ip_packet_filters"
              value="23"
              c:identifier="MBIM_CID_BASIC_CONNECT_IP_PACKET_FILTERS"
              glib:nick="ip-packet-filters">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="68">IP packet filters.</doc>
      </member>
      <member name="multicarrier_providers"
              value="24"
              c:identifier="MBIM_CID_BASIC_CONNECT_MULTICARRIER_PROVIDERS"
              glib:nick="multicarrier-providers">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="69">Multicarrier providers.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_basic_connect_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="23">Gets the nickname string for the #MbimCidBasicConnect specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="29">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="25">a MbimCidBasicConnect.</doc>
            <type name="CidBasicConnect" c:type="MbimCidBasicConnect"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidDss"
                 version="1.0"
                 glib:type-name="MbimCidDss"
                 glib:get-type="mbim_cid_dss_get_type"
                 c:type="MbimCidDss">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="194">MBIM commands in the %MBIM_SERVICE_DSS service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_DSS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="196">Unknown command.</doc>
      </member>
      <member name="connect"
              value="1"
              c:identifier="MBIM_CID_DSS_CONNECT"
              glib:nick="connect">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="197">Connect.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_dss_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="227">Gets the nickname string for the #MbimCidDss specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="233">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="229">a MbimCidDss.</doc>
            <type name="CidDss" c:type="MbimCidDss"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidIntelFirmwareUpdate"
                 version="1.16"
                 glib:type-name="MbimCidIntelFirmwareUpdate"
                 glib:get-type="mbim_cid_intel_firmware_update_get_type"
                 c:type="MbimCidIntelFirmwareUpdate">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="286">MBIM commands in the %MBIM_SERVICE_INTEL_FIRMWARE_UPDATE service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_INTEL_FIRMWARE_UPDATE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="288">Unknown command.</doc>
      </member>
      <member name="modem_reboot"
              value="1"
              c:identifier="MBIM_CID_INTEL_FIRMWARE_UPDATE_MODEM_REBOOT"
              glib:nick="modem-reboot">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="289">Reboot modem for firmware update.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_intel_firmware_update_get_string"
                version="1.16">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="431">Gets the nickname string for the #MbimCidIntelFirmwareUpdate specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="441"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="437">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="433">a MbimCidIntelFirmwareUpdate.</doc>
            <type name="CidIntelFirmwareUpdate"
                  c:type="MbimCidIntelFirmwareUpdate"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidMsBasicConnectExtensions"
                 version="1.18"
                 glib:type-name="MbimCidMsBasicConnectExtensions"
                 glib:get-type="mbim_cid_ms_basic_connect_extensions_get_type"
                 c:type="MbimCidMsBasicConnectExtensions">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="300">MBIM commands in the %MBIM_SERVICE_MS_BASIC_CONNECT_EXTENSIONS service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="302">Unknown command.</doc>
      </member>
      <member name="provisioned_contexts"
              value="1"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_PROVISIONED_CONTEXTS"
              glib:nick="provisioned-contexts">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="303">Provisioned contexts (v2).</doc>
      </member>
      <member name="network_blacklist"
              value="2"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_NETWORK_BLACKLIST"
              glib:nick="network-blacklist">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="304">Network blacklist.</doc>
      </member>
      <member name="lte_attach_configuration"
              value="3"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_LTE_ATTACH_CONFIGURATION"
              glib:nick="lte-attach-configuration">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="305">LTE attach configuration.</doc>
      </member>
      <member name="lte_attach_status"
              value="4"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_LTE_ATTACH_STATUS"
              glib:nick="lte-attach-status">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="306">LTE attach status.</doc>
      </member>
      <member name="sys_caps"
              value="5"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_SYS_CAPS"
              glib:nick="sys-caps">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="307">System capabilities.</doc>
      </member>
      <member name="device_caps"
              value="6"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_DEVICE_CAPS"
              glib:nick="device-caps">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="308">Device capabilities (v2).</doc>
      </member>
      <member name="device_slot_mappings"
              value="7"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_DEVICE_SLOT_MAPPINGS"
              glib:nick="device-slot-mappings">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="309">Device slot mappings.</doc>
      </member>
      <member name="slot_info_status"
              value="8"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_SLOT_INFO_STATUS"
              glib:nick="slot-info-status">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="310">Slot info status.</doc>
      </member>
      <member name="pco"
              value="9"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_PCO"
              glib:nick="pco">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="311">Protocol configuration operations (PCO).</doc>
      </member>
      <member name="device_reset"
              value="10"
              c:identifier="MBIM_CID_MS_BASIC_CONNECT_EXTENSIONS_DEVICE_RESET"
              glib:nick="device-reset">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="312">Device reset.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_ms_basic_connect_extensions_get_string"
                version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="465">Gets the nickname string for the #MbimCidMsBasicConnectExtensions specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="475"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="471">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="467">a MbimCidMsBasicConnectExtensions.</doc>
            <type name="CidMsBasicConnectExtensions"
                  c:type="MbimCidMsBasicConnectExtensions"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidMsFirmwareId"
                 version="1.8"
                 glib:type-name="MbimCidMsFirmwareId"
                 glib:get-type="mbim_cid_ms_firmware_id_get_type"
                 c:type="MbimCidMsFirmwareId">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="208">MBIM commands in the %MBIM_SERVICE_MS_FIRMWARE_ID service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_MS_FIRMWARE_ID_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="210">Unknown command.</doc>
      </member>
      <member name="get"
              value="1"
              c:identifier="MBIM_CID_MS_FIRMWARE_ID_GET"
              glib:nick="get">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="211">Get Firmware ID.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_ms_firmware_id_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="261">Gets the nickname string for the #MbimCidMsFirmwareId specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="271"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="267">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="263">a MbimCidMsFirmwareId.</doc>
            <type name="CidMsFirmwareId" c:type="MbimCidMsFirmwareId"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidMsHostShutdown"
                 version="1.8"
                 glib:type-name="MbimCidMsHostShutdown"
                 glib:get-type="mbim_cid_ms_host_shutdown_get_type"
                 c:type="MbimCidMsHostShutdown">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="222">MBIM commands in the %MBIM_SERVICE_MS_HOST_SHUTDOWN service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_MS_HOST_SHUTDOWN_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="224">Unknown command.</doc>
      </member>
      <member name="notify"
              value="1"
              c:identifier="MBIM_CID_MS_HOST_SHUTDOWN_NOTIFY"
              glib:nick="notify">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="225">Notify that the host is shutting down.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_ms_host_shutdown_get_string"
                version="1.8">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="295">Gets the nickname string for the #MbimCidMsHostShutdown specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="305"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="301">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="297">a MbimCidMsHostShutdown.</doc>
            <type name="CidMsHostShutdown" c:type="MbimCidMsHostShutdown"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidPhonebook"
                 version="1.0"
                 glib:type-name="MbimCidPhonebook"
                 glib:get-type="mbim_cid_phonebook_get_type"
                 c:type="MbimCidPhonebook">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="138">MBIM commands in the %MBIM_SERVICE_PHONEBOOK service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_PHONEBOOK_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="140">Unknown command.</doc>
      </member>
      <member name="configuration"
              value="1"
              c:identifier="MBIM_CID_PHONEBOOK_CONFIGURATION"
              glib:nick="configuration">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="141">Configuration.</doc>
      </member>
      <member name="read"
              value="2"
              c:identifier="MBIM_CID_PHONEBOOK_READ"
              glib:nick="read">
        <doc xml:space="preserve" filename="mbim-cid.h" line="142">Read.</doc>
      </member>
      <member name="delete"
              value="3"
              c:identifier="MBIM_CID_PHONEBOOK_DELETE"
              glib:nick="delete">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="143">Delete.</doc>
      </member>
      <member name="write"
              value="4"
              c:identifier="MBIM_CID_PHONEBOOK_WRITE"
              glib:nick="write">
        <doc xml:space="preserve" filename="mbim-cid.h" line="144">Write.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_phonebook_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="125">Gets the nickname string for the #MbimCidPhonebook specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="131">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="127">a MbimCidPhonebook.</doc>
            <type name="CidPhonebook" c:type="MbimCidPhonebook"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidProxyControl"
                 version="1.10"
                 glib:type-name="MbimCidProxyControl"
                 glib:get-type="mbim_cid_proxy_control_get_type"
                 c:type="MbimCidProxyControl">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="236">MBIM commands in the %MBIM_SERVICE_PROXY_CONTROL service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_PROXY_CONTROL_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="238">Unknown command.</doc>
      </member>
      <member name="configuration"
              value="1"
              c:identifier="MBIM_CID_PROXY_CONTROL_CONFIGURATION"
              glib:nick="configuration">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="239">Configuration.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_proxy_control_get_string"
                version="1.10">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="329">Gets the nickname string for the #MbimCidProxyControl specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="339"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="335">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="331">a MbimCidProxyControl.</doc>
            <type name="CidProxyControl" c:type="MbimCidProxyControl"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidQmi"
                 version="1.14"
                 glib:type-name="MbimCidQmi"
                 glib:get-type="mbim_cid_qmi_get_type"
                 c:type="MbimCidQmi">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="250">MBIM commands in the %MBIM_SERVICE_QMI service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_QMI_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="252">Unknown command.</doc>
      </member>
      <member name="msg"
              value="1"
              c:identifier="MBIM_CID_QMI_MSG"
              glib:nick="msg">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="253">Send QMI request and receive QMI response.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_qmi_get_string"
                version="1.14">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="363">Gets the nickname string for the #MbimCidQmi specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="373"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="369">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="365">a MbimCidQmi.</doc>
            <type name="CidQmi" c:type="MbimCidQmi"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidSms"
                 version="1.0"
                 glib:type-name="MbimCidSms"
                 glib:get-type="mbim_cid_sms_get_type"
                 c:type="MbimCidSms">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="102">MBIM commands in the %MBIM_SERVICE_SMS service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_SMS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="104">Unknown command.</doc>
      </member>
      <member name="configuration"
              value="1"
              c:identifier="MBIM_CID_SMS_CONFIGURATION"
              glib:nick="configuration">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="105">SMS configuration.</doc>
      </member>
      <member name="read"
              value="2"
              c:identifier="MBIM_CID_SMS_READ"
              glib:nick="read">
        <doc xml:space="preserve" filename="mbim-cid.h" line="106">Read.</doc>
      </member>
      <member name="send"
              value="3"
              c:identifier="MBIM_CID_SMS_SEND"
              glib:nick="send">
        <doc xml:space="preserve" filename="mbim-cid.h" line="107">Send.</doc>
      </member>
      <member name="delete"
              value="4"
              c:identifier="MBIM_CID_SMS_DELETE"
              glib:nick="delete">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="108">Delete.</doc>
      </member>
      <member name="message_store_status"
              value="5"
              c:identifier="MBIM_CID_SMS_MESSAGE_STORE_STATUS"
              glib:nick="message-store-status">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="109">Store message status.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_sms_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="57">Gets the nickname string for the #MbimCidSms specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="63">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="59">a MbimCidSms.</doc>
            <type name="CidSms" c:type="MbimCidSms"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidStk"
                 version="1.0"
                 glib:type-name="MbimCidStk"
                 glib:get-type="mbim_cid_stk_get_type"
                 c:type="MbimCidStk">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="158">MBIM commands in the %MBIM_SERVICE_STK service.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_CID_STK_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="160">Unknown command.</doc>
      </member>
      <member name="pac"
              value="1"
              c:identifier="MBIM_CID_STK_PAC"
              glib:nick="pac">
        <doc xml:space="preserve" filename="mbim-cid.h" line="161">PAC.</doc>
      </member>
      <member name="terminal_response"
              value="2"
              c:identifier="MBIM_CID_STK_TERMINAL_RESPONSE"
              glib:nick="terminal-response">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="162">Terminal response.</doc>
      </member>
      <member name="envelope"
              value="3"
              c:identifier="MBIM_CID_STK_ENVELOPE"
              glib:nick="envelope">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="163">Envelope.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_stk_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="159">Gets the nickname string for the #MbimCidStk specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="165">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="161">a MbimCidStk.</doc>
            <type name="CidStk" c:type="MbimCidStk"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CidUssd"
                 version="1.0"
                 glib:type-name="MbimCidUssd"
                 glib:get-type="mbim_cid_ussd_get_type"
                 c:type="MbimCidUssd">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="124">MBIM commands in the %MBIM_SERVICE_USSD service.</doc>
      <member name="ussd_unknown"
              value="0"
              c:identifier="MBIM_CID_USSD_UNKNOWN"
              glib:nick="ussd-unknown">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="126">Unknown command. Since 1.4.</doc>
      </member>
      <member name="ussd"
              value="1"
              c:identifier="MBIM_CID_USSD"
              glib:nick="ussd">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="127">USSD operation.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_cid_ussd_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="91">Gets the nickname string for the #MbimCidUssd specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="97">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="93">a MbimCidUssd.</doc>
            <type name="CidUssd" c:type="MbimCidUssd"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="Compression"
                 version="1.0"
                 glib:type-name="MbimCompression"
                 glib:get-type="mbim_compression_get_type"
                 c:type="MbimCompression">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="633">Compression.</doc>
      <member name="none"
              value="0"
              c:identifier="MBIM_COMPRESSION_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="635">None.</doc>
      </member>
      <member name="enable"
              value="1"
              c:identifier="MBIM_COMPRESSION_ENABLE"
              glib:nick="enable">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="636">Enable.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_compression_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1351">Gets the nickname string for the #MbimCompression specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1361"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1357">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1353">a MbimCompression.</doc>
            <type name="Compression" c:type="MbimCompression"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ContextIpType"
                 version="1.0"
                 glib:type-name="MbimContextIpType"
                 glib:get-type="mbim_context_ip_type_get_type"
                 c:type="MbimContextIpType">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="665">Context IP Type.</doc>
      <member name="default"
              value="0"
              c:identifier="MBIM_CONTEXT_IP_TYPE_DEFAULT"
              glib:nick="default">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="667">It is up to the function to decide, the host does not care.</doc>
      </member>
      <member name="ipv4"
              value="1"
              c:identifier="MBIM_CONTEXT_IP_TYPE_IPV4"
              glib:nick="ipv4">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="668">IPv4 context.</doc>
      </member>
      <member name="ipv6"
              value="2"
              c:identifier="MBIM_CONTEXT_IP_TYPE_IPV6"
              glib:nick="ipv6">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="669">IPv6 context.</doc>
      </member>
      <member name="ipv4v6"
              value="3"
              c:identifier="MBIM_CONTEXT_IP_TYPE_IPV4V6"
              glib:nick="ipv4v6">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="670">The context is IPv4, IPv6 or dualstack IPv4v6.</doc>
      </member>
      <member name="ipv4_and_ipv6"
              value="4"
              c:identifier="MBIM_CONTEXT_IP_TYPE_IPV4_AND_IPV6"
              glib:nick="ipv4-and-ipv6">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="671">Both an IPv4 and an IPv6 context.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_context_ip_type_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1419">Gets the nickname string for the #MbimContextIpType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1429"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1425">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1421">a MbimContextIpType.</doc>
            <type name="ContextIpType" c:type="MbimContextIpType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ContextSource"
                 version="1.18"
                 glib:type-name="MbimContextSource"
                 glib:get-type="mbim_context_source_get_type"
                 c:type="MbimContextSource">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1181">Source of context creation.</doc>
      <member name="admin"
              value="0"
              c:identifier="MBIM_CONTEXT_SOURCE_ADMIN"
              glib:nick="admin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1183">Context created by enterprise IT.</doc>
      </member>
      <member name="user"
              value="1"
              c:identifier="MBIM_CONTEXT_SOURCE_USER"
              glib:nick="user">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1184">Context created by user.</doc>
      </member>
      <member name="operator"
              value="2"
              c:identifier="MBIM_CONTEXT_SOURCE_OPERATOR"
              glib:nick="operator">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1185">Context created by operator.</doc>
      </member>
      <member name="modem"
              value="3"
              c:identifier="MBIM_CONTEXT_SOURCE_MODEM"
              glib:nick="modem">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1186">Context created by modem manufacturer.</doc>
      </member>
      <member name="device"
              value="4"
              c:identifier="MBIM_CONTEXT_SOURCE_DEVICE"
              glib:nick="device">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1187">Context created by OS APN database.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_context_source_get_string"
                version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2337">Gets the nickname string for the #MbimContextSource specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2347"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2343">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2339">a MbimContextSource.</doc>
            <type name="ContextSource" c:type="MbimContextSource"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ContextType"
                 version="1.0"
                 glib:type-name="MbimContextType"
                 glib:get-type="mbim_context_type_get_type"
                 c:type="MbimContextType">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="399">Enumeration of the generic MBIM context types.</doc>
      <member name="invalid"
              value="0"
              c:identifier="MBIM_CONTEXT_TYPE_INVALID"
              glib:nick="invalid">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="401">Invalid context type.</doc>
      </member>
      <member name="none"
              value="1"
              c:identifier="MBIM_CONTEXT_TYPE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="402">Context not yet provisioned.</doc>
      </member>
      <member name="internet"
              value="2"
              c:identifier="MBIM_CONTEXT_TYPE_INTERNET"
              glib:nick="internet">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="403">Connection to the Internet.</doc>
      </member>
      <member name="vpn"
              value="3"
              c:identifier="MBIM_CONTEXT_TYPE_VPN"
              glib:nick="vpn">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="404">Connection to a VPN.</doc>
      </member>
      <member name="voice"
              value="4"
              c:identifier="MBIM_CONTEXT_TYPE_VOICE"
              glib:nick="voice">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="405">Connection to a VoIP service.</doc>
      </member>
      <member name="video_share"
              value="5"
              c:identifier="MBIM_CONTEXT_TYPE_VIDEO_SHARE"
              glib:nick="video-share">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="406">Connection to a video sharing service.</doc>
      </member>
      <member name="purchase"
              value="6"
              c:identifier="MBIM_CONTEXT_TYPE_PURCHASE"
              glib:nick="purchase">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="407">Connection to an over-the-air activation site.</doc>
      </member>
      <member name="ims"
              value="7"
              c:identifier="MBIM_CONTEXT_TYPE_IMS"
              glib:nick="ims">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="408">Connection to IMS.</doc>
      </member>
      <member name="mms"
              value="8"
              c:identifier="MBIM_CONTEXT_TYPE_MMS"
              glib:nick="mms">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="409">Connection to MMS.</doc>
      </member>
      <member name="local"
              value="9"
              c:identifier="MBIM_CONTEXT_TYPE_LOCAL"
              glib:nick="local">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="410">A local.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_context_type_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2511">Gets the nickname string for the #MbimContextType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2521"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2517">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2513">a MbimContextType.</doc>
            <type name="ContextType" c:type="MbimContextType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="CoreError"
                 version="1.0"
                 glib:type-name="MbimCoreError"
                 glib:get-type="mbim_core_error_get_type"
                 c:type="MbimCoreError"
                 glib:error-domain="mbim_core_error_quark">
      <doc xml:space="preserve"
           filename="mbim-errors.h"
           line="44">Common errors that may be reported by libmbim-glib.</doc>
      <member name="Failed"
              value="0"
              c:identifier="MBIM_CORE_ERROR_FAILED"
              glib:nick="Failed">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="46">Operation failed.</doc>
      </member>
      <member name="WrongState"
              value="1"
              c:identifier="MBIM_CORE_ERROR_WRONG_STATE"
              glib:nick="WrongState">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="47">Operation cannot be executed in the current state.</doc>
      </member>
      <member name="Timeout"
              value="2"
              c:identifier="MBIM_CORE_ERROR_TIMEOUT"
              glib:nick="Timeout">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="48">Operation timed out.</doc>
      </member>
      <member name="InvalidArgs"
              value="3"
              c:identifier="MBIM_CORE_ERROR_INVALID_ARGS"
              glib:nick="InvalidArgs">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="49">Invalid arguments given.</doc>
      </member>
      <member name="InvalidMessage"
              value="4"
              c:identifier="MBIM_CORE_ERROR_INVALID_MESSAGE"
              glib:nick="InvalidMessage">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="50">MBIM message is invalid.</doc>
      </member>
      <member name="Unsupported"
              value="5"
              c:identifier="MBIM_CORE_ERROR_UNSUPPORTED"
              glib:nick="Unsupported">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="51">Not supported.</doc>
      </member>
      <member name="Aborted"
              value="6"
              c:identifier="MBIM_CORE_ERROR_ABORTED"
              glib:nick="Aborted">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="52">Operation aborted.</doc>
      </member>
      <member name="UnknownState"
              value="7"
              c:identifier="MBIM_CORE_ERROR_UNKNOWN_STATE"
              glib:nick="UnknownState">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="53">State is unknown. Since 1.16.</doc>
      </member>
      <function name="get_string" c:identifier="mbim_core_error_get_string">
        <doc xml:space="preserve"
             filename="generated/mbim-error-types.c"
             line="39">Gets the nickname string for the #MbimCoreError specified at @val.</doc>
        <source-position filename="generated/mbim-error-types.h" line="17"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-error-types.c"
               line="45">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-error-types.c"
                 line="41">a MbimCoreError.</doc>
            <type name="CoreError" c:type="MbimCoreError"/>
          </parameter>
        </parameters>
      </function>
      <function name="quark" c:identifier="mbim_core_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <bitfield name="CtrlCaps"
              version="1.0"
              glib:type-name="MbimCtrlCaps"
              glib:get-type="mbim_ctrl_caps_get_type"
              c:type="MbimCtrlCaps">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="166">Control capabilities.</doc>
      <member name="reg_manual"
              value="1"
              c:identifier="MBIM_CTRL_CAPS_REG_MANUAL"
              glib:nick="reg-manual">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="168">Device allows manual network selection.</doc>
      </member>
      <member name="hw_radio_switch"
              value="2"
              c:identifier="MBIM_CTRL_CAPS_HW_RADIO_SWITCH"
              glib:nick="hw-radio-switch">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="169">Device has a hardware radio power switch.</doc>
      </member>
      <member name="cdma_mobile_ip"
              value="4"
              c:identifier="MBIM_CTRL_CAPS_CDMA_MOBILE_IP"
              glib:nick="cdma-mobile-ip">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="170">The CDMA function supports Mobile IP.</doc>
      </member>
      <member name="cdma_simple_ip"
              value="8"
              c:identifier="MBIM_CTRL_CAPS_CDMA_SIMPLE_IP"
              glib:nick="cdma-simple-ip">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="171">The CDMA function supports Simple IP.</doc>
      </member>
      <member name="multi_carrier"
              value="16"
              c:identifier="MBIM_CTRL_CAPS_MULTI_CARRIER"
              glib:nick="multi-carrier">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="172">Device can work with multiple providers.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_ctrl_caps_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="719">Builds a string containing a comma-separated list of nicknames for
each #MbimCtrlCaps in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="730"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="726">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="721">bitmask of MbimCtrlCaps values.</doc>
            <type name="CtrlCaps" c:type="MbimCtrlCaps"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <constant name="DBUS_ERROR_PREFIX"
              value="org.freedesktop.libmbim.Error"
              c:type="MBIM_DBUS_ERROR_PREFIX">
      <source-position filename="mbim-errors.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DEVICE"
                    c:identifier="MBIM_DEVICE"
                    introspectable="0">
      <source-position filename="mbim-device.h" line="49"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEVICE_CLASS"
                    c:identifier="MBIM_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="mbim-device.h" line="50"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DEVICE_FILE"
              value="device-file"
              c:type="MBIM_DEVICE_FILE"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="59">Symbol defining the #MbimDevice:device-file property.</doc>
      <source-position filename="mbim-device.h" line="66"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="DEVICE_GET_CLASS"
                    c:identifier="MBIM_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="mbim-device.h" line="53"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="DEVICE_IN_SESSION"
              value="device-in-session"
              c:type="MBIM_DEVICE_IN_SESSION"
              version="1.4">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="77">Symbol defining the #MbimDevice:device-in-session property.</doc>
      <source-position filename="mbim-device.h" line="84"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_SIGNAL_ERROR"
              value="device-error"
              c:type="MBIM_DEVICE_SIGNAL_ERROR"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="95">Symbol defining the #MbimDevice::device-error signal.</doc>
      <source-position filename="mbim-device.h" line="102"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_SIGNAL_INDICATE_STATUS"
              value="device-indicate-status"
              c:type="MBIM_DEVICE_SIGNAL_INDICATE_STATUS"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="86">Symbol defining the #MbimDevice::device-indicate-status signal.</doc>
      <source-position filename="mbim-device.h" line="93"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_SIGNAL_REMOVED"
              value="device-removed"
              c:type="MBIM_DEVICE_SIGNAL_REMOVED"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="104">Symbol defining the #MbimDevice::device-removed signal.</doc>
      <source-position filename="mbim-device.h" line="111"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="DEVICE_TRANSACTION_ID"
              value="device-transaction-id"
              c:type="MBIM_DEVICE_TRANSACTION_ID"
              version="1.2">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="68">Symbol defining the #MbimDevice:device-transaction-id property.</doc>
      <source-position filename="mbim-device.h" line="75"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <bitfield name="DataClass"
              version="1.0"
              glib:type-name="MbimDataClass"
              glib:get-type="mbim_data_class_get_type"
              c:type="MbimDataClass">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="108">Data class.</doc>
      <member name="gprs"
              value="1"
              c:identifier="MBIM_DATA_CLASS_GPRS"
              glib:nick="gprs">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="110">GPRS.</doc>
      </member>
      <member name="edge"
              value="2"
              c:identifier="MBIM_DATA_CLASS_EDGE"
              glib:nick="edge">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="111">EDGE.</doc>
      </member>
      <member name="umts"
              value="4"
              c:identifier="MBIM_DATA_CLASS_UMTS"
              glib:nick="umts">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="112">UMTS.</doc>
      </member>
      <member name="hsdpa"
              value="8"
              c:identifier="MBIM_DATA_CLASS_HSDPA"
              glib:nick="hsdpa">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="113">HSDPA.</doc>
      </member>
      <member name="hsupa"
              value="16"
              c:identifier="MBIM_DATA_CLASS_HSUPA"
              glib:nick="hsupa">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="114">HSUPA.</doc>
      </member>
      <member name="lte"
              value="32"
              c:identifier="MBIM_DATA_CLASS_LTE"
              glib:nick="lte">
        <doc xml:space="preserve" filename="mbim-enums.h" line="115">LTE.</doc>
      </member>
      <member name="1xrtt"
              value="65536"
              c:identifier="MBIM_DATA_CLASS_1XRTT"
              glib:nick="1xrtt">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="116">1xRTT.</doc>
      </member>
      <member name="1xevdo"
              value="131072"
              c:identifier="MBIM_DATA_CLASS_1XEVDO"
              glib:nick="1xevdo">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="117">1xEV-DO.</doc>
      </member>
      <member name="1xevdo_reva"
              value="262144"
              c:identifier="MBIM_DATA_CLASS_1XEVDO_REVA"
              glib:nick="1xevdo-reva">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="118">1xEV-DO RevA</doc>
      </member>
      <member name="1xevdv"
              value="524288"
              c:identifier="MBIM_DATA_CLASS_1XEVDV"
              glib:nick="1xevdv">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="119">1xEV-DV.</doc>
      </member>
      <member name="3xrtt"
              value="1048576"
              c:identifier="MBIM_DATA_CLASS_3XRTT"
              glib:nick="3xrtt">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="120">3xRTT.</doc>
      </member>
      <member name="1xevdo_revb"
              value="2097152"
              c:identifier="MBIM_DATA_CLASS_1XEVDO_REVB"
              glib:nick="1xevdo-revb">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="121">1xEV-DO RevB.</doc>
      </member>
      <member name="umb"
              value="4194304"
              c:identifier="MBIM_DATA_CLASS_UMB"
              glib:nick="umb">
        <doc xml:space="preserve" filename="mbim-enums.h" line="122">UMB.</doc>
      </member>
      <member name="custom"
              value="2147483648"
              c:identifier="MBIM_DATA_CLASS_CUSTOM"
              glib:nick="custom">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="123">Custom.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_data_class_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="651">Builds a string containing a comma-separated list of nicknames for
each #MbimDataClass in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="662"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="658">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="653">bitmask of MbimDataClass values.</doc>
            <type name="DataClass" c:type="MbimDataClass"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="MbimDevice"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="MbimDevice"
           glib:get-type="mbim_device_get_type"
           glib:type-struct="DeviceClass">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="37">#MbimDevice is a generic type in charge of controlling the access to the
managed MBIM port.

A #MbimDevice can only handle one single MBIM port.</doc>
      <source-position filename="mbim-device.h" line="130"/>
      <implements name="Gio.AsyncInitable"/>
      <constructor name="new_finish"
                   c:identifier="mbim_device_new_finish"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="153">Finishes an operation started with mbim_device_new().</doc>
        <source-position filename="mbim-device.h" line="164"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="160">a newly created #MbimDevice, or #NULL if @error is set.</doc>
          <type name="Device" c:type="MbimDevice*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="155">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new" c:identifier="mbim_device_new" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="135">Asynchronously creates a #MbimDevice object to manage @file.
When the operation is finished, @callback will be invoked. You can then call
mbim_device_new_finish() to get the result of the operation.</doc>
        <source-position filename="mbim-device.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="137">a #GFile.</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="138">optional #GCancellable object, #NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="139">a #GAsyncReadyCallback to call when the initialization is finished.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="140">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="close" c:identifier="mbim_device_close" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="321">Asynchronously closes a #MbimDevice for I/O.

When the operation is finished @callback will be called. You can then call
mbim_device_close_finish() to get the result of the operation.</doc>
        <source-position filename="mbim-device.h" line="336"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="323">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="324">maximum time, in seconds, to wait for the device to be closed.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="325">optional #GCancellable object, #NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="326">a #GAsyncReadyCallback to call when the operation is finished.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="327">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="mbim_device_close_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="342">Finishes an asynchronous close operation started with mbim_device_close().</doc>
        <source-position filename="mbim-device.h" line="354"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="350">%TRUE if successful, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="344">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="345">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_force"
              c:identifier="mbim_device_close_force"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="358">Forces the #MbimDevice to be closed.</doc>
        <source-position filename="mbim-device.h" line="369"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="365">%TRUE if @self if no error happens, otherwise %FALSE and @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="360">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command" c:identifier="mbim_device_command" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="398">Asynchronously sends a #MbimMessage to the device.

When the operation is finished @callback will be called. You can then call
mbim_device_command_finish() to get the result of the operation.</doc>
        <source-position filename="mbim-device.h" line="414"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="400">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="401">the message to send.</doc>
            <type name="Message" c:type="MbimMessage*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="402">maximum time, in seconds, to wait for the response.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="403">a #GCancellable, or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="404">a #GAsyncReadyCallback to call when the operation is finished.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="405">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="command_finish"
              c:identifier="mbim_device_command_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="421">Finishes an operation started with mbim_device_command().</doc>
        <source-position filename="mbim-device.h" line="433"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="429">a #MbimMessage response, or #NULL if @error is set. The returned value should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="423">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="424">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file"
              c:identifier="mbim_device_get_file"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="167">Get the #GFile associated with this #MbimDevice.</doc>
        <source-position filename="mbim-device.h" line="177"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="173">a #GFile that must be freed with g_object_unref().</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="169">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_next_transaction_id"
              c:identifier="mbim_device_get_next_transaction_id"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="372">Acquire the next transaction ID of this #MbimDevice.
The internal transaction ID gets incremented.</doc>
        <source-position filename="mbim-device.h" line="383"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="379">the next transaction ID.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="374">A #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path"
              c:identifier="mbim_device_get_path"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="192">Get the system path of the underlying MBIM device.</doc>
        <source-position filename="mbim-device.h" line="202"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="198">the system path of the device.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="194">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path_display"
              c:identifier="mbim_device_get_path_display"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="204">Get the system path of the underlying MBIM device in UTF-8.</doc>
        <source-position filename="mbim-device.h" line="214"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="210">UTF-8 encoded system path of the device.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="206">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transaction_id"
              c:identifier="mbim_device_get_transaction_id"
              version="1.26">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="385">Acquire the transaction ID of this #MbimDevice without
incrementing the internal transaction ID.</doc>
        <source-position filename="mbim-device.h" line="396"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="392">the current transaction ID.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="387">A #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_open" c:identifier="mbim_device_is_open" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="216">Checks whether the #MbimDevice is open for I/O.</doc>
        <source-position filename="mbim-device.h" line="226"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="222">%TRUE if @self is open, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="218">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open" c:identifier="mbim_device_open" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="284">Asynchronously opens a #MbimDevice for I/O.

When the operation is finished @callback will be called. You can then call
mbim_device_open_finish() to get the result of the operation.</doc>
        <source-position filename="mbim-device.h" line="299"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="286">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="287">maximum time, in seconds, to wait for the device to be opened.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="288">optional #GCancellable object, #NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="289">a #GAsyncReadyCallback to call when the operation is finished.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="290">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_finish"
              c:identifier="mbim_device_open_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="305">Finishes an asynchronous open operation started with mbim_device_open().</doc>
        <source-position filename="mbim-device.h" line="317"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="313">%TRUE if successful, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="307">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="308">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_full"
              c:identifier="mbim_device_open_full"
              version="1.10">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="242">Asynchronously opens a #MbimDevice for I/O.

This method is an extension of the generic mbim_device_open(), which allows
launching the #MbimDevice with proxy support.

When the operation is finished @callback will be called. You can then call
mbim_device_open_full_finish() to get the result of the operation.</doc>
        <source-position filename="mbim-device.h" line="261"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="244">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="245">a set of #MbimDeviceOpenFlags.</doc>
            <type name="DeviceOpenFlags" c:type="MbimDeviceOpenFlags"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="246">maximum time, in seconds, to wait for the device to be opened.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="247">optional #GCancellable object, #NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="248">a #GAsyncReadyCallback to call when the operation is finished.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="249">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_full_finish"
              c:identifier="mbim_device_open_full_finish"
              version="1.10"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="268">Finishes an asynchronous open operation started with mbim_device_open_full().</doc>
        <source-position filename="mbim-device.h" line="280"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="276">%TRUE if successful, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="270">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="271">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_file"
              c:identifier="mbim_device_peek_file"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="179">Get the #GFile associated with this #MbimDevice, without increasing the reference count
on the returned object.</doc>
        <source-position filename="mbim-device.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-device.h"
               line="186">a #GFile. Do not free the returned object, it is owned by @self.</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-device.h"
                 line="181">a #MbimDevice.</doc>
            <type name="Device" c:type="MbimDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="device-file"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gio.File"/>
      </property>
      <property name="device-in-session"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="device-transaction-id"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DevicePrivate" c:type="MbimDevicePrivate*"/>
      </field>
      <glib:signal name="device-error" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GLib.Error"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-indicate-status" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Message"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-removed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="DeviceClass"
            c:type="MbimDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="mbim-device.h" line="130"/>
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <bitfield name="DeviceOpenFlags"
              version="1.10"
              c:type="MbimDeviceOpenFlags">
      <doc xml:space="preserve"
           filename="mbim-device.h"
           line="228">Flags to specify which actions to be performed when the device is open.</doc>
      <source-position filename="mbim-device.h" line="240"/>
      <member name="none" value="0" c:identifier="MBIM_DEVICE_OPEN_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="230">None.</doc>
      </member>
      <member name="proxy"
              value="1"
              c:identifier="MBIM_DEVICE_OPEN_FLAGS_PROXY">
        <doc xml:space="preserve"
             filename="mbim-device.h"
             line="231">Try to open the port through the 'mbim-proxy'.</doc>
      </member>
    </bitfield>
    <record name="DevicePrivate" c:type="MbimDevicePrivate" disguised="1">
      <source-position filename="mbim-device.h" line="57"/>
    </record>
    <record name="DeviceServiceElement"
            c:type="MbimDeviceServiceElement"
            version="1.0">
      <source-position filename="generated/mbim-basic-connect.h" line="251"/>
      <field name="device_service_id" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="237">a #MbimUuid.</doc>
        <type name="Uuid" c:type="MbimUuid"/>
      </field>
      <field name="dss_payload" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="238">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="max_dss_instances" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="239">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="cids_count" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="240">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="cids" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="241">an array of #guint32 values.</doc>
        <type name="guint32" c:type="guint32*"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_device_service_element_array_free"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="261">Frees the memory allocated for the array of #MbimDeviceServiceElements.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="263">a #NULL terminated array of #MbimDeviceServiceElement structs.</doc>
            <type name="DeviceServiceElementArray"
                  c:type="MbimDeviceServiceElementArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="DeviceType"
                 version="1.0"
                 glib:type-name="MbimDeviceType"
                 glib:get-type="mbim_device_type_get_type"
                 c:type="MbimDeviceType">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="44">Type of device.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_DEVICE_TYPE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="46">Unknown type.</doc>
      </member>
      <member name="embedded"
              value="1"
              c:identifier="MBIM_DEVICE_TYPE_EMBEDDED"
              glib:nick="embedded">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="47">Device is embedded in the system.</doc>
      </member>
      <member name="removable"
              value="2"
              c:identifier="MBIM_DEVICE_TYPE_REMOVABLE"
              glib:nick="removable">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="48">Device is removable.</doc>
      </member>
      <member name="remote"
              value="3"
              c:identifier="MBIM_DEVICE_TYPE_REMOTE"
              glib:nick="remote">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="49">Device is remote.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_device_type_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="501">Gets the nickname string for the #MbimDeviceType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="511"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="507">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="503">a MbimDeviceType.</doc>
            <type name="DeviceType" c:type="MbimDeviceType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="DssLinkState"
                 version="1.4"
                 glib:type-name="MbimDssLinkState"
                 glib:get-type="mbim_dss_link_state_get_type"
                 c:type="MbimDssLinkState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1077">Action performed in the link state.</doc>
      <member name="deactivate"
              value="0"
              c:identifier="MBIM_DSS_LINK_STATE_DEACTIVATE"
              glib:nick="deactivate">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1079">Deactivate.</doc>
      </member>
      <member name="activate"
              value="1"
              c:identifier="MBIM_DSS_LINK_STATE_ACTIVATE"
              glib:nick="activate">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1080">Activate.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_dss_link_state_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2133">Gets the nickname string for the #MbimDssLinkState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2139">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2135">a MbimDssLinkState.</doc>
            <type name="DssLinkState" c:type="MbimDssLinkState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="EmergencyModeState"
                 version="1.4"
                 glib:type-name="MbimEmergencyModeState"
                 glib:get-type="mbim_emergency_mode_state_get_type"
                 c:type="MbimEmergencyModeState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1060">Emergency mode state.</doc>
      <member name="off"
              value="0"
              c:identifier="MBIM_EMERGENCY_MODE_STATE_OFF"
              glib:nick="off">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1062">Off.</doc>
      </member>
      <member name="on"
              value="1"
              c:identifier="MBIM_EMERGENCY_MODE_STATE_ON"
              glib:nick="on">
        <doc xml:space="preserve" filename="mbim-enums.h" line="1063">On.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_emergency_mode_state_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2099">Gets the nickname string for the #MbimEmergencyModeState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2105">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2101">a MbimEmergencyModeState.</doc>
            <type name="EmergencyModeState" c:type="MbimEmergencyModeState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="EventEntry" c:type="MbimEventEntry" version="1.4">
      <source-position filename="generated/mbim-basic-connect.h" line="287"/>
      <field name="device_service_id" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="277">a #MbimUuid.</doc>
        <type name="Uuid" c:type="MbimUuid"/>
      </field>
      <field name="cids_count" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="278">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="cids" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="279">an array of #guint32 values.</doc>
        <type name="guint32" c:type="guint32*"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_event_entry_array_free"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="297">Frees the memory allocated for the array of #MbimEventEntrys.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="305"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="299">a #NULL terminated array of #MbimEventEntry structs.</doc>
            <type name="EventEntryArray" c:type="MbimEventEntryArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <bitfield name="IPConfigurationAvailableFlag"
              version="1.0"
              glib:type-name="MbimIPConfigurationAvailableFlag"
              glib:get-type="mbim_ip_configuration_available_flag_get_type"
              c:type="MbimIPConfigurationAvailableFlag">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="724">Mask of available information about an IP address.</doc>
      <member name="none"
              value="0"
              c:identifier="MBIM_IP_CONFIGURATION_AVAILABLE_FLAG_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="726">No info available.</doc>
      </member>
      <member name="address"
              value="1"
              c:identifier="MBIM_IP_CONFIGURATION_AVAILABLE_FLAG_ADDRESS"
              glib:nick="address">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="727">Address info available.</doc>
      </member>
      <member name="gateway"
              value="2"
              c:identifier="MBIM_IP_CONFIGURATION_AVAILABLE_FLAG_GATEWAY"
              glib:nick="gateway">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="728">Gateway info available.</doc>
      </member>
      <member name="dns"
              value="4"
              c:identifier="MBIM_IP_CONFIGURATION_AVAILABLE_FLAG_DNS"
              glib:nick="dns">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="729">DNS info available.</doc>
      </member>
      <member name="mtu"
              value="8"
              c:identifier="MBIM_IP_CONFIGURATION_AVAILABLE_FLAG_MTU"
              glib:nick="mtu">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="730">MTU info available.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_ip_configuration_available_flag_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1535">Builds a string containing a comma-separated list of nicknames for
each #MbimIPConfigurationAvailableFlag in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1546"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1542">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1537">bitmask of MbimIPConfigurationAvailableFlag values.</doc>
            <type name="IPConfigurationAvailableFlag"
                  c:type="MbimIPConfigurationAvailableFlag"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <record name="IPv4" c:type="MbimIPv4" version="1.0">
      <doc xml:space="preserve"
           filename="mbim-message.h"
           line="60">An IPv4 address.</doc>
      <source-position filename="mbim-message.h" line="71"/>
      <field name="addr" writable="1">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="62">4 bytes specifying the IPv4 address.</doc>
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
    </record>
    <record name="IPv4Element" c:type="MbimIPv4Element" version="1.0">
      <source-position filename="generated/mbim-basic-connect.h" line="177"/>
      <field name="on_link_prefix_length" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="169">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="ipv4_address" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="170">a #MbimIPv4.</doc>
        <type name="IPv4" c:type="MbimIPv4"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_ipv4_element_array_free"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="187">Frees the memory allocated for the array of #MbimIPv4Elements.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="189">a #NULL terminated array of #MbimIPv4Element structs.</doc>
            <type name="IPv4ElementArray" c:type="MbimIPv4ElementArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="IPv6" c:type="MbimIPv6" version="1.0">
      <doc xml:space="preserve"
           filename="mbim-message.h"
           line="73">An IPv6 address.</doc>
      <source-position filename="mbim-message.h" line="84"/>
      <field name="addr" writable="1">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="75">16 bytes specifying the IPv6 address.</doc>
        <array zero-terminated="0" fixed-size="16">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
    </record>
    <record name="IPv6Element" c:type="MbimIPv6Element" version="1.0">
      <source-position filename="generated/mbim-basic-connect.h" line="211"/>
      <field name="on_link_prefix_length" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="203">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="ipv6_address" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="204">a #MbimIPv6</doc>
        <type name="IPv6" c:type="MbimIPv6"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_ipv6_element_array_free"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="221">Frees the memory allocated for the array of #MbimIPv6Elements.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="229"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="223">a #NULL terminated array of #MbimIPv6Element structs.</doc>
            <type name="IPv6ElementArray" c:type="MbimIPv6ElementArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <function-macro name="IS_DEVICE"
                    c:identifier="MBIM_IS_DEVICE"
                    introspectable="0">
      <source-position filename="mbim-device.h" line="51"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEVICE_CLASS"
                    c:identifier="MBIM_IS_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="mbim-device.h" line="52"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROXY"
                    c:identifier="MBIM_IS_PROXY"
                    introspectable="0">
      <source-position filename="mbim-proxy.h" line="53"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROXY_CLASS"
                    c:identifier="MBIM_IS_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="mbim-proxy.h" line="54"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <record name="LteAttachConfiguration"
            c:type="MbimLteAttachConfiguration"
            version="1.18">
      <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                       line="92"/>
      <field name="ip_type" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="72">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="roaming" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="73">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="74">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="access_string" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="75">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="user_name" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="76">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="password" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="77">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="compression" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="78">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="auth_protocol" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="79">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_lte_attach_configuration_array_free"
                version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="102">Frees the memory allocated for the array of #MbimLteAttachConfigurations.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="104">a #NULL terminated array of #MbimLteAttachConfiguration structs.</doc>
            <type name="LteAttachConfigurationArray"
                  c:type="MbimLteAttachConfigurationArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="LteAttachContextOperation"
                 version="1.18"
                 glib:type-name="MbimLteAttachContextOperation"
                 glib:get-type="mbim_lte_attach_context_operation_get_type"
                 c:type="MbimLteAttachContextOperation">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1151">Command to run when updating LTE attach configuration.</doc>
      <member name="default"
              value="0"
              c:identifier="MBIM_LTE_ATTACH_CONTEXT_OPERATION_DEFAULT"
              glib:nick="default">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1153">Overwrite existing contexts.</doc>
      </member>
      <member name="restore_factory"
              value="1"
              c:identifier="MBIM_LTE_ATTACH_CONTEXT_OPERATION_RESTORE_FACTORY"
              glib:nick="restore-factory">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1154">Restore factory preconfigured contexts.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_lte_attach_context_operation_get_string"
                version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2269">Gets the nickname string for the #MbimLteAttachContextOperation specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2279"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2275">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2271">a MbimLteAttachContextOperation.</doc>
            <type name="LteAttachContextOperation"
                  c:type="MbimLteAttachContextOperation"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="LteAttachContextRoamingControl"
                 version="1.18"
                 glib:type-name="MbimLteAttachContextRoamingControl"
                 glib:get-type="mbim_lte_attach_context_roaming_control_get_type"
                 c:type="MbimLteAttachContextRoamingControl">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1165">Type of roaming control.</doc>
      <member name="home"
              value="0"
              c:identifier="MBIM_LTE_ATTACH_CONTEXT_ROAMING_CONTROL_HOME"
              glib:nick="home">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1167">Context allowed to be used on home network.</doc>
      </member>
      <member name="partner"
              value="1"
              c:identifier="MBIM_LTE_ATTACH_CONTEXT_ROAMING_CONTROL_PARTNER"
              glib:nick="partner">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1168">Context allowed to be used on partner network.</doc>
      </member>
      <member name="non_partner"
              value="2"
              c:identifier="MBIM_LTE_ATTACH_CONTEXT_ROAMING_CONTROL_NON_PARTNER"
              glib:nick="non-partner">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1169">Context allowed to be used on non-partner network.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_lte_attach_context_roaming_control_get_string"
                version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2303">Gets the nickname string for the #MbimLteAttachContextRoamingControl specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2313"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2309">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2305">a MbimLteAttachContextRoamingControl.</doc>
            <type name="LteAttachContextRoamingControl"
                  c:type="MbimLteAttachContextRoamingControl"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="LteAttachState"
                 version="1.18"
                 glib:type-name="MbimLteAttachState"
                 glib:get-type="mbim_lte_attach_state_get_type"
                 c:type="MbimLteAttachState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1201">LTE attach state.</doc>
      <member name="detached"
              value="0"
              c:identifier="MBIM_LTE_ATTACH_STATE_DETACHED"
              glib:nick="detached">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1203">Detached.</doc>
      </member>
      <member name="attached"
              value="1"
              c:identifier="MBIM_LTE_ATTACH_STATE_ATTACHED"
              glib:nick="attached">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1204">Attached.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_lte_attach_state_get_string"
                version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2371">Gets the nickname string for the #MbimLteAttachState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2381"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2377">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2373">a MbimLteAttachState.</doc>
            <type name="LteAttachState" c:type="MbimLteAttachState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="LteAttachStatus" c:type="MbimLteAttachStatus" version="1.18">
      <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                       line="136"/>
      <field name="lte_attach_state" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="118">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="ip_type" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="119">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="access_string" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="120">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="user_name" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="121">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="password" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="122">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="compression" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="123">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="auth_protocol" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="124">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <method name="free"
              c:identifier="mbim_lte_attach_status_free"
              version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="138">Frees the memory allocated for the #MbimLteAttachStatus.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="var" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="140">a #MbimLteAttachStatus.</doc>
            <type name="LteAttachStatus" c:type="MbimLteAttachStatus*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <constant name="MAJOR_VERSION"
              value="1"
              c:type="MBIM_MAJOR_VERSION"
              version="1.2">
      <doc xml:space="preserve"
           filename="mbim-version.h"
           line="32">Evaluates to the major version number of libmbim-glib which this source
is compiled against.</doc>
      <source-position filename="mbim-version.h" line="40"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MICRO_VERSION"
              value="0"
              c:type="MBIM_MICRO_VERSION"
              version="1.2">
      <doc xml:space="preserve"
           filename="mbim-version.h"
           line="52">Evaluates to the micro version number of libmbim-glib which this source
compiled against.</doc>
      <source-position filename="mbim-version.h" line="60"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="MINOR_VERSION"
              value="25"
              c:type="MBIM_MINOR_VERSION"
              version="1.2">
      <doc xml:space="preserve"
           filename="mbim-version.h"
           line="42">Evaluates to the minor version number of libmbim-glib which this source
is compiled against.</doc>
      <source-position filename="mbim-version.h" line="50"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="Message"
            c:type="MbimMessage"
            version="1.0"
            glib:type-name="MbimMessage"
            glib:get-type="mbim_message_get_type"
            c:symbol-prefix="message">
      <doc xml:space="preserve"
           filename="mbim-message.h"
           line="39">#MbimMessage is a generic type representing a MBIM message of any kind
(request, response, indication).</doc>
      <source-position filename="mbim-message.h" line="55"/>
      <constructor name="atds_location_query_new"
                   c:identifier="mbim_message_atds_location_query_new"
                   version="1.16"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="130">Create a new request for the 'Location' query command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="140"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="136">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="atds_operators_query_new"
                   c:identifier="mbim_message_atds_operators_query_new"
                   version="1.16"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="170">Create a new request for the 'Operators' query command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="180"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="176">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="atds_rat_query_new"
                   c:identifier="mbim_message_atds_rat_query_new"
                   version="1.16"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="208">Create a new request for the 'RAT' query command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="218"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="214">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="atds_rat_set_new"
                   c:identifier="mbim_message_atds_rat_set_new"
                   version="1.16"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="224">Create a new request for the 'RAT' set command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="235"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="231">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="226">the 'Mode' field, given as a #MbimAtdsRatMode.</doc>
            <type name="AtdsRatMode" c:type="MbimAtdsRatMode"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="atds_register_state_query_new"
                   c:identifier="mbim_message_atds_register_state_query_new"
                   version="1.16"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="262">Create a new request for the 'Register State' query command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="272"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="268">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="atds_signal_query_new"
                   c:identifier="mbim_message_atds_signal_query_new"
                   version="1.16"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="82">Create a new request for the 'Signal' query command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="88">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="auth_aka_query_new"
                   c:identifier="mbim_message_auth_aka_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-auth.h"
             line="40">Create a new request for the 'Aka' query command in the 'Auth' service.</doc>
        <source-position filename="generated/mbim-auth.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-auth.h"
               line="48">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="rand" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="42">the 'Rand' field, given as an array of 16 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="autn" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="43">the 'Autn' field, given as an array of 16 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="auth_akap_query_new"
                   c:identifier="mbim_message_auth_akap_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-auth.h"
             line="88">Create a new request for the 'Akap' query command in the 'Auth' service.</doc>
        <source-position filename="generated/mbim-auth.h" line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-auth.h"
               line="97">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="rand" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="90">the 'Rand' field, given as an array of 16 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="autn" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="91">the 'Autn' field, given as an array of 16 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="network_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="92">the 'NetworkName' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="auth_sim_query_new"
                   c:identifier="mbim_message_auth_sim_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-auth.h"
             line="138">Create a new request for the 'Sim' query command in the 'Auth' service.</doc>
        <source-position filename="generated/mbim-auth.h" line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-auth.h"
               line="148">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="rand1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="140">the 'Rand1' field, given as an array of 16 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="rand2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="141">the 'Rand2' field, given as an array of 16 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="rand3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="142">the 'Rand3' field, given as an array of 16 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="143">the 'N' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="close_done_new"
                   c:identifier="mbim_message_close_done_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="348">Create a new #MbimMessage of type %MBIM_MESSAGE_TYPE_CLOSE_DONE with the specified
parameters.</doc>
        <source-position filename="mbim-message.h" line="360"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="356">a newly created #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="350">transaction ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="error_status_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="351">a #MbimStatusError.</doc>
            <type name="StatusError" c:type="MbimStatusError"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="close_new"
                   c:identifier="mbim_message_close_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="331">Create a new #MbimMessage of type %MBIM_MESSAGE_TYPE_CLOSE with the specified
parameters.</doc>
        <source-position filename="mbim-message.h" line="343"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="338">a newly created #MbimMessage. The returned value
should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="333">transaction ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="command_new"
                   c:identifier="mbim_message_command_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="469">Create a new #MbimMessage of type %MBIM_MESSAGE_TYPE_COMMAND with the
specified parameters and an empty information buffer.</doc>
        <source-position filename="mbim-message.h" line="484"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="479">a newly created #MbimMessage. The returned value
should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="471">transaction ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="472">a #MbimService.</doc>
            <type name="Service" c:type="MbimService"/>
          </parameter>
          <parameter name="cid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="473">the command ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="command_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="474">the command type.</doc>
            <type name="MessageCommandType" c:type="MbimMessageCommandType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="connect_query_new"
                   c:identifier="mbim_message_connect_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1145">Create a new request for the 'Connect' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1161"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1157">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1147">the 'SessionId' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="activation_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1148">the 'ActivationState' field, given as a #MbimActivationState.</doc>
            <type name="ActivationState" c:type="MbimActivationState"/>
          </parameter>
          <parameter name="voice_call_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1149">the 'VoiceCallState' field, given as a #MbimVoiceCallState.</doc>
            <type name="VoiceCallState" c:type="MbimVoiceCallState"/>
          </parameter>
          <parameter name="ip_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1150">the 'IpType' field, given as a #MbimContextIpType.</doc>
            <type name="ContextIpType" c:type="MbimContextIpType"/>
          </parameter>
          <parameter name="context_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1151">the 'ContextType' field, given as a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </parameter>
          <parameter name="nw_error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1152">the 'NwError' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="connect_set_new"
                   c:identifier="mbim_message_connect_set_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1173">Create a new request for the 'Connect' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1192"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1188">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1175">the 'SessionId' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="activation_command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1176">the 'ActivationCommand' field, given as a #MbimActivationCommand.</doc>
            <type name="ActivationCommand" c:type="MbimActivationCommand"/>
          </parameter>
          <parameter name="access_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1177">the 'AccessString' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1178">the 'UserName' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1179">the 'Password' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="compression" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1180">the 'Compression' field, given as a #MbimCompression.</doc>
            <type name="Compression" c:type="MbimCompression"/>
          </parameter>
          <parameter name="auth_protocol" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1181">the 'AuthProtocol' field, given as a #MbimAuthProtocol.</doc>
            <type name="AuthProtocol" c:type="MbimAuthProtocol"/>
          </parameter>
          <parameter name="ip_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1182">the 'IpType' field, given as a #MbimContextIpType.</doc>
            <type name="ContextIpType" c:type="MbimContextIpType"/>
          </parameter>
          <parameter name="context_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1183">the 'ContextType' field, given as a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="device_caps_query_new"
                   c:identifier="mbim_message_device_caps_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="347">Create a new request for the 'Device Caps' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="357"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="353">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="device_service_subscribe_list_set_new"
                   c:identifier="mbim_message_device_service_subscribe_list_set_new"
                   version="1.8"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1585">Create a new request for the 'Device Service Subscribe List' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1597"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1593">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="events_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1587">the 'EventsCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1588">the 'Events' field, given as an array of #MbimEventEntrys.</doc>
            <type name="EventEntry" c:type="const MbimEventEntry* const*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="device_service_subscriber_list_set_new"
                   c:identifier="mbim_message_device_service_subscriber_list_set_new"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.8"
                   throws="1">
        <doc xml:space="preserve"
             filename="mbim-compat.h"
             line="79">Create a new request for the 'Device Service Subscribe List' set command in the 'Basic Connect' service.</doc>
        <doc-deprecated xml:space="preserve">Use mbim_message_device_service_subscribe_list_set_new() instead.</doc-deprecated>
        <source-position filename="mbim-compat.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-compat.h"
               line="87">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="events_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-compat.h"
                 line="81">the 'EventsCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-compat.h"
                 line="82">the 'Events' field, given as an array of #MbimEventEntrys.</doc>
            <type name="EventEntry" c:type="const MbimEventEntry* const*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="device_services_query_new"
                   c:identifier="mbim_message_device_services_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1545">Create a new request for the 'Device Services' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1555"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1551">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="dss_connect_set_new"
                   c:identifier="mbim_message_dss_connect_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-dss.h"
             line="40">Create a new request for the 'Connect' set command in the 'DSS' service.</doc>
        <source-position filename="generated/mbim-dss.h" line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-dss.h"
               line="49">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="device_service_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-dss.h"
                 line="42">the 'DeviceServiceId' field, given as a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </parameter>
          <parameter name="dss_session_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-dss.h"
                 line="43">the 'DssSessionId' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="dss_link_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-dss.h"
                 line="44">the 'DssLinkState' field, given as a #MbimDssLinkState.</doc>
            <type name="DssLinkState" c:type="MbimDssLinkState"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="emergency_mode_query_new"
                   c:identifier="mbim_message_emergency_mode_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1731">Create a new request for the 'Emergency Mode' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1741"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1737">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="emergency_mode_set_new"
                   c:identifier="mbim_message_emergency_mode_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1747">Create a new request for the 'Emergency Mode' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1758"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1754">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1749">the 'State' field, given as a #MbimEmergencyModeState.</doc>
            <type name="EmergencyModeState" c:type="MbimEmergencyModeState"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="error_new"
                   c:identifier="mbim_message_error_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="392">Create a new #MbimMessage of type %MBIM_MESSAGE_TYPE_HOST_ERROR with the specified
parameters.</doc>
        <source-position filename="mbim-message.h" line="405"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="400">a newly created #MbimMessage. The returned value
should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="394">transaction ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="error_status_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="395">a #MbimProtocolError.</doc>
            <type name="ProtocolError" c:type="MbimProtocolError"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="function_error_new"
                   c:identifier="mbim_message_function_error_new"
                   version="1.12">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="408">Create a new #MbimMessage of type %MBIM_MESSAGE_TYPE_FUNCTION_ERROR with the specified
parameters.</doc>
        <source-position filename="mbim-message.h" line="421"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="416">a newly created #MbimMessage. The returned value
should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="410">transaction ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="error_status_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="411">a #MbimProtocolError.</doc>
            <type name="ProtocolError" c:type="MbimProtocolError"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="home_provider_query_new"
                   c:identifier="mbim_message_home_provider_query_new"
                   version="1.2"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="677">Create a new request for the 'Home Provider' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="687"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="683">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="home_provider_set_new"
                   c:identifier="mbim_message_home_provider_set_new"
                   version="1.2"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="693">Create a new request for the 'Home Provider' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="704"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="700">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="provider" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="695">the 'Provider' field, given as a #MbimProvider.</doc>
            <type name="Provider" c:type="const MbimProvider*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="intel_firmware_update_modem_reboot_set_new"
                   c:identifier="mbim_message_intel_firmware_update_modem_reboot_set_new"
                   version="1.16"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-intel-firmware-update.h"
             line="40">Create a new request for the 'Modem Reboot' set command in the 'Intel Firmware Update' service.</doc>
        <source-position filename="generated/mbim-intel-firmware-update.h"
                         line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-intel-firmware-update.h"
               line="46">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="ip_configuration_query_new"
                   c:identifier="mbim_message_ip_configuration_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1403">Create a new request for the 'IP Configuration' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1428"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1424">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1405">the 'SessionId' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="ipv4_configuration_available"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1406">the 'IPv4ConfigurationAvailable' field, given as a #MbimIPConfigurationAvailableFlag.</doc>
            <type name="IPConfigurationAvailableFlag"
                  c:type="MbimIPConfigurationAvailableFlag"/>
          </parameter>
          <parameter name="ipv6_configuration_available"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1407">the 'IPv6ConfigurationAvailable' field, given as a #MbimIPConfigurationAvailableFlag.</doc>
            <type name="IPConfigurationAvailableFlag"
                  c:type="MbimIPConfigurationAvailableFlag"/>
          </parameter>
          <parameter name="ipv4_address_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1408">the 'IPv4AddressCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="ipv4_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1409">the 'IPv4Address' field, given as an array of #MbimIPv4Elements.</doc>
            <array c:type="const MbimIPv4Element* const*">
              <type name="IPv4Element"/>
            </array>
          </parameter>
          <parameter name="ipv6_address_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1410">the 'IPv6AddressCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="ipv6_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1411">the 'IPv6Address' field, given as an array of #MbimIPv6Elements.</doc>
            <array c:type="const MbimIPv6Element* const*">
              <type name="IPv6Element"/>
            </array>
          </parameter>
          <parameter name="ipv4_gateway" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1412">the 'IPv4Gateway' field, given as a #MbimIPv4.</doc>
            <type name="IPv4" c:type="const MbimIPv4*"/>
          </parameter>
          <parameter name="ipv6_gateway" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1413">the 'IPv6Gateway' field, given as a #MbimIPv6.</doc>
            <type name="IPv6" c:type="const MbimIPv6*"/>
          </parameter>
          <parameter name="ipv4_dns_server_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1414">the 'IPv4DnsServerCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="ipv4_dns_server" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1415">the 'IPv4DnsServer' field, given as an array of #MbimIPv4.</doc>
            <array c:type="const MbimIPv4*">
              <type name="IPv4"/>
            </array>
          </parameter>
          <parameter name="ipv6_dns_server_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1416">the 'IPv6DnsServerCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="ipv6_dns_server" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1417">the 'IPv6DnsServer' field, given as an array of #MbimIPv6.</doc>
            <array c:type="const MbimIPv6*">
              <type name="IPv6"/>
            </array>
          </parameter>
          <parameter name="ipv4_mtu" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1418">the 'IPv4Mtu' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="ipv6_mtu" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1419">the 'IPv6Mtu' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="ip_packet_filters_query_new"
                   c:identifier="mbim_message_ip_packet_filters_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1805">Create a new request for the 'IP Packet Filters' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1818"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1814">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1807">the 'SessionId' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="packet_filters_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1808">the 'PacketFiltersCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="packet_filters" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1809">the 'PacketFilters' field, given as an array of #MbimPacketFilters.</doc>
            <type name="PacketFilter" c:type="const MbimPacketFilter* const*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="ip_packet_filters_set_new"
                   c:identifier="mbim_message_ip_packet_filters_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1827">Create a new request for the 'IP Packet Filters' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1840"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1836">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="session_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1829">the 'SessionId' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="packet_filters_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1830">the 'PacketFiltersCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="packet_filters" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1831">the 'PacketFilters' field, given as an array of #MbimPacketFilters.</doc>
            <type name="PacketFilter" c:type="const MbimPacketFilter* const*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="ms_basic_connect_extensions_lte_attach_configuration_query_new"
                   c:identifier="mbim_message_ms_basic_connect_extensions_lte_attach_configuration_query_new"
                   version="1.18"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="210">Create a new request for the 'Lte Attach Configuration' query command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="220"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="216">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="ms_basic_connect_extensions_lte_attach_configuration_set_new"
                   c:identifier="mbim_message_ms_basic_connect_extensions_lte_attach_configuration_set_new"
                   version="1.18"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="226">Create a new request for the 'Lte Attach Configuration' set command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="239"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="235">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="operation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="228">the 'Operation' field, given as a #MbimLteAttachContextOperation.</doc>
            <type name="LteAttachContextOperation"
                  c:type="MbimLteAttachContextOperation"/>
          </parameter>
          <parameter name="configuration_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="229">the 'ConfigurationCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="configurations" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="230">the 'Configurations' field, given as an array of #MbimLteAttachConfigurations.</doc>
            <type name="LteAttachConfiguration"
                  c:type="const MbimLteAttachConfiguration* const*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="ms_basic_connect_extensions_lte_attach_status_query_new"
                   c:identifier="mbim_message_ms_basic_connect_extensions_lte_attach_status_query_new"
                   version="1.18"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="292">Create a new request for the 'Lte Attach Status' query command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="302"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="298">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="ms_basic_connect_extensions_pco_query_new"
                   c:identifier="mbim_message_ms_basic_connect_extensions_pco_query_new"
                   version="1.18"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="152">Create a new request for the 'PCO' query command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="163"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="159">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="pco_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="154">the 'PcoValue' field, given as a #MbimPcoValue.</doc>
            <type name="PcoValue" c:type="const MbimPcoValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="ms_firmware_id_get_query_new"
                   c:identifier="mbim_message_ms_firmware_id_get_query_new"
                   version="1.8"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-firmware-id.h"
             line="40">Create a new request for the 'Get' query command in the 'MS Firmware ID' service.</doc>
        <source-position filename="generated/mbim-ms-firmware-id.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-firmware-id.h"
               line="46">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="ms_host_shutdown_notify_set_new"
                   c:identifier="mbim_message_ms_host_shutdown_notify_set_new"
                   version="1.8"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-host-shutdown.h"
             line="40">Create a new request for the 'Notify' set command in the 'MS Host Shutdown' service.</doc>
        <source-position filename="generated/mbim-ms-host-shutdown.h"
                         line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-host-shutdown.h"
               line="46">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="multicarrier_providers_query_new"
                   c:identifier="mbim_message_multicarrier_providers_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1873">Create a new request for the 'Multicarrier Providers' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1883"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1879">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="multicarrier_providers_set_new"
                   c:identifier="mbim_message_multicarrier_providers_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1889">Create a new request for the 'Multicarrier Providers' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1901"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1897">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="providers_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1891">the 'ProvidersCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="providers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1892">the 'Providers' field, given as an array of #MbimProviders.</doc>
            <type name="Provider" c:type="const MbimProvider* const*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="network_idle_hint_query_new"
                   c:identifier="mbim_message_network_idle_hint_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1677">Create a new request for the 'Network Idle Hint' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1687"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1683">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="network_idle_hint_set_new"
                   c:identifier="mbim_message_network_idle_hint_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1693">Create a new request for the 'Network Idle Hint' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1704"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1700">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1695">the 'State' field, given as a #MbimNetworkIdleHintState.</doc>
            <type name="NetworkIdleHintState"
                  c:type="MbimNetworkIdleHintState"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="mbim_message_new" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="121">Create a #MbimMessage with the given contents.</doc>
        <source-position filename="mbim-message.h" line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="128">a newly created #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="123">contents of the message.</doc>
            <type name="guint8" c:type="const guint8*"/>
          </parameter>
          <parameter name="data_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="124">length of the message.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="open_done_new"
                   c:identifier="mbim_message_open_done_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="287">Create a new #MbimMessage of type %MBIM_MESSAGE_TYPE_OPEN_DONE with the specified
parameters.</doc>
        <source-position filename="mbim-message.h" line="299"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="295">a newly created #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="289">transaction ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="error_status_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="290">a #MbimStatusError.</doc>
            <type name="StatusError" c:type="MbimStatusError"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="open_new"
                   c:identifier="mbim_message_open_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="255">Create a new #MbimMessage of type %MBIM_MESSAGE_TYPE_OPEN with the specified
parameters.</doc>
        <source-position filename="mbim-message.h" line="268"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="263">a newly created #MbimMessage. The returned value
should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="257">transaction ID.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="max_control_transfer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="258">maximum control transfer.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="packet_service_query_new"
                   c:identifier="mbim_message_packet_service_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1055">Create a new request for the 'Packet Service' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1065"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1061">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="packet_service_set_new"
                   c:identifier="mbim_message_packet_service_set_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1071">Create a new request for the 'Packet Service' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1082"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1078">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="packet_service_action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1073">the 'PacketServiceAction' field, given as a #MbimPacketServiceAction.</doc>
            <type name="PacketServiceAction" c:type="MbimPacketServiceAction"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="packet_statistics_query_new"
                   c:identifier="mbim_message_packet_statistics_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1627">Create a new request for the 'Packet Statistics' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1637"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1633">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="phonebook_configuration_query_new"
                   c:identifier="mbim_message_phonebook_configuration_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="76">Create a new request for the 'Configuration' query command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="86"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="82">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="phonebook_delete_set_new"
                   c:identifier="mbim_message_phonebook_delete_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="190">Create a new request for the 'Delete' set command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="202"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="198">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="filter_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="192">the 'FilterFlag' field, given as a #MbimPhonebookFlag.</doc>
            <type name="PhonebookFlag" c:type="MbimPhonebookFlag"/>
          </parameter>
          <parameter name="filter_message_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="193">the 'FilterMessageIndex' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="phonebook_read_query_new"
                   c:identifier="mbim_message_phonebook_read_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="148">Create a new request for the 'Read' query command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="160"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="156">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="filter_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="150">the 'FilterFlag' field, given as a #MbimPhonebookFlag.</doc>
            <type name="PhonebookFlag" c:type="MbimPhonebookFlag"/>
          </parameter>
          <parameter name="filter_message_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="151">the 'FilterMessageIndex' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="phonebook_write_set_new"
                   c:identifier="mbim_message_phonebook_write_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="228">Create a new request for the 'Write' set command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="242"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="238">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="save_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="230">the 'SaveFlag' field, given as a #MbimPhonebookWriteFlag.</doc>
            <type name="PhonebookWriteFlag" c:type="MbimPhonebookWriteFlag"/>
          </parameter>
          <parameter name="save_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="231">the 'SaveIndex' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="232">the 'Number' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="233">the 'Name' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="pin_list_query_new"
                   c:identifier="mbim_message_pin_list_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="623">Create a new request for the 'Pin List' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="633"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="629">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="pin_query_new"
                   c:identifier="mbim_message_pin_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="559">Create a new request for the 'Pin' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="569"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="565">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="pin_set_new"
                   c:identifier="mbim_message_pin_set_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="575">Create a new request for the 'Pin' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="589"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="585">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="pin_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="577">the 'PinType' field, given as a #MbimPinType.</doc>
            <type name="PinType" c:type="MbimPinType"/>
          </parameter>
          <parameter name="pin_operation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="578">the 'PinOperation' field, given as a #MbimPinOperation.</doc>
            <type name="PinOperation" c:type="MbimPinOperation"/>
          </parameter>
          <parameter name="pin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="579">the 'Pin' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="new_pin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="580">the 'NewPin' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="preferred_providers_query_new"
                   c:identifier="mbim_message_preferred_providers_query_new"
                   version="1.2"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="731">Create a new request for the 'Preferred Providers' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="741"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="737">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="preferred_providers_set_new"
                   c:identifier="mbim_message_preferred_providers_set_new"
                   version="1.2"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="747">Create a new request for the 'Preferred Providers' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="759"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="755">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="providers_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="749">the 'ProvidersCount' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="providers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="750">the 'Providers' field, given as an array of #MbimProviders.</doc>
            <type name="Provider" c:type="const MbimProvider* const*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="provisioned_contexts_query_new"
                   c:identifier="mbim_message_provisioned_contexts_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1267">Create a new request for the 'Provisioned Contexts' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1277"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1273">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="provisioned_contexts_set_new"
                   c:identifier="mbim_message_provisioned_contexts_set_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1283">Create a new request for the 'Provisioned Contexts' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1301"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1297">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="context_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1285">the 'ContextId' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="context_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1286">the 'ContextType' field, given as a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </parameter>
          <parameter name="access_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1287">the 'AccessString' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1288">the 'UserName' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1289">the 'Password' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="compression" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1290">the 'Compression' field, given as a #MbimCompression.</doc>
            <type name="Compression" c:type="MbimCompression"/>
          </parameter>
          <parameter name="auth_protocol" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1291">the 'AuthProtocol' field, given as a #MbimAuthProtocol.</doc>
            <type name="AuthProtocol" c:type="MbimAuthProtocol"/>
          </parameter>
          <parameter name="provider_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1292">the 'ProviderId' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="proxy_control_configuration_set_new"
                   c:identifier="mbim_message_proxy_control_configuration_set_new"
                   version="1.10"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-proxy-control.h"
             line="40">Create a new request for the 'Configuration' set command in the 'Proxy Control' service.</doc>
        <source-position filename="generated/mbim-proxy-control.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-proxy-control.h"
               line="48">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="device_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-proxy-control.h"
                 line="42">the 'DevicePath' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-proxy-control.h"
                 line="43">the 'Timeout' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="qmi_msg_set_new"
                   c:identifier="mbim_message_qmi_msg_set_new"
                   version="1.14"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-qmi.h"
             line="40">Create a new request for the 'msg' set command in the 'QMI' service.</doc>
        <source-position filename="generated/mbim-qmi.h" line="52"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-qmi.h"
               line="48">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="qmi_msg_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="42">size of the qmi_msg array.</doc>
            <type name="guint32" c:type="const guint32"/>
          </parameter>
          <parameter name="qmi_msg" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="43">the 'QmiMsg' field, given as an array of #guint8 values.</doc>
            <array length="0" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="radio_state_query_new"
                   c:identifier="mbim_message_radio_state_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="481">Create a new request for the 'Radio State' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="491"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="487">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="radio_state_set_new"
                   c:identifier="mbim_message_radio_state_set_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="497">Create a new request for the 'Radio State' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="508"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="504">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="radio_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="499">the 'RadioState' field, given as a #MbimRadioSwitchState.</doc>
            <type name="RadioSwitchState" c:type="MbimRadioSwitchState"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="register_state_query_new"
                   c:identifier="mbim_message_register_state_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="851">Create a new request for the 'Register State' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="861"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="857">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="register_state_set_new"
                   c:identifier="mbim_message_register_state_set_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="867">Create a new request for the 'Register State' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="880"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="876">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="provider_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="869">the 'ProviderId' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="register_action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="870">the 'RegisterAction' field, given as a #MbimRegisterAction.</doc>
            <type name="RegisterAction" c:type="MbimRegisterAction"/>
          </parameter>
          <parameter name="data_class" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="871">the 'DataClass' field, given as a #MbimDataClass.</doc>
            <type name="DataClass" c:type="MbimDataClass"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="service_activation_set_new"
                   c:identifier="mbim_message_service_activation_set_new"
                   version="1.2"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1359">Create a new request for the 'Service Activation' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1371"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1367">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="buffer_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1361">size of the buffer array.</doc>
            <type name="guint32" c:type="const guint32"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1362">the 'Buffer' field, given as an array of #guint8 values.</doc>
            <array length="0" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="signal_state_query_new"
                   c:identifier="mbim_message_signal_state_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="961">Create a new request for the 'Signal State' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="971"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="967">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="signal_state_set_new"
                   c:identifier="mbim_message_signal_state_set_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="977">Create a new request for the 'Signal State' set command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="990"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="986">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="signal_strength_interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="979">the 'SignalStrengthInterval' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="rssi_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="980">the 'RssiThreshold' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="error_rate_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="981">the 'ErrorRateThreshold' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="sms_configuration_query_new"
                   c:identifier="mbim_message_sms_configuration_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="186">Create a new request for the 'Configuration' query command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="196"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="192">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="sms_configuration_set_new"
                   c:identifier="mbim_message_sms_configuration_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="202">Create a new request for the 'Configuration' set command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="214"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="210">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="204">the 'Format' field, given as a #MbimSmsFormat.</doc>
            <type name="SmsFormat" c:type="MbimSmsFormat"/>
          </parameter>
          <parameter name="sc_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="205">the 'ScAddress' field, given as a string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="sms_delete_set_new"
                   c:identifier="mbim_message_sms_delete_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="366">Create a new request for the 'Delete' set command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="378"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="374">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="368">the 'Flag' field, given as a #MbimSmsFlag.</doc>
            <type name="SmsFlag" c:type="MbimSmsFlag"/>
          </parameter>
          <parameter name="message_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="369">the 'MessageIndex' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="sms_message_store_status_query_new"
                   c:identifier="mbim_message_sms_message_store_status_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="404">Create a new request for the 'Message Store Status' query command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="414"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="410">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="sms_read_query_new"
                   c:identifier="mbim_message_sms_read_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="250">Create a new request for the 'Read' query command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="263"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="259">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="252">the 'Format' field, given as a #MbimSmsFormat.</doc>
            <type name="SmsFormat" c:type="MbimSmsFormat"/>
          </parameter>
          <parameter name="flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="253">the 'Flag' field, given as a #MbimSmsFlag.</doc>
            <type name="SmsFlag" c:type="MbimSmsFlag"/>
          </parameter>
          <parameter name="message_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="254">the 'MessageIndex' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="sms_send_set_new"
                   c:identifier="mbim_message_sms_send_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="324">Create a new request for the 'Send' set command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="337"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="333">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="326">the 'Format' field, given as a #MbimSmsFormat.</doc>
            <type name="SmsFormat" c:type="MbimSmsFormat"/>
          </parameter>
          <parameter name="pdu_message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="327">the 'PduMessage' field, given as a #MbimSmsPduSendRecord.</doc>
            <type name="SmsPduSendRecord"
                  c:type="const MbimSmsPduSendRecord*"/>
          </parameter>
          <parameter name="cdma_message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="328">the 'CdmaMessage' field, given as a #MbimSmsCdmaSendRecord.</doc>
            <type name="SmsCdmaSendRecord"
                  c:type="const MbimSmsCdmaSendRecord*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="stk_envelope_query_new"
                   c:identifier="mbim_message_stk_envelope_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="162">Create a new request for the 'Envelope' query command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="172"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="168">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="stk_envelope_set_new"
                   c:identifier="mbim_message_stk_envelope_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="178">Create a new request for the 'Envelope' set command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="190"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="186">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="data_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="180">size of the data array.</doc>
            <type name="guint32" c:type="const guint32"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="181">the 'Data' field, given as an array of #guint8 values.</doc>
            <array length="0" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="stk_pac_query_new"
                   c:identifier="mbim_message_stk_pac_query_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="40">Create a new request for the 'Pac' query command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="46">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="stk_pac_set_new"
                   c:identifier="mbim_message_stk_pac_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="56">Create a new request for the 'Pac' set command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="63">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="pac_host_control" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="58">the 'PacHostControl' field, given as an array of 32 #guint8 values.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="32">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="stk_terminal_response_set_new"
                   c:identifier="mbim_message_stk_terminal_response_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="118">Create a new request for the 'Terminal Response' set command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="126">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="response_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="120">size of the response array.</doc>
            <type name="guint32" c:type="const guint32"/>
          </parameter>
          <parameter name="response" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="121">the 'Response' field, given as an array of #guint8 values.</doc>
            <array length="0" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="subscriber_ready_status_query_new"
                   c:identifier="mbim_message_subscriber_ready_status_query_new"
                   version="1.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="405">Create a new request for the 'Subscriber Ready Status' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="415"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="411">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
      </constructor>
      <constructor name="ussd_set_new"
                   c:identifier="mbim_message_ussd_set_new"
                   version="1.4"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ussd.h"
             line="40">Create a new request for the '' set command in the 'USSD' service.</doc>
        <source-position filename="generated/mbim-ussd.h" line="54"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-ussd.h"
               line="50">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="42">the 'Action' field, given as a #MbimUssdAction.</doc>
            <type name="UssdAction" c:type="MbimUssdAction"/>
          </parameter>
          <parameter name="data_coding_scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="43">the 'DataCodingScheme' field, given as a #guint32.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="payload_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="44">size of the payload array.</doc>
            <type name="guint32" c:type="const guint32"/>
          </parameter>
          <parameter name="payload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="45">the 'Payload' field, given as an array of #guint8 values.</doc>
            <array length="2" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="visible_providers_query_new"
                   c:identifier="mbim_message_visible_providers_query_new"
                   version="1.2"
                   throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="811">Create a new request for the 'Visible Providers' query command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="822"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="818">a newly allocated #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="813">the 'Action' field, given as a #MbimVisibleProvidersAction.</doc>
            <type name="VisibleProvidersAction"
                  c:type="MbimVisibleProvidersAction"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="atds_location_response_parse"
              c:identifier="mbim_message_atds_location_response_parse"
              version="1.16"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="146">Parses and returns parameters of the 'Location' response command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="156">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="148">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_lac"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="149">return location for a #guint32, or %NULL if the 'Lac' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_tac"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="150">return location for a #guint32, or %NULL if the 'Tac' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_cell_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="151">return location for a #guint32, or %NULL if the 'CellId' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="atds_operators_response_parse"
              c:identifier="mbim_message_atds_operators_response_parse"
              version="1.16"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="186">Parses and returns parameters of the 'Operators' response command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="199"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="195">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="188">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_providers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="189">return location for a #guint32, or %NULL if the 'ProvidersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_providers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="190">return location for a newly allocated array of #MbimAtdsProviders, or %NULL if the 'Providers' field is not needed. Free the returned value with mbim_atds_provider_array_free().</doc>
            <array c:type="MbimAtdsProviderArray**">
              <type name="AtdsProvider"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="atds_rat_response_parse"
              c:identifier="mbim_message_atds_rat_response_parse"
              version="1.16"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="242">Parses and returns parameters of the 'RAT' response command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="254"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="250">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="244">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="245">return location for a #MbimAtdsRatMode, or %NULL if the 'Mode' field is not needed.</doc>
            <type name="AtdsRatMode" c:type="MbimAtdsRatMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="atds_register_state_response_parse"
              c:identifier="mbim_message_atds_register_state_response_parse"
              version="1.16"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="278">Parses and returns parameters of the 'Register State' response command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="298"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="294">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="280">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="281">return location for a #MbimNwError, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="NwError" c:type="MbimNwError*"/>
          </parameter>
          <parameter name="out_register_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="282">return location for a #MbimRegisterState, or %NULL if the 'RegisterState' field is not needed.</doc>
            <type name="RegisterState" c:type="MbimRegisterState*"/>
          </parameter>
          <parameter name="out_register_mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="283">return location for a #MbimRegisterMode, or %NULL if the 'RegisterMode' field is not needed.</doc>
            <type name="RegisterMode" c:type="MbimRegisterMode*"/>
          </parameter>
          <parameter name="out_available_data_classes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="284">return location for a #MbimDataClass, or %NULL if the 'AvailableDataClasses' field is not needed.</doc>
            <type name="DataClass" c:type="MbimDataClass*"/>
          </parameter>
          <parameter name="out_current_cellular_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="285">return location for a #MbimCellularClass, or %NULL if the 'CurrentCellularClass' field is not needed.</doc>
            <type name="CellularClass" c:type="MbimCellularClass*"/>
          </parameter>
          <parameter name="out_provider_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="286">return location for a newly allocated string, or %NULL if the 'ProviderId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_provider_name"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="287">return location for a newly allocated string, or %NULL if the 'ProviderName' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_roaming_text"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="288">return location for a newly allocated string, or %NULL if the 'RoamingText' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_registration_flag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="289">return location for a #MbimRegistrationFlag, or %NULL if the 'RegistrationFlag' field is not needed.</doc>
            <type name="RegistrationFlag" c:type="MbimRegistrationFlag*"/>
          </parameter>
        </parameters>
      </method>
      <method name="atds_signal_response_parse"
              c:identifier="mbim_message_atds_signal_response_parse"
              version="1.16"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-atds.h"
             line="98">Parses and returns parameters of the 'Signal' response command in the 'ATDS' service.</doc>
        <source-position filename="generated/mbim-atds.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="112">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="100">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_rssi"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="101">return location for a #guint32, or %NULL if the 'Rssi' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_error_rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="102">return location for a #guint32, or %NULL if the 'ErrorRate' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_rscp"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="103">return location for a #guint32, or %NULL if the 'Rscp' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ecno"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="104">return location for a #guint32, or %NULL if the 'Ecno' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_rsrq"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="105">return location for a #guint32, or %NULL if the 'Rsrq' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_rsrp"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="106">return location for a #guint32, or %NULL if the 'Rsrp' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_rssnr"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-atds.h"
                 line="107">return location for a #guint32, or %NULL if the 'Rssnr' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="auth_aka_response_parse"
              c:identifier="mbim_message_auth_aka_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-auth.h"
             line="60">Parses and returns parameters of the 'Aka' response command in the 'Auth' service.</doc>
        <source-position filename="generated/mbim-auth.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-auth.h"
               line="72">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="62">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_res"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="63">return location for an array of 16 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="out_res_len"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="64">return location for a #guint32, or %NULL if the 'ResLen' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_integrating_key"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="65">return location for an array of 16 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="out_ciphering_key"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="66">return location for an array of 16 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="out_auts"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="67">return location for an array of 14 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="14">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="auth_akap_response_parse"
              c:identifier="mbim_message_auth_akap_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-auth.h"
             line="110">Parses and returns parameters of the 'Akap' response command in the 'Auth' service.</doc>
        <source-position filename="generated/mbim-auth.h" line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-auth.h"
               line="122">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="112">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_res"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="113">return location for an array of 16 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="out_res_len"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="114">return location for a #guint32, or %NULL if the 'ResLen' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_integrating_key"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="115">return location for an array of 16 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="out_ciphering_key"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="116">return location for an array of 16 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="16">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="out_auts"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="117">return location for an array of 14 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="14">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="auth_sim_response_parse"
              c:identifier="mbim_message_auth_sim_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-auth.h"
             line="162">Parses and returns parameters of the 'Sim' response command in the 'Auth' service.</doc>
        <source-position filename="generated/mbim-auth.h" line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-auth.h"
               line="176">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="164">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_sres1"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="165">return location for a #guint32, or %NULL if the 'Sres1' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_kc1"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="166">return location for a #guint64, or %NULL if the 'Kc1' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_sres2"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="167">return location for a #guint32, or %NULL if the 'Sres2' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_kc2"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="168">return location for a #guint64, or %NULL if the 'Kc2' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_sres3"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="169">return location for a #guint32, or %NULL if the 'Sres3' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_kc3"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="170">return location for a #guint64, or %NULL if the 'Kc3' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_n"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-auth.h"
                 line="171">return location for a #guint32, or %NULL if the 'N' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_done_get_result"
              c:identifier="mbim_message_close_done_get_result"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="375">Gets the result of the 'Close' operation in the %MBIM_MESSAGE_TYPE_CLOSE_DONE message.</doc>
        <source-position filename="mbim-message.h" line="386"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="382">%TRUE if the operation succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="377">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="close_done_get_status_code"
              c:identifier="mbim_message_close_done_get_status_code"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="363">Get status code from the %MBIM_MESSAGE_TYPE_CLOSE_DONE message.</doc>
        <source-position filename="mbim-message.h" line="373"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="369">a #MbimStatusError.</doc>
          <type name="StatusError" c:type="MbimStatusError"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="365">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_append"
              c:identifier="mbim_message_command_append"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="489">Appends the contents of @buffer to @self.</doc>
        <source-position filename="mbim-message.h" line="499"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="491">a #MbimMessage.</doc>
            <type name="Message" c:type="MbimMessage*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="492">raw buffer to append to the message.</doc>
            <type name="guint8" c:type="const guint8*"/>
          </parameter>
          <parameter name="buffer_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="493">length of the data in @buffer.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="command_done_get_cid"
              c:identifier="mbim_message_command_done_get_cid"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="592">Get the command id of a %MBIM_MESSAGE_TYPE_COMMAND_DONE message.</doc>
        <source-position filename="mbim-message.h" line="602"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="598">a CID.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="594">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_done_get_raw_information_buffer"
              c:identifier="mbim_message_command_done_get_raw_information_buffer"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="630">Gets the information buffer of the %MBIM_MESSAGE_TYPE_COMMAND_DONE message.</doc>
        <source-position filename="mbim-message.h" line="641"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="637">The raw data buffer, or #NULL if empty.</doc>
          <type name="guint8" c:type="const guint8*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="632">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="633">return location for the size of the output buffer.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="command_done_get_result"
              c:identifier="mbim_message_command_done_get_result"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="616">Gets the result of the 'Command' operation in the %MBIM_MESSAGE_TYPE_COMMAND_DONE message.</doc>
        <source-position filename="mbim-message.h" line="627"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="623">%TRUE if the operation succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="618">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_done_get_service"
              c:identifier="mbim_message_command_done_get_service"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="568">Get the service of a %MBIM_MESSAGE_TYPE_COMMAND_DONE message.</doc>
        <source-position filename="mbim-message.h" line="578"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="574">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="570">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_done_get_service_id"
              c:identifier="mbim_message_command_done_get_service_id"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="580">Get the service UUID of a %MBIM_MESSAGE_TYPE_COMMAND_DONE message.</doc>
        <source-position filename="mbim-message.h" line="590"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="586">a #MbimUuid.</doc>
          <type name="Uuid" c:type="const MbimUuid*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="582">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_done_get_status_code"
              c:identifier="mbim_message_command_done_get_status_code"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="604">Get status code from the %MBIM_MESSAGE_TYPE_COMMAND_DONE message.</doc>
        <source-position filename="mbim-message.h" line="614"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="610">a #MbimStatusError.</doc>
          <type name="StatusError" c:type="MbimStatusError"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="606">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_get_cid"
              c:identifier="mbim_message_command_get_cid"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="527">Get the command id of a %MBIM_MESSAGE_TYPE_COMMAND message.</doc>
        <source-position filename="mbim-message.h" line="537"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="533">a CID.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="529">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_get_command_type"
              c:identifier="mbim_message_command_get_command_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="539">Get the command type of a %MBIM_MESSAGE_TYPE_COMMAND message.</doc>
        <source-position filename="mbim-message.h" line="549"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="545">a #MbimMessageCommandType.</doc>
          <type name="MessageCommandType" c:type="MbimMessageCommandType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="541">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_get_raw_information_buffer"
              c:identifier="mbim_message_command_get_raw_information_buffer"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="551">Gets the information buffer of the %MBIM_MESSAGE_TYPE_COMMAND message.</doc>
        <source-position filename="mbim-message.h" line="562"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="558">The raw data buffer, or #NULL if empty.</doc>
          <type name="guint8" c:type="const guint8*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="553">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="554">return location for the size of the output buffer.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="command_get_service"
              c:identifier="mbim_message_command_get_service"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="503">Get the service of a %MBIM_MESSAGE_TYPE_COMMAND message.</doc>
        <source-position filename="mbim-message.h" line="513"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="509">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="505">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="command_get_service_id"
              c:identifier="mbim_message_command_get_service_id"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="515">Get the service UUID of a %MBIM_MESSAGE_TYPE_COMMAND message.</doc>
        <source-position filename="mbim-message.h" line="525"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="521">a #MbimUuid.</doc>
          <type name="Uuid" c:type="const MbimUuid*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="517">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="connect_notification_parse"
              c:identifier="mbim_message_connect_notification_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1237">Parses and returns parameters of the 'Connect' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1254"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1250">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1239">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_session_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1240">return location for a #guint32, or %NULL if the 'SessionId' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_activation_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1241">return location for a #MbimActivationState, or %NULL if the 'ActivationState' field is not needed.</doc>
            <type name="ActivationState" c:type="MbimActivationState*"/>
          </parameter>
          <parameter name="out_voice_call_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1242">return location for a #MbimVoiceCallState, or %NULL if the 'VoiceCallState' field is not needed.</doc>
            <type name="VoiceCallState" c:type="MbimVoiceCallState*"/>
          </parameter>
          <parameter name="out_ip_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1243">return location for a #MbimContextIpType, or %NULL if the 'IpType' field is not needed.</doc>
            <type name="ContextIpType" c:type="MbimContextIpType*"/>
          </parameter>
          <parameter name="out_context_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1244">return location for a #MbimUuid, or %NULL if the 'ContextType' field is not needed. Do not free the returned value, it is owned by @message.</doc>
            <type name="Uuid" c:type="const MbimUuid**"/>
          </parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1245">return location for a #guint32, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_response_parse"
              c:identifier="mbim_message_connect_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1207">Parses and returns parameters of the 'Connect' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1224"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1220">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1209">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_session_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1210">return location for a #guint32, or %NULL if the 'SessionId' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_activation_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1211">return location for a #MbimActivationState, or %NULL if the 'ActivationState' field is not needed.</doc>
            <type name="ActivationState" c:type="MbimActivationState*"/>
          </parameter>
          <parameter name="out_voice_call_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1212">return location for a #MbimVoiceCallState, or %NULL if the 'VoiceCallState' field is not needed.</doc>
            <type name="VoiceCallState" c:type="MbimVoiceCallState*"/>
          </parameter>
          <parameter name="out_ip_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1213">return location for a #MbimContextIpType, or %NULL if the 'IpType' field is not needed.</doc>
            <type name="ContextIpType" c:type="MbimContextIpType*"/>
          </parameter>
          <parameter name="out_context_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1214">return location for a #MbimUuid, or %NULL if the 'ContextType' field is not needed. Do not free the returned value, it is owned by @message.</doc>
            <type name="Uuid" c:type="const MbimUuid**"/>
          </parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1215">return location for a #guint32, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="device_caps_response_parse"
              c:identifier="mbim_message_device_caps_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="363">Parses and returns parameters of the 'Device Caps' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="386"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="382">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="365">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_device_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="366">return location for a #MbimDeviceType, or %NULL if the 'DeviceType' field is not needed.</doc>
            <type name="DeviceType" c:type="MbimDeviceType*"/>
          </parameter>
          <parameter name="out_cellular_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="367">return location for a #MbimCellularClass, or %NULL if the 'CellularClass' field is not needed.</doc>
            <type name="CellularClass" c:type="MbimCellularClass*"/>
          </parameter>
          <parameter name="out_voice_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="368">return location for a #MbimVoiceClass, or %NULL if the 'VoiceClass' field is not needed.</doc>
            <type name="VoiceClass" c:type="MbimVoiceClass*"/>
          </parameter>
          <parameter name="out_sim_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="369">return location for a #MbimSimClass, or %NULL if the 'SimClass' field is not needed.</doc>
            <type name="SimClass" c:type="MbimSimClass*"/>
          </parameter>
          <parameter name="out_data_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="370">return location for a #MbimDataClass, or %NULL if the 'DataClass' field is not needed.</doc>
            <type name="DataClass" c:type="MbimDataClass*"/>
          </parameter>
          <parameter name="out_sms_caps"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="371">return location for a #MbimSmsCaps, or %NULL if the 'SmsCaps' field is not needed.</doc>
            <type name="SmsCaps" c:type="MbimSmsCaps*"/>
          </parameter>
          <parameter name="out_control_caps"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="372">return location for a #MbimCtrlCaps, or %NULL if the 'ControlCaps' field is not needed.</doc>
            <type name="CtrlCaps" c:type="MbimCtrlCaps*"/>
          </parameter>
          <parameter name="out_max_sessions"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="373">return location for a #guint32, or %NULL if the 'MaxSessions' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_custom_data_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="374">return location for a newly allocated string, or %NULL if the 'CustomDataClass' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_device_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="375">return location for a newly allocated string, or %NULL if the 'DeviceId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_firmware_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="376">return location for a newly allocated string, or %NULL if the 'FirmwareInfo' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_hardware_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="377">return location for a newly allocated string, or %NULL if the 'HardwareInfo' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="device_service_subscribe_list_response_parse"
              c:identifier="mbim_message_device_service_subscribe_list_response_parse"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1605">Parses and returns parameters of the 'Device Service Subscribe List' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1618"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1614">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1607">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_events_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1608">return location for a #guint32, or %NULL if the 'EventsCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_events"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1609">return location for a newly allocated array of #MbimEventEntrys, or %NULL if the 'Events' field is not needed. Free the returned value with mbim_event_entry_array_free().</doc>
            <array c:type="MbimEventEntryArray**">
              <type name="EventEntry"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="device_service_subscriber_list_response_parse"
              c:identifier="mbim_message_device_service_subscriber_list_response_parse"
              version="1.0"
              deprecated="1"
              deprecated-version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-compat.h"
             line="98">Create a new request for the 'Events' response command in the 'Basic Connect' service.</doc>
        <doc-deprecated xml:space="preserve">Use mbim_message_device_service_subscribe_list_response_parse() instead.</doc-deprecated>
        <source-position filename="mbim-compat.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-compat.h"
               line="107">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-compat.h"
                 line="100">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="events_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-compat.h"
                 line="101">return location for a #guint32, or %NULL if the 'EventsCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-compat.h"
                 line="102">return location for a newly allocated array of #MbimEventEntrys, or %NULL if the 'Events' field is not needed. Free the returned value with mbim_event_entry_array_free().</doc>
            <type name="EventEntry" c:type="MbimEventEntry***"/>
          </parameter>
        </parameters>
      </method>
      <method name="device_services_response_parse"
              c:identifier="mbim_message_device_services_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1561">Parses and returns parameters of the 'Device Services' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1575"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1571">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1563">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_device_services_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1564">return location for a #guint32, or %NULL if the 'DeviceServicesCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_max_dss_sessions"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1565">return location for a #guint32, or %NULL if the 'MaxDssSessions' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_device_services"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1566">return location for a newly allocated array of #MbimDeviceServiceElements, or %NULL if the 'DeviceServices' field is not needed. Free the returned value with mbim_device_service_element_array_free().</doc>
            <array c:type="MbimDeviceServiceElementArray**">
              <type name="DeviceServiceElement"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="dss_connect_response_parse"
              c:identifier="mbim_message_dss_connect_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-dss.h"
             line="62">Parses and returns parameters of the 'Connect' response command in the 'DSS' service.</doc>
        <source-position filename="generated/mbim-dss.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-dss.h"
               line="69">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-dss.h"
                 line="64">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="dup" c:identifier="mbim_message_dup" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="135">Create a #MbimMessage with the same contents as @self.</doc>
        <source-position filename="mbim-message.h" line="145"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="141">a newly created #MbimMessage, which should be freed with mbim_message_unref().</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="137">a #MbimMessage to duplicate.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="emergency_mode_notification_parse"
              c:identifier="mbim_message_emergency_mode_notification_parse"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1785">Parses and returns parameters of the 'Emergency Mode' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1797"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1793">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1787">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1788">return location for a #MbimEmergencyModeState, or %NULL if the 'State' field is not needed.</doc>
            <type name="EmergencyModeState" c:type="MbimEmergencyModeState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emergency_mode_response_parse"
              c:identifier="mbim_message_emergency_mode_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1765">Parses and returns parameters of the 'Emergency Mode' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1777"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1773">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1767">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1768">return location for a #MbimEmergencyModeState, or %NULL if the 'State' field is not needed.</doc>
            <type name="EmergencyModeState" c:type="MbimEmergencyModeState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="error_get_error"
              c:identifier="mbim_message_error_get_error"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="437">Get the error in a %MBIM_MESSAGE_TYPE_HOST_ERROR or
%MBIM_MESSAGE_TYPE_FUNCTION_ERROR message.</doc>
        <source-position filename="mbim-message.h" line="448"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="444">a newly allocated #GError, which should be freed with g_error_free().</doc>
          <type name="GLib.Error" c:type="GError*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="439">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="error_get_error_status_code"
              c:identifier="mbim_message_error_get_error_status_code"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="424">Get the error code in a %MBIM_MESSAGE_TYPE_HOST_ERROR or
%MBIM_MESSAGE_TYPE_FUNCTION_ERROR message.</doc>
        <source-position filename="mbim-message.h" line="435"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="431">a #MbimProtocolError.</doc>
          <type name="ProtocolError" c:type="MbimProtocolError"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="426">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_message_length"
              c:identifier="mbim_message_get_message_length"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="214">Gets the whole message length.</doc>
        <source-position filename="mbim-message.h" line="224"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="220">the length of the message.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="216">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_message_type"
              c:identifier="mbim_message_get_message_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="202">Gets the message type.</doc>
        <source-position filename="mbim-message.h" line="212"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="208">a #MbimMessageType.</doc>
          <type name="MessageType" c:type="MbimMessageType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="204">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_printable"
              c:identifier="mbim_message_get_printable"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="170">Gets a printable string with the contents of the whole MBIM message.</doc>
        <source-position filename="mbim-message.h" line="182"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="178">a newly allocated string, which should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="172">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="line_prefix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="173">prefix string to use in each new generated line.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="headers_only" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="174">%TRUE if only basic headers should be printed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_raw"
              c:identifier="mbim_message_get_raw"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="186">Gets the whole raw data buffer of the #MbimMessage.</doc>
        <source-position filename="mbim-message.h" line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="194">The raw data buffer, or #NULL if @error is set.</doc>
          <type name="guint8" c:type="const guint8*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="188">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="189">return location for the size of the output buffer.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transaction_id"
              c:identifier="mbim_message_get_transaction_id"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="226">Gets the transaction ID of the message.</doc>
        <source-position filename="mbim-message.h" line="236"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="232">the transaction ID.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="228">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="home_provider_response_parse"
              c:identifier="mbim_message_home_provider_response_parse"
              version="1.2"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="711">Parses and returns parameters of the 'Home Provider' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="723"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="719">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="713">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_provider"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="714">return location for a newly allocated #MbimProvider, or %NULL if the 'Provider' field is not needed. Free the returned value with mbim_provider_free().</doc>
            <type name="Provider" c:type="MbimProvider**"/>
          </parameter>
        </parameters>
      </method>
      <method name="indicate_status_get_cid"
              c:identifier="mbim_message_indicate_status_get_cid"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="671">Get the command id of a %MBIM_MESSAGE_TYPE_INDICATE_STATUS message.</doc>
        <source-position filename="mbim-message.h" line="681"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="677">a CID.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="673">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="indicate_status_get_raw_information_buffer"
              c:identifier="mbim_message_indicate_status_get_raw_information_buffer"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="683">Gets the information buffer of the %MBIM_MESSAGE_TYPE_INDICATE_STATUS message.</doc>
        <source-position filename="mbim-message.h" line="694"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="690">The raw data buffer, or #NULL if empty.</doc>
          <type name="guint8" c:type="const guint8*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="685">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="686">return location for the size of the output buffer.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="indicate_status_get_service"
              c:identifier="mbim_message_indicate_status_get_service"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="647">Get the service of a %MBIM_MESSAGE_TYPE_INDICATE_STATUS message.</doc>
        <source-position filename="mbim-message.h" line="657"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="653">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="649">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="indicate_status_get_service_id"
              c:identifier="mbim_message_indicate_status_get_service_id"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="659">Get the service UUID of a %MBIM_MESSAGE_TYPE_INDICATE_STATUS message.</doc>
        <source-position filename="mbim-message.h" line="669"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="665">a #MbimUuid.</doc>
          <type name="Uuid" c:type="const MbimUuid*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="661">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ip_configuration_notification_parse"
              c:identifier="mbim_message_ip_configuration_notification_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1497">Parses and returns parameters of the 'IP Configuration' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1523"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1519">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1499">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_session_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1500">return location for a #guint32, or %NULL if the 'SessionId' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv4_configuration_available"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1501">return location for a #MbimIPConfigurationAvailableFlag, or %NULL if the 'IPv4ConfigurationAvailable' field is not needed.</doc>
            <type name="IPConfigurationAvailableFlag"
                  c:type="MbimIPConfigurationAvailableFlag*"/>
          </parameter>
          <parameter name="out_ipv6_configuration_available"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1502">return location for a #MbimIPConfigurationAvailableFlag, or %NULL if the 'IPv6ConfigurationAvailable' field is not needed.</doc>
            <type name="IPConfigurationAvailableFlag"
                  c:type="MbimIPConfigurationAvailableFlag*"/>
          </parameter>
          <parameter name="out_ipv4_address_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1503">return location for a #guint32, or %NULL if the 'IPv4AddressCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv4_address"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1504">return location for a newly allocated array of #MbimIPv4Elements, or %NULL if the 'IPv4Address' field is not needed. Free the returned value with mbim_ipv4_element_array_free().</doc>
            <array c:type="MbimIPv4ElementArray**">
              <type name="IPv4Element"/>
            </array>
          </parameter>
          <parameter name="out_ipv6_address_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1505">return location for a #guint32, or %NULL if the 'IPv6AddressCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv6_address"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1506">return location for a newly allocated array of #MbimIPv6Elements, or %NULL if the 'IPv6Address' field is not needed. Free the returned value with mbim_ipv6_element_array_free().</doc>
            <array c:type="MbimIPv6ElementArray**">
              <type name="IPv6Element"/>
            </array>
          </parameter>
          <parameter name="out_ipv4_gateway"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1507">return location for a #MbimIPv4, or %NULL if the 'IPv4Gateway' field is not needed. Do not free the returned value, it is owned by @message.</doc>
            <type name="IPv4" c:type="const MbimIPv4**"/>
          </parameter>
          <parameter name="out_ipv6_gateway"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1508">return location for a #MbimIPv6, or %NULL if the 'IPv6Gateway' field is not needed. Do not free the returned value, it is owned by @message.</doc>
            <type name="IPv6" c:type="const MbimIPv6**"/>
          </parameter>
          <parameter name="out_ipv4_dns_server_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1509">return location for a #guint32, or %NULL if the 'IPv4DnsServerCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv4_dns_server"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1510">return location for a newly allocated array of #MbimIPv4s, or %NULL if the 'IPv4DnsServer' field is not needed. Free the returned value with g_free().</doc>
            <array c:type="MbimIPv4**">
              <type name="IPv4"/>
            </array>
          </parameter>
          <parameter name="out_ipv6_dns_server_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1511">return location for a #guint32, or %NULL if the 'IPv6DnsServerCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv6_dns_server"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1512">return location for a newly allocated array of #MbimIPv6s, or %NULL if the 'IPv6DnsServer' field is not needed. Free the returned value with g_free().</doc>
            <array c:type="MbimIPv6**">
              <type name="IPv6"/>
            </array>
          </parameter>
          <parameter name="out_ipv4_mtu"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1513">return location for a #guint32, or %NULL if the 'IPv4Mtu' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv6_mtu"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1514">return location for a #guint32, or %NULL if the 'IPv6Mtu' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ip_configuration_response_parse"
              c:identifier="mbim_message_ip_configuration_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1449">Parses and returns parameters of the 'IP Configuration' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1475"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1471">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1451">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_session_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1452">return location for a #guint32, or %NULL if the 'SessionId' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv4_configuration_available"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1453">return location for a #MbimIPConfigurationAvailableFlag, or %NULL if the 'IPv4ConfigurationAvailable' field is not needed.</doc>
            <type name="IPConfigurationAvailableFlag"
                  c:type="MbimIPConfigurationAvailableFlag*"/>
          </parameter>
          <parameter name="out_ipv6_configuration_available"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1454">return location for a #MbimIPConfigurationAvailableFlag, or %NULL if the 'IPv6ConfigurationAvailable' field is not needed.</doc>
            <type name="IPConfigurationAvailableFlag"
                  c:type="MbimIPConfigurationAvailableFlag*"/>
          </parameter>
          <parameter name="out_ipv4_address_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1455">return location for a #guint32, or %NULL if the 'IPv4AddressCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv4_address"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1456">return location for a newly allocated array of #MbimIPv4Elements, or %NULL if the 'IPv4Address' field is not needed. Free the returned value with mbim_ipv4_element_array_free().</doc>
            <array c:type="MbimIPv4ElementArray**">
              <type name="IPv4Element"/>
            </array>
          </parameter>
          <parameter name="out_ipv6_address_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1457">return location for a #guint32, or %NULL if the 'IPv6AddressCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv6_address"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1458">return location for a newly allocated array of #MbimIPv6Elements, or %NULL if the 'IPv6Address' field is not needed. Free the returned value with mbim_ipv6_element_array_free().</doc>
            <array c:type="MbimIPv6ElementArray**">
              <type name="IPv6Element"/>
            </array>
          </parameter>
          <parameter name="out_ipv4_gateway"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1459">return location for a #MbimIPv4, or %NULL if the 'IPv4Gateway' field is not needed. Do not free the returned value, it is owned by @message.</doc>
            <type name="IPv4" c:type="const MbimIPv4**"/>
          </parameter>
          <parameter name="out_ipv6_gateway"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1460">return location for a #MbimIPv6, or %NULL if the 'IPv6Gateway' field is not needed. Do not free the returned value, it is owned by @message.</doc>
            <type name="IPv6" c:type="const MbimIPv6**"/>
          </parameter>
          <parameter name="out_ipv4_dns_server_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1461">return location for a #guint32, or %NULL if the 'IPv4DnsServerCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv4_dns_server"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1462">return location for a newly allocated array of #MbimIPv4s, or %NULL if the 'IPv4DnsServer' field is not needed. Free the returned value with g_free().</doc>
            <array c:type="MbimIPv4**">
              <type name="IPv4"/>
            </array>
          </parameter>
          <parameter name="out_ipv6_dns_server_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1463">return location for a #guint32, or %NULL if the 'IPv6DnsServerCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv6_dns_server"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1464">return location for a newly allocated array of #MbimIPv6s, or %NULL if the 'IPv6DnsServer' field is not needed. Free the returned value with g_free().</doc>
            <array c:type="MbimIPv6**">
              <type name="IPv6"/>
            </array>
          </parameter>
          <parameter name="out_ipv4_mtu"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1465">return location for a #guint32, or %NULL if the 'IPv4Mtu' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_ipv6_mtu"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1466">return location for a #guint32, or %NULL if the 'IPv6Mtu' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ip_packet_filters_response_parse"
              c:identifier="mbim_message_ip_packet_filters_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1849">Parses and returns parameters of the 'IP Packet Filters' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1863"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1859">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1851">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_session_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1852">return location for a #guint32, or %NULL if the 'SessionId' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_packet_filters_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1853">return location for a #guint32, or %NULL if the 'PacketFiltersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_packet_filters"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1854">return location for a newly allocated array of #MbimPacketFilters, or %NULL if the 'PacketFilters' field is not needed. Free the returned value with mbim_packet_filter_array_free().</doc>
            <array c:type="MbimPacketFilterArray**">
              <type name="PacketFilter"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="ms_basic_connect_extensions_lte_attach_configuration_notification_parse"
              c:identifier="mbim_message_ms_basic_connect_extensions_lte_attach_configuration_notification_parse"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="270">Parses and returns parameters of the 'Lte Attach Configuration' notification command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="283"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="279">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="272">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_configuration_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="273">return location for a #guint32, or %NULL if the 'ConfigurationCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_configurations"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="274">return location for a newly allocated array of #MbimLteAttachConfigurations, or %NULL if the 'Configurations' field is not needed. Free the returned value with mbim_lte_attach_configuration_array_free().</doc>
            <array c:type="MbimLteAttachConfigurationArray**">
              <type name="LteAttachConfiguration"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="ms_basic_connect_extensions_lte_attach_configuration_response_parse"
              c:identifier="mbim_message_ms_basic_connect_extensions_lte_attach_configuration_response_parse"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="248">Parses and returns parameters of the 'Lte Attach Configuration' response command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="261"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="257">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="250">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_configuration_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="251">return location for a #guint32, or %NULL if the 'ConfigurationCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_configurations"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="252">return location for a newly allocated array of #MbimLteAttachConfigurations, or %NULL if the 'Configurations' field is not needed. Free the returned value with mbim_lte_attach_configuration_array_free().</doc>
            <array c:type="MbimLteAttachConfigurationArray**">
              <type name="LteAttachConfiguration"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="ms_basic_connect_extensions_lte_attach_status_notification_parse"
              c:identifier="mbim_message_ms_basic_connect_extensions_lte_attach_status_notification_parse"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="328">Parses and returns parameters of the 'Lte Attach Status' notification command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="340"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="336">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="330">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_lte_attach_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="331">return location for a newly allocated #MbimLteAttachStatus, or %NULL if the 'LteAttachStatus' field is not needed. Free the returned value with mbim_lte_attach_status_free().</doc>
            <type name="LteAttachStatus" c:type="MbimLteAttachStatus**"/>
          </parameter>
        </parameters>
      </method>
      <method name="ms_basic_connect_extensions_lte_attach_status_response_parse"
              c:identifier="mbim_message_ms_basic_connect_extensions_lte_attach_status_response_parse"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="308">Parses and returns parameters of the 'Lte Attach Status' response command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="320"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="316">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="310">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_lte_attach_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="311">return location for a newly allocated #MbimLteAttachStatus, or %NULL if the 'LteAttachStatus' field is not needed. Free the returned value with mbim_lte_attach_status_free().</doc>
            <type name="LteAttachStatus" c:type="MbimLteAttachStatus**"/>
          </parameter>
        </parameters>
      </method>
      <method name="ms_basic_connect_extensions_pco_notification_parse"
              c:identifier="mbim_message_ms_basic_connect_extensions_pco_notification_parse"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="190">Parses and returns parameters of the 'PCO' notification command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="202"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="198">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="192">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_pco_value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="193">return location for a newly allocated #MbimPcoValue, or %NULL if the 'PcoValue' field is not needed. Free the returned value with mbim_pco_value_free().</doc>
            <type name="PcoValue" c:type="MbimPcoValue**"/>
          </parameter>
        </parameters>
      </method>
      <method name="ms_basic_connect_extensions_pco_response_parse"
              c:identifier="mbim_message_ms_basic_connect_extensions_pco_response_parse"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="170">Parses and returns parameters of the 'PCO' response command in the 'Ms Basic Connect Extensions' service.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="178">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="172">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_pco_value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="173">return location for a newly allocated #MbimPcoValue, or %NULL if the 'PcoValue' field is not needed. Free the returned value with mbim_pco_value_free().</doc>
            <type name="PcoValue" c:type="MbimPcoValue**"/>
          </parameter>
        </parameters>
      </method>
      <method name="ms_firmware_id_get_response_parse"
              c:identifier="mbim_message_ms_firmware_id_get_response_parse"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-firmware-id.h"
             line="56">Parses and returns parameters of the 'Get' response command in the 'MS Firmware ID' service.</doc>
        <source-position filename="generated/mbim-ms-firmware-id.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-firmware-id.h"
               line="64">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-firmware-id.h"
                 line="58">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_firmware_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-firmware-id.h"
                 line="59">return location for a #MbimUuid, or %NULL if the 'FirmwareId' field is not needed. Do not free the returned value, it is owned by @message.</doc>
            <type name="Uuid" c:type="const MbimUuid**"/>
          </parameter>
        </parameters>
      </method>
      <method name="multicarrier_providers_notification_parse"
              c:identifier="mbim_message_multicarrier_providers_notification_parse"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1931">Parses and returns parameters of the 'Multicarrier Providers' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1944"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1940">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1933">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_providers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1934">return location for a #guint32, or %NULL if the 'ProvidersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_providers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1935">return location for a newly allocated array of #MbimProviders, or %NULL if the 'Providers' field is not needed. Free the returned value with mbim_provider_array_free().</doc>
            <array c:type="MbimProviderArray**">
              <type name="Provider"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="multicarrier_providers_response_parse"
              c:identifier="mbim_message_multicarrier_providers_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1909">Parses and returns parameters of the 'Multicarrier Providers' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1922"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1918">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1911">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_providers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1912">return location for a #guint32, or %NULL if the 'ProvidersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_providers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1913">return location for a newly allocated array of #MbimProviders, or %NULL if the 'Providers' field is not needed. Free the returned value with mbim_provider_array_free().</doc>
            <array c:type="MbimProviderArray**">
              <type name="Provider"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="network_idle_hint_response_parse"
              c:identifier="mbim_message_network_idle_hint_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1711">Parses and returns parameters of the 'Network Idle Hint' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1723"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1719">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1713">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1714">return location for a #MbimNetworkIdleHintState, or %NULL if the 'State' field is not needed.</doc>
            <type name="NetworkIdleHintState"
                  c:type="MbimNetworkIdleHintState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_done_get_result"
              c:identifier="mbim_message_open_done_get_result"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="314">Gets the result of the 'Open' operation in the %MBIM_MESSAGE_TYPE_OPEN_DONE message.</doc>
        <source-position filename="mbim-message.h" line="325"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="321">%TRUE if the operation succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="316">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_done_get_status_code"
              c:identifier="mbim_message_open_done_get_status_code"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="302">Get status code from the %MBIM_MESSAGE_TYPE_OPEN_DONE message.</doc>
        <source-position filename="mbim-message.h" line="312"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="308">a #MbimStatusError.</doc>
          <type name="StatusError" c:type="MbimStatusError"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="304">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_get_max_control_transfer"
              c:identifier="mbim_message_open_get_max_control_transfer"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="271">Get the maximum control transfer set to be used in the #MbimMessage of type
%MBIM_MESSAGE_TYPE_OPEN.</doc>
        <source-position filename="mbim-message.h" line="282"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="278">the maximum control transfer.</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="273">a #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="packet_service_notification_parse"
              c:identifier="mbim_message_packet_service_notification_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1117">Parses and returns parameters of the 'Packet Service' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1129">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1119">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1120">return location for a #guint32, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_packet_service_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1121">return location for a #MbimPacketServiceState, or %NULL if the 'PacketServiceState' field is not needed.</doc>
            <type name="PacketServiceState" c:type="MbimPacketServiceState*"/>
          </parameter>
          <parameter name="out_highest_available_data_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1122">return location for a #MbimDataClass, or %NULL if the 'HighestAvailableDataClass' field is not needed.</doc>
            <type name="DataClass" c:type="MbimDataClass*"/>
          </parameter>
          <parameter name="out_uplink_speed"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1123">return location for a #guint64, or %NULL if the 'UplinkSpeed' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_downlink_speed"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1124">return location for a #guint64, or %NULL if the 'DownlinkSpeed' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="packet_service_response_parse"
              c:identifier="mbim_message_packet_service_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1089">Parses and returns parameters of the 'Packet Service' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1101">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1091">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1092">return location for a #guint32, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_packet_service_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1093">return location for a #MbimPacketServiceState, or %NULL if the 'PacketServiceState' field is not needed.</doc>
            <type name="PacketServiceState" c:type="MbimPacketServiceState*"/>
          </parameter>
          <parameter name="out_highest_available_data_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1094">return location for a #MbimDataClass, or %NULL if the 'HighestAvailableDataClass' field is not needed.</doc>
            <type name="DataClass" c:type="MbimDataClass*"/>
          </parameter>
          <parameter name="out_uplink_speed"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1095">return location for a #guint64, or %NULL if the 'UplinkSpeed' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_downlink_speed"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1096">return location for a #guint64, or %NULL if the 'DownlinkSpeed' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="packet_statistics_response_parse"
              c:identifier="mbim_message_packet_statistics_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1643">Parses and returns parameters of the 'Packet Statistics' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1662"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1658">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1645">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_in_discards"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1646">return location for a #guint32, or %NULL if the 'InDiscards' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_in_errors"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1647">return location for a #guint32, or %NULL if the 'InErrors' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_in_octets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1648">return location for a #guint64, or %NULL if the 'InOctets' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_in_packets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1649">return location for a #guint64, or %NULL if the 'InPackets' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_out_octets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1650">return location for a #guint64, or %NULL if the 'OutOctets' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_out_packets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1651">return location for a #guint64, or %NULL if the 'OutPackets' field is not needed.</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="out_out_errors"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1652">return location for a #guint32, or %NULL if the 'OutErrors' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_out_discards"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1653">return location for a #guint32, or %NULL if the 'OutDiscards' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="phonebook_configuration_notification_parse"
              c:identifier="mbim_message_phonebook_configuration_notification_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="120">Parses and returns parameters of the 'Configuration' notification command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="132">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="122">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="123">return location for a #MbimPhonebookState, or %NULL if the 'State' field is not needed.</doc>
            <type name="PhonebookState" c:type="MbimPhonebookState*"/>
          </parameter>
          <parameter name="out_number_of_entries"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="124">return location for a #guint32, or %NULL if the 'NumberOfEntries' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_used_entries"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="125">return location for a #guint32, or %NULL if the 'UsedEntries' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_max_number_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="126">return location for a #guint32, or %NULL if the 'MaxNumberLength' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_max_name"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="127">return location for a #guint32, or %NULL if the 'MaxName' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="phonebook_configuration_response_parse"
              c:identifier="mbim_message_phonebook_configuration_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="92">Parses and returns parameters of the 'Configuration' response command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="104">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="94">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="95">return location for a #MbimPhonebookState, or %NULL if the 'State' field is not needed.</doc>
            <type name="PhonebookState" c:type="MbimPhonebookState*"/>
          </parameter>
          <parameter name="out_number_of_entries"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="96">return location for a #guint32, or %NULL if the 'NumberOfEntries' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_used_entries"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="97">return location for a #guint32, or %NULL if the 'UsedEntries' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_max_number_length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="98">return location for a #guint32, or %NULL if the 'MaxNumberLength' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_max_name"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="99">return location for a #guint32, or %NULL if the 'MaxName' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="phonebook_delete_response_parse"
              c:identifier="mbim_message_phonebook_delete_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="210">Parses and returns parameters of the 'Delete' response command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="221"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="217">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="212">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="phonebook_read_response_parse"
              c:identifier="mbim_message_phonebook_read_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="168">Parses and returns parameters of the 'Read' response command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="181"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="177">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="170">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_entry_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="171">return location for a #guint32, or %NULL if the 'EntryCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_entries"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="172">return location for a newly allocated array of #MbimPhonebookEntrys, or %NULL if the 'Entries' field is not needed. Free the returned value with mbim_phonebook_entry_array_free().</doc>
            <array c:type="MbimPhonebookEntryArray**">
              <type name="PhonebookEntry"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="phonebook_write_response_parse"
              c:identifier="mbim_message_phonebook_write_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="252">Parses and returns parameters of the 'Write' response command in the 'Phonebook' service.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="263"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="259">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="254">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pin_list_response_parse"
              c:identifier="mbim_message_pin_list_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="639">Parses and returns parameters of the 'Pin List' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="660"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="656">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="641">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_pin_desc_pin1"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="642">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescPin1' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_pin2"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="643">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescPin2' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_device_sim_pin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="644">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescDeviceSimPin' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_device_first_sim_pin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="645">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescDeviceFirstSimPin' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_network_pin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="646">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescNetworkPin' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_network_subset_pin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="647">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescNetworkSubsetPin' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_service_provider_pin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="648">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescServiceProviderPin' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_corporate_pin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="649">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescCorporatePin' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_subsidy_lock"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="650">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescSubsidyLock' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
          <parameter name="out_pin_desc_custom"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="651">return location for a newly allocated #MbimPinDesc, or %NULL if the 'PinDescCustom' field is not needed. Free the returned value with mbim_pin_desc_free().</doc>
            <type name="PinDesc" c:type="MbimPinDesc**"/>
          </parameter>
        </parameters>
      </method>
      <method name="pin_response_parse"
              c:identifier="mbim_message_pin_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="599">Parses and returns parameters of the 'Pin' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="613"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="609">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="601">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_pin_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="602">return location for a #MbimPinType, or %NULL if the 'PinType' field is not needed.</doc>
            <type name="PinType" c:type="MbimPinType*"/>
          </parameter>
          <parameter name="out_pin_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="603">return location for a #MbimPinState, or %NULL if the 'PinState' field is not needed.</doc>
            <type name="PinState" c:type="MbimPinState*"/>
          </parameter>
          <parameter name="out_remaining_attempts"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="604">return location for a #guint32, or %NULL if the 'RemainingAttempts' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="preferred_providers_notification_parse"
              c:identifier="mbim_message_preferred_providers_notification_parse"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="789">Parses and returns parameters of the 'Preferred Providers' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="802"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="798">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="791">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_providers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="792">return location for a #guint32, or %NULL if the 'ProvidersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_providers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="793">return location for a newly allocated array of #MbimProviders, or %NULL if the 'Providers' field is not needed. Free the returned value with mbim_provider_array_free().</doc>
            <array c:type="MbimProviderArray**">
              <type name="Provider"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="preferred_providers_response_parse"
              c:identifier="mbim_message_preferred_providers_response_parse"
              version="1.2"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="767">Parses and returns parameters of the 'Preferred Providers' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="780"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="776">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="769">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_providers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="770">return location for a #guint32, or %NULL if the 'ProvidersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_providers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="771">return location for a newly allocated array of #MbimProviders, or %NULL if the 'Providers' field is not needed. Free the returned value with mbim_provider_array_free().</doc>
            <array c:type="MbimProviderArray**">
              <type name="Provider"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="provisioned_contexts_notification_parse"
              c:identifier="mbim_message_provisioned_contexts_notification_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1337">Parses and returns parameters of the 'Provisioned Contexts' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1350"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1346">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1339">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_provisioned_contexts_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1340">return location for a #guint32, or %NULL if the 'ProvisionedContextsCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_provisioned_contexts"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1341">return location for a newly allocated array of #MbimProvisionedContextElements, or %NULL if the 'ProvisionedContexts' field is not needed. Free the returned value with mbim_provisioned_context_element_array_free().</doc>
            <array c:type="MbimProvisionedContextElementArray**">
              <type name="ProvisionedContextElement"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="provisioned_contexts_response_parse"
              c:identifier="mbim_message_provisioned_contexts_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1315">Parses and returns parameters of the 'Provisioned Contexts' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1328"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1324">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1317">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_provisioned_contexts_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1318">return location for a #guint32, or %NULL if the 'ProvisionedContextsCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_provisioned_contexts"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1319">return location for a newly allocated array of #MbimProvisionedContextElements, or %NULL if the 'ProvisionedContexts' field is not needed. Free the returned value with mbim_provisioned_context_element_array_free().</doc>
            <array c:type="MbimProvisionedContextElementArray**">
              <type name="ProvisionedContextElement"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="proxy_control_configuration_response_parse"
              c:identifier="mbim_message_proxy_control_configuration_response_parse"
              version="1.10"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-proxy-control.h"
             line="60">Parses and returns parameters of the 'Configuration' response command in the 'Proxy Control' service.</doc>
        <source-position filename="generated/mbim-proxy-control.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-proxy-control.h"
               line="67">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-proxy-control.h"
                 line="62">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="qmi_msg_notification_parse"
              c:identifier="mbim_message_qmi_msg_notification_parse"
              version="1.18"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-qmi.h"
             line="82">Parses and returns parameters of the 'msg' notification command in the 'QMI' service.</doc>
        <source-position filename="generated/mbim-qmi.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-qmi.h"
               line="91">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="84">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_qmux_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="85">return location for the size of the qmux array.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_qmux"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="86">return location for an array of #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array length="0" zero-terminated="0" c:type="const guint8**">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="qmi_msg_response_parse"
              c:identifier="mbim_message_qmi_msg_response_parse"
              version="1.14"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-qmi.h"
             line="60">Parses and returns parameters of the 'msg' response command in the 'QMI' service.</doc>
        <source-position filename="generated/mbim-qmi.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-qmi.h"
               line="69">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="62">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_qmux_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="63">return location for the size of the qmux array.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_qmux"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-qmi.h"
                 line="64">return location for an array of #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array length="0" zero-terminated="0" c:type="const guint8**">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="radio_state_notification_parse"
              c:identifier="mbim_message_radio_state_notification_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="537">Parses and returns parameters of the 'Radio State' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="550"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="546">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="539">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_hw_radio_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="540">return location for a #MbimRadioSwitchState, or %NULL if the 'HwRadioState' field is not needed.</doc>
            <type name="RadioSwitchState" c:type="MbimRadioSwitchState*"/>
          </parameter>
          <parameter name="out_sw_radio_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="541">return location for a #MbimRadioSwitchState, or %NULL if the 'SwRadioState' field is not needed.</doc>
            <type name="RadioSwitchState" c:type="MbimRadioSwitchState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="radio_state_response_parse"
              c:identifier="mbim_message_radio_state_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="515">Parses and returns parameters of the 'Radio State' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="528"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="524">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="517">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_hw_radio_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="518">return location for a #MbimRadioSwitchState, or %NULL if the 'HwRadioState' field is not needed.</doc>
            <type name="RadioSwitchState" c:type="MbimRadioSwitchState*"/>
          </parameter>
          <parameter name="out_sw_radio_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="519">return location for a #MbimRadioSwitchState, or %NULL if the 'SwRadioState' field is not needed.</doc>
            <type name="RadioSwitchState" c:type="MbimRadioSwitchState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="mbim_message_ref" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="147">Atomically increments the reference count of @self by one.</doc>
        <source-position filename="mbim-message.h" line="157"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="153">the new reference to @self.</doc>
          <type name="Message" c:type="MbimMessage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="149">a #MbimMessage.</doc>
            <type name="Message" c:type="MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="register_state_notification_parse"
              c:identifier="mbim_message_register_state_notification_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="925">Parses and returns parameters of the 'Register State' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="945"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="941">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="927">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="928">return location for a #MbimNwError, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="NwError" c:type="MbimNwError*"/>
          </parameter>
          <parameter name="out_register_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="929">return location for a #MbimRegisterState, or %NULL if the 'RegisterState' field is not needed.</doc>
            <type name="RegisterState" c:type="MbimRegisterState*"/>
          </parameter>
          <parameter name="out_register_mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="930">return location for a #MbimRegisterMode, or %NULL if the 'RegisterMode' field is not needed.</doc>
            <type name="RegisterMode" c:type="MbimRegisterMode*"/>
          </parameter>
          <parameter name="out_available_data_classes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="931">return location for a #MbimDataClass, or %NULL if the 'AvailableDataClasses' field is not needed.</doc>
            <type name="DataClass" c:type="MbimDataClass*"/>
          </parameter>
          <parameter name="out_current_cellular_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="932">return location for a #MbimCellularClass, or %NULL if the 'CurrentCellularClass' field is not needed.</doc>
            <type name="CellularClass" c:type="MbimCellularClass*"/>
          </parameter>
          <parameter name="out_provider_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="933">return location for a newly allocated string, or %NULL if the 'ProviderId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_provider_name"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="934">return location for a newly allocated string, or %NULL if the 'ProviderName' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_roaming_text"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="935">return location for a newly allocated string, or %NULL if the 'RoamingText' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_registration_flag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="936">return location for a #MbimRegistrationFlag, or %NULL if the 'RegistrationFlag' field is not needed.</doc>
            <type name="RegistrationFlag" c:type="MbimRegistrationFlag*"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_state_response_parse"
              c:identifier="mbim_message_register_state_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="889">Parses and returns parameters of the 'Register State' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="909"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="905">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="891">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="892">return location for a #MbimNwError, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="NwError" c:type="MbimNwError*"/>
          </parameter>
          <parameter name="out_register_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="893">return location for a #MbimRegisterState, or %NULL if the 'RegisterState' field is not needed.</doc>
            <type name="RegisterState" c:type="MbimRegisterState*"/>
          </parameter>
          <parameter name="out_register_mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="894">return location for a #MbimRegisterMode, or %NULL if the 'RegisterMode' field is not needed.</doc>
            <type name="RegisterMode" c:type="MbimRegisterMode*"/>
          </parameter>
          <parameter name="out_available_data_classes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="895">return location for a #MbimDataClass, or %NULL if the 'AvailableDataClasses' field is not needed.</doc>
            <type name="DataClass" c:type="MbimDataClass*"/>
          </parameter>
          <parameter name="out_current_cellular_class"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="896">return location for a #MbimCellularClass, or %NULL if the 'CurrentCellularClass' field is not needed.</doc>
            <type name="CellularClass" c:type="MbimCellularClass*"/>
          </parameter>
          <parameter name="out_provider_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="897">return location for a newly allocated string, or %NULL if the 'ProviderId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_provider_name"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="898">return location for a newly allocated string, or %NULL if the 'ProviderName' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_roaming_text"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="899">return location for a newly allocated string, or %NULL if the 'RoamingText' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_registration_flag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="900">return location for a #MbimRegistrationFlag, or %NULL if the 'RegistrationFlag' field is not needed.</doc>
            <type name="RegistrationFlag" c:type="MbimRegistrationFlag*"/>
          </parameter>
        </parameters>
      </method>
      <method name="response_get_result"
              c:identifier="mbim_message_response_get_result"
              version="1.12"
              throws="1">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="700">Gets the result of the operation from the response message, which
can be either a %MBIM_MESSAGE_TYPE_FUNCTION_ERROR message or a message of the
specified @expected type.</doc>
        <source-position filename="mbim-message.h" line="714"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-message.h"
               line="710">%TRUE if the operation succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="702">a #MbimMessage response message.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="expected" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="703">expected #MbimMessageType if there isn't any error in the operation.</doc>
            <type name="MessageType" c:type="MbimMessageType"/>
          </parameter>
        </parameters>
      </method>
      <method name="service_activation_response_parse"
              c:identifier="mbim_message_service_activation_response_parse"
              version="1.2"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1379">Parses and returns parameters of the 'Service Activation' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1393"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1389">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1381">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_nw_error"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1382">return location for a #MbimNwError, or %NULL if the 'NwError' field is not needed.</doc>
            <type name="NwError" c:type="MbimNwError*"/>
          </parameter>
          <parameter name="out_buffer_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1383">return location for the size of the buffer array.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_buffer"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1384">return location for an array of #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8**">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_transaction_id"
              c:identifier="mbim_message_set_transaction_id"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="238">Sets the transaction ID of the message.</doc>
        <source-position filename="mbim-message.h" line="247"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="240">a #MbimMessage.</doc>
            <type name="Message" c:type="MbimMessage*"/>
          </instance-parameter>
          <parameter name="transaction_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="241">the transaction id.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="signal_state_notification_parse"
              c:identifier="mbim_message_signal_state_notification_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="1027">Parses and returns parameters of the 'Signal State' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1043"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1039">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1029">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_rssi"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1030">return location for a #guint32, or %NULL if the 'Rssi' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_error_rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1031">return location for a #guint32, or %NULL if the 'ErrorRate' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_signal_strength_interval"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1032">return location for a #guint32, or %NULL if the 'SignalStrengthInterval' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_rssi_threshold"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1033">return location for a #guint32, or %NULL if the 'RssiThreshold' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_error_rate_threshold"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1034">return location for a #guint32, or %NULL if the 'ErrorRateThreshold' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="signal_state_response_parse"
              c:identifier="mbim_message_signal_state_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="999">Parses and returns parameters of the 'Signal State' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h"
                         line="1015"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="1011">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1001">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_rssi"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1002">return location for a #guint32, or %NULL if the 'Rssi' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_error_rate"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1003">return location for a #guint32, or %NULL if the 'ErrorRate' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_signal_strength_interval"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1004">return location for a #guint32, or %NULL if the 'SignalStrengthInterval' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_rssi_threshold"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1005">return location for a #guint32, or %NULL if the 'RssiThreshold' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_error_rate_threshold"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="1006">return location for a #guint32, or %NULL if the 'ErrorRateThreshold' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sms_configuration_response_parse"
              c:identifier="mbim_message_sms_configuration_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="222">Parses and returns parameters of the 'Configuration' response command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="238"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="234">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="224">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_sms_storage_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="225">return location for a #MbimSmsStorageState, or %NULL if the 'SmsStorageState' field is not needed.</doc>
            <type name="SmsStorageState" c:type="MbimSmsStorageState*"/>
          </parameter>
          <parameter name="out_format"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="226">return location for a #MbimSmsFormat, or %NULL if the 'Format' field is not needed.</doc>
            <type name="SmsFormat" c:type="MbimSmsFormat*"/>
          </parameter>
          <parameter name="out_max_messages"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="227">return location for a #guint32, or %NULL if the 'MaxMessages' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_cdma_short_message_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="228">return location for a #guint32, or %NULL if the 'CdmaShortMessageSize' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_sc_address"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="229">return location for a newly allocated string, or %NULL if the 'ScAddress' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="sms_delete_response_parse"
              c:identifier="mbim_message_sms_delete_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="386">Parses and returns parameters of the 'Delete' response command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="397"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="393">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="388">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="sms_message_store_status_notification_parse"
              c:identifier="mbim_message_sms_message_store_status_notification_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="442">Parses and returns parameters of the 'Message Store Status' notification command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="455"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="451">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="444">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_flag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="445">return location for a #MbimSmsStatusFlag, or %NULL if the 'Flag' field is not needed.</doc>
            <type name="SmsStatusFlag" c:type="MbimSmsStatusFlag*"/>
          </parameter>
          <parameter name="out_message_index"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="446">return location for a #guint32, or %NULL if the 'MessageIndex' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sms_message_store_status_response_parse"
              c:identifier="mbim_message_sms_message_store_status_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="420">Parses and returns parameters of the 'Message Store Status' response command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="433"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="429">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="422">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_flag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="423">return location for a #MbimSmsStatusFlag, or %NULL if the 'Flag' field is not needed.</doc>
            <type name="SmsStatusFlag" c:type="MbimSmsStatusFlag*"/>
          </parameter>
          <parameter name="out_message_index"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="424">return location for a #guint32, or %NULL if the 'MessageIndex' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sms_read_notification_parse"
              c:identifier="mbim_message_sms_read_notification_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="298">Parses and returns parameters of the 'Read' notification command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="313"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="309">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="300">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_format"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="301">return location for a #MbimSmsFormat, or %NULL if the 'Format' field is not needed.</doc>
            <type name="SmsFormat" c:type="MbimSmsFormat*"/>
          </parameter>
          <parameter name="out_messages_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="302">return location for a #guint32, or %NULL if the 'MessagesCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_pdu_messages"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="303">return location for a newly allocated array of #MbimSmsPduReadRecords, or %NULL if the 'PduMessages' field is not needed. Free the returned value with mbim_sms_pdu_read_record_array_free().</doc>
            <array c:type="MbimSmsPduReadRecordArray**">
              <type name="SmsPduReadRecord"/>
            </array>
          </parameter>
          <parameter name="out_cdma_messages"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="304">return location for a newly allocated array of #MbimSmsCdmaReadRecords, or %NULL if the 'CdmaMessages' field is not needed. Free the returned value with mbim_sms_cdma_read_record_array_free().</doc>
            <array c:type="MbimSmsCdmaReadRecordArray**">
              <type name="SmsCdmaReadRecord"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="sms_read_response_parse"
              c:identifier="mbim_message_sms_read_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="272">Parses and returns parameters of the 'Read' response command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="287"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="283">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="274">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_format"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="275">return location for a #MbimSmsFormat, or %NULL if the 'Format' field is not needed.</doc>
            <type name="SmsFormat" c:type="MbimSmsFormat*"/>
          </parameter>
          <parameter name="out_messages_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="276">return location for a #guint32, or %NULL if the 'MessagesCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_pdu_messages"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="277">return location for a newly allocated array of #MbimSmsPduReadRecords, or %NULL if the 'PduMessages' field is not needed. Free the returned value with mbim_sms_pdu_read_record_array_free().</doc>
            <array c:type="MbimSmsPduReadRecordArray**">
              <type name="SmsPduReadRecord"/>
            </array>
          </parameter>
          <parameter name="out_cdma_messages"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="278">return location for a newly allocated array of #MbimSmsCdmaReadRecords, or %NULL if the 'CdmaMessages' field is not needed. Free the returned value with mbim_sms_cdma_read_record_array_free().</doc>
            <array c:type="MbimSmsCdmaReadRecordArray**">
              <type name="SmsCdmaReadRecord"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="sms_send_response_parse"
              c:identifier="mbim_message_sms_send_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="346">Parses and returns parameters of the 'Send' response command in the 'SMS' service.</doc>
        <source-position filename="generated/mbim-sms.h" line="358"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="354">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="348">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_message_reference"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="349">return location for a #guint32, or %NULL if the 'MessageReference' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stk_envelope_response_parse"
              c:identifier="mbim_message_stk_envelope_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="198">Parses and returns parameters of the 'Envelope' response command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="210"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="206">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="200">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_envelope_support"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="201">return location for an array of 32 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="32">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="stk_pac_notification_parse"
              c:identifier="mbim_message_stk_pac_notification_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="94">Parses and returns parameters of the 'Pac' notification command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="104">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="96">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_pac_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="97">return location for a #MbimStkPacType, or %NULL if the 'PacType' field is not needed.</doc>
            <type name="StkPacType" c:type="MbimStkPacType*"/>
          </parameter>
          <parameter name="out_data_buffer_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="98">return location for the size of the data_buffer array.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_data_buffer"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="99">return location for an array of #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8**">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="stk_pac_response_parse"
              c:identifier="mbim_message_stk_pac_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="74">Parses and returns parameters of the 'Pac' response command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="82">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="76">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_pac_support"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="77">return location for an array of 256 #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array zero-terminated="0"
                   c:type="const guint8**"
                   fixed-size="256">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="stk_terminal_response_response_parse"
              c:identifier="mbim_message_stk_terminal_response_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-stk.h"
             line="138">Parses and returns parameters of the 'Terminal Response' response command in the 'STK' service.</doc>
        <source-position filename="generated/mbim-stk.h" line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-stk.h"
               line="148">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="140">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_result_data_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="141">return location for the size of the result_data array.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_result_data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="142">return location for an array of #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array length="0" zero-terminated="0" c:type="const guint8**">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="out_status_words"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-stk.h"
                 line="143">return location for a #guint32, or %NULL if the 'StatusWords' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="subscriber_ready_status_notification_parse"
              c:identifier="mbim_message_subscriber_ready_status_notification_parse"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="451">Parses and returns parameters of the 'Subscriber Ready Status' notification command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="468"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="464">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="453">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_ready_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="454">return location for a #MbimSubscriberReadyState, or %NULL if the 'ReadyState' field is not needed.</doc>
            <type name="SubscriberReadyState"
                  c:type="MbimSubscriberReadyState*"/>
          </parameter>
          <parameter name="out_subscriber_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="455">return location for a newly allocated string, or %NULL if the 'SubscriberId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_sim_icc_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="456">return location for a newly allocated string, or %NULL if the 'SimIccId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_ready_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="457">return location for a #MbimReadyInfoFlag, or %NULL if the 'ReadyInfo' field is not needed.</doc>
            <type name="ReadyInfoFlag" c:type="MbimReadyInfoFlag*"/>
          </parameter>
          <parameter name="out_telephone_numbers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="458">return location for a #guint32, or %NULL if the 'TelephoneNumbersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_telephone_numbers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="459">return location for a newly allocated array of strings, or %NULL if the 'TelephoneNumbers' field is not needed. Free the returned value with g_strfreev().</doc>
            <array c:type="gchar***">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="subscriber_ready_status_response_parse"
              c:identifier="mbim_message_subscriber_ready_status_response_parse"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="421">Parses and returns parameters of the 'Subscriber Ready Status' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="438"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="434">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="423">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_ready_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="424">return location for a #MbimSubscriberReadyState, or %NULL if the 'ReadyState' field is not needed.</doc>
            <type name="SubscriberReadyState"
                  c:type="MbimSubscriberReadyState*"/>
          </parameter>
          <parameter name="out_subscriber_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="425">return location for a newly allocated string, or %NULL if the 'SubscriberId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_sim_icc_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="426">return location for a newly allocated string, or %NULL if the 'SimIccId' field is not needed. Free the returned value with g_free().</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="out_ready_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="427">return location for a #MbimReadyInfoFlag, or %NULL if the 'ReadyInfo' field is not needed.</doc>
            <type name="ReadyInfoFlag" c:type="MbimReadyInfoFlag*"/>
          </parameter>
          <parameter name="out_telephone_numbers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="428">return location for a #guint32, or %NULL if the 'TelephoneNumbersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_telephone_numbers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="429">return location for a newly allocated array of strings, or %NULL if the 'TelephoneNumbers' field is not needed. Free the returned value with g_strfreev().</doc>
            <array c:type="gchar***">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="mbim_message_unref" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="159">Atomically decrements the reference count of @self by one.
If the reference count drops to 0, @self is completely disposed.</doc>
        <source-position filename="mbim-message.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-message.h"
                 line="161">a #MbimMessage.</doc>
            <type name="Message" c:type="MbimMessage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ussd_notification_parse"
              c:identifier="mbim_message_ussd_notification_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ussd.h"
             line="92">Parses and returns parameters of the '' notification command in the 'USSD' service.</doc>
        <source-position filename="generated/mbim-ussd.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ussd.h"
               line="104">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="94">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_response"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="95">return location for a #MbimUssdResponse, or %NULL if the 'Response' field is not needed.</doc>
            <type name="UssdResponse" c:type="MbimUssdResponse*"/>
          </parameter>
          <parameter name="out_session_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="96">return location for a #MbimUssdSessionState, or %NULL if the 'SessionState' field is not needed.</doc>
            <type name="UssdSessionState" c:type="MbimUssdSessionState*"/>
          </parameter>
          <parameter name="out_data_coding_scheme"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="97">return location for a #guint32, or %NULL if the 'DataCodingScheme' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_payload_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="98">return location for the size of the payload array.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_payload"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="99">return location for an array of #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array length="3" zero-terminated="0" c:type="const guint8**">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="ussd_response_parse"
              c:identifier="mbim_message_ussd_response_parse"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ussd.h"
             line="64">Parses and returns parameters of the '' response command in the 'USSD' service.</doc>
        <source-position filename="generated/mbim-ussd.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ussd.h"
               line="76">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="66">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_response"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="67">return location for a #MbimUssdResponse, or %NULL if the 'Response' field is not needed.</doc>
            <type name="UssdResponse" c:type="MbimUssdResponse*"/>
          </parameter>
          <parameter name="out_session_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="68">return location for a #MbimUssdSessionState, or %NULL if the 'SessionState' field is not needed.</doc>
            <type name="UssdSessionState" c:type="MbimUssdSessionState*"/>
          </parameter>
          <parameter name="out_data_coding_scheme"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="69">return location for a #guint32, or %NULL if the 'DataCodingScheme' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_payload_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="70">return location for the size of the payload array.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_payload"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-ussd.h"
                 line="71">return location for an array of #guint8 values. Do not free the returned value, it is owned by @message.</doc>
            <array length="3" zero-terminated="0" c:type="const guint8**">
              <type name="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="visible_providers_response_parse"
              c:identifier="mbim_message_visible_providers_response_parse"
              version="1.2"
              throws="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="829">Parses and returns parameters of the 'Visible Providers' response command in the 'Basic Connect' service.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="842"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="838">%TRUE if the message was correctly parsed, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="831">the #MbimMessage.</doc>
            <type name="Message" c:type="const MbimMessage*"/>
          </instance-parameter>
          <parameter name="out_providers_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="832">return location for a #guint32, or %NULL if the 'ProvidersCount' field is not needed.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
          <parameter name="out_providers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="833">return location for a newly allocated array of #MbimProviders, or %NULL if the 'Providers' field is not needed. Free the returned value with mbim_provider_array_free().</doc>
            <array c:type="MbimProviderArray**">
              <type name="Provider"/>
            </array>
          </parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="MessageCommandType"
                 version="1.0"
                 glib:type-name="MbimMessageCommandType"
                 glib:get-type="mbim_message_command_type_get_type"
                 c:type="MbimMessageCommandType">
      <doc xml:space="preserve"
           filename="mbim-message.h"
           line="453">Type of command message.</doc>
      <member name="unknown"
              value="-1"
              c:identifier="MBIM_MESSAGE_COMMAND_TYPE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="455">Unknown type.</doc>
      </member>
      <member name="query"
              value="0"
              c:identifier="MBIM_MESSAGE_COMMAND_TYPE_QUERY"
              glib:nick="query">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="456">Query command.</doc>
      </member>
      <member name="set"
              value="1"
              c:identifier="MBIM_MESSAGE_COMMAND_TYPE_SET"
              glib:nick="set">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="457">Set command.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_message_command_type_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2441">Gets the nickname string for the #MbimMessageCommandType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2451"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2447">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2443">a MbimMessageCommandType.</doc>
            <type name="MessageCommandType" c:type="MbimMessageCommandType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="MessageType"
                 version="1.0"
                 glib:type-name="MbimMessageType"
                 glib:get-type="mbim_message_type_get_type"
                 c:type="MbimMessageType">
      <doc xml:space="preserve"
           filename="mbim-message.h"
           line="86">Type of MBIM messages.</doc>
      <member name="invalid"
              value="0"
              c:identifier="MBIM_MESSAGE_TYPE_INVALID"
              glib:nick="invalid">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="88">Invalid MBIM message.</doc>
      </member>
      <member name="open"
              value="1"
              c:identifier="MBIM_MESSAGE_TYPE_OPEN"
              glib:nick="open">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="89">Initialization request.</doc>
      </member>
      <member name="close"
              value="2"
              c:identifier="MBIM_MESSAGE_TYPE_CLOSE"
              glib:nick="close">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="90">Close request.</doc>
      </member>
      <member name="command"
              value="3"
              c:identifier="MBIM_MESSAGE_TYPE_COMMAND"
              glib:nick="command">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="91">Command request.</doc>
      </member>
      <member name="host_error"
              value="4"
              c:identifier="MBIM_MESSAGE_TYPE_HOST_ERROR"
              glib:nick="host-error">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="92">Host-reported error in the communication.</doc>
      </member>
      <member name="open_done"
              value="2147483649"
              c:identifier="MBIM_MESSAGE_TYPE_OPEN_DONE"
              glib:nick="open-done">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="93">Response to initialization request.</doc>
      </member>
      <member name="close_done"
              value="2147483650"
              c:identifier="MBIM_MESSAGE_TYPE_CLOSE_DONE"
              glib:nick="close-done">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="94">Response to close request.</doc>
      </member>
      <member name="command_done"
              value="2147483651"
              c:identifier="MBIM_MESSAGE_TYPE_COMMAND_DONE"
              glib:nick="command-done">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="95">Response to command request.</doc>
      </member>
      <member name="function_error"
              value="2147483652"
              c:identifier="MBIM_MESSAGE_TYPE_FUNCTION_ERROR"
              glib:nick="function-error">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="96">Function-reported error in the communication.</doc>
      </member>
      <member name="indicate_status"
              value="2147483655"
              c:identifier="MBIM_MESSAGE_TYPE_INDICATE_STATUS"
              glib:nick="indicate-status">
        <doc xml:space="preserve"
             filename="mbim-message.h"
             line="97">Unsolicited message from the function.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_message_type_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2407">Gets the nickname string for the #MbimMessageType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2417"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2413">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2409">a MbimMessageType.</doc>
            <type name="MessageType" c:type="MbimMessageType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="NetworkIdleHintState"
                 version="1.4"
                 glib:type-name="MbimNetworkIdleHintState"
                 glib:get-type="mbim_network_idle_hint_state_get_type"
                 c:type="MbimNetworkIdleHintState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1043">Enable or disable network idle hint.</doc>
      <member name="disabled"
              value="0"
              c:identifier="MBIM_NETWORK_IDLE_HINT_STATE_DISABLED"
              glib:nick="disabled">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1045">Disabled.</doc>
      </member>
      <member name="enabled"
              value="1"
              c:identifier="MBIM_NETWORK_IDLE_HINT_STATE_ENABLED"
              glib:nick="enabled">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1046">Enabled.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_network_idle_hint_state_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2065">Gets the nickname string for the #MbimNetworkIdleHintState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2075"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2071">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2067">a MbimNetworkIdleHintState.</doc>
            <type name="NetworkIdleHintState"
                  c:type="MbimNetworkIdleHintState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="NwError"
                 version="1.0"
                 glib:type-name="MbimNwError"
                 glib:get-type="mbim_nw_error_get_type"
                 c:type="MbimNwError">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="407">Network errors.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_NW_ERROR_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="409">Unknown or unset error.</doc>
      </member>
      <member name="imsi_unknown_in_hlr"
              value="2"
              c:identifier="MBIM_NW_ERROR_IMSI_UNKNOWN_IN_HLR"
              glib:nick="imsi-unknown-in-hlr">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="410">IMSI unknown in the HLR.</doc>
      </member>
      <member name="illegal_ms"
              value="3"
              c:identifier="MBIM_NW_ERROR_ILLEGAL_MS"
              glib:nick="illegal-ms">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="411">Illegal MS. Since 1.10.</doc>
      </member>
      <member name="imsi_unknown_in_vlr"
              value="4"
              c:identifier="MBIM_NW_ERROR_IMSI_UNKNOWN_IN_VLR"
              glib:nick="imsi-unknown-in-vlr">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="412">IMSI unknown in the VLR.</doc>
      </member>
      <member name="imei_not_accepted"
              value="5"
              c:identifier="MBIM_NW_ERROR_IMEI_NOT_ACCEPTED"
              glib:nick="imei-not-accepted">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="413">IMEI not accepted. Since 1.10.</doc>
      </member>
      <member name="illegal_me"
              value="6"
              c:identifier="MBIM_NW_ERROR_ILLEGAL_ME"
              glib:nick="illegal-me">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="414">Illegal ME.</doc>
      </member>
      <member name="gprs_not_allowed"
              value="7"
              c:identifier="MBIM_NW_ERROR_GPRS_NOT_ALLOWED"
              glib:nick="gprs-not-allowed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="415">GPRS not allowed.</doc>
      </member>
      <member name="gprs_and_non_gprs_not_allowed"
              value="8"
              c:identifier="MBIM_NW_ERROR_GPRS_AND_NON_GPRS_NOT_ALLOWED"
              glib:nick="gprs-and-non-gprs-not-allowed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="416">GPRS and non-GPRS not allowed.</doc>
      </member>
      <member name="ms_identity_not_derived_by_network"
              value="9"
              c:identifier="MBIM_NW_ERROR_MS_IDENTITY_NOT_DERIVED_BY_NETWORK"
              glib:nick="ms-identity-not-derived-by-network">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="417">MS identity cannot be derived by the network. Since 1.10.</doc>
      </member>
      <member name="implicitly_detached"
              value="10"
              c:identifier="MBIM_NW_ERROR_IMPLICITLY_DETACHED"
              glib:nick="implicitly-detached">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="418">Implicitly detached. Since 1.10.</doc>
      </member>
      <member name="plmn_not_allowed"
              value="11"
              c:identifier="MBIM_NW_ERROR_PLMN_NOT_ALLOWED"
              glib:nick="plmn-not-allowed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="419">PLMN not allowed.</doc>
      </member>
      <member name="location_area_not_allowed"
              value="12"
              c:identifier="MBIM_NW_ERROR_LOCATION_AREA_NOT_ALLOWED"
              glib:nick="location-area-not-allowed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="420">Location area not allowed.</doc>
      </member>
      <member name="roaming_not_allowed_in_location_area"
              value="13"
              c:identifier="MBIM_NW_ERROR_ROAMING_NOT_ALLOWED_IN_LOCATION_AREA"
              glib:nick="roaming-not-allowed-in-location-area">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="421">Roaming not allowed in the location area.</doc>
      </member>
      <member name="gprs_not_allowed_in_plmn"
              value="14"
              c:identifier="MBIM_NW_ERROR_GPRS_NOT_ALLOWED_IN_PLMN"
              glib:nick="gprs-not-allowed-in-plmn">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="422">GPRS not allowed in PLMN.</doc>
      </member>
      <member name="no_cells_in_location_area"
              value="15"
              c:identifier="MBIM_NW_ERROR_NO_CELLS_IN_LOCATION_AREA"
              glib:nick="no-cells-in-location-area">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="423">No cells in location area.</doc>
      </member>
      <member name="msc_temporarily_not_reachable"
              value="16"
              c:identifier="MBIM_NW_ERROR_MSC_TEMPORARILY_NOT_REACHABLE"
              glib:nick="msc-temporarily-not-reachable">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="424">MSC temporarily not reachable. Since 1.10.</doc>
      </member>
      <member name="network_failure"
              value="17"
              c:identifier="MBIM_NW_ERROR_NETWORK_FAILURE"
              glib:nick="network-failure">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="425">Network failure.</doc>
      </member>
      <member name="mac_failure"
              value="20"
              c:identifier="MBIM_NW_ERROR_MAC_FAILURE"
              glib:nick="mac-failure">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="426">MAC failure. Since 1.10.</doc>
      </member>
      <member name="synch_failure"
              value="21"
              c:identifier="MBIM_NW_ERROR_SYNCH_FAILURE"
              glib:nick="synch-failure">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="427">Synch failure. Since 1.10.</doc>
      </member>
      <member name="congestion"
              value="22"
              c:identifier="MBIM_NW_ERROR_CONGESTION"
              glib:nick="congestion">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="428">Congestion.</doc>
      </member>
      <member name="gsm_authentication_unacceptable"
              value="23"
              c:identifier="MBIM_NW_ERROR_GSM_AUTHENTICATION_UNACCEPTABLE"
              glib:nick="gsm-authentication-unacceptable">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="429">GSM authentication unacceptable. Since 1.10.</doc>
      </member>
      <member name="not_authorized_for_csg"
              value="25"
              c:identifier="MBIM_NW_ERROR_NOT_AUTHORIZED_FOR_CSG"
              glib:nick="not-authorized-for-csg">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="430">Not authorized for this CSG. Since 1.10.</doc>
      </member>
      <member name="insufficient_resources"
              value="26"
              c:identifier="MBIM_NW_ERROR_INSUFFICIENT_RESOURCES"
              glib:nick="insufficient-resources">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="431">Insufficient resources. Since 1.18.</doc>
      </member>
      <member name="missing_or_unknown_apn"
              value="27"
              c:identifier="MBIM_NW_ERROR_MISSING_OR_UNKNOWN_APN"
              glib:nick="missing-or-unknown-apn">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="432">Missing or unknown access point name. Since 1.10.</doc>
      </member>
      <member name="unknown_pdp_address_or_type"
              value="28"
              c:identifier="MBIM_NW_ERROR_UNKNOWN_PDP_ADDRESS_OR_TYPE"
              glib:nick="unknown-pdp-address-or-type">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="433">Unknown PDP address or PDP type. Since 1.18.</doc>
      </member>
      <member name="user_authentication_failed"
              value="29"
              c:identifier="MBIM_NW_ERROR_USER_AUTHENTICATION_FAILED"
              glib:nick="user-authentication-failed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="434">User authentication failed. Since 1.18.</doc>
      </member>
      <member name="activation_rejected_by_ggsn_or_gw"
              value="30"
              c:identifier="MBIM_NW_ERROR_ACTIVATION_REJECTED_BY_GGSN_OR_GW"
              glib:nick="activation-rejected-by-ggsn-or-gw">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="435">Activation rejected by GGSN, Serving GW or PDN GW. Since 1.18.</doc>
      </member>
      <member name="activation_rejected_unspecified"
              value="31"
              c:identifier="MBIM_NW_ERROR_ACTIVATION_REJECTED_UNSPECIFIED"
              glib:nick="activation-rejected-unspecified">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="436">Activation rejected, unspecified. Since 1.18.</doc>
      </member>
      <member name="service_option_not_supported"
              value="32"
              c:identifier="MBIM_NW_ERROR_SERVICE_OPTION_NOT_SUPPORTED"
              glib:nick="service-option-not-supported">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="437">Service option not supported. Since 1.10.</doc>
      </member>
      <member name="requested_service_option_not_subscribed"
              value="33"
              c:identifier="MBIM_NW_ERROR_REQUESTED_SERVICE_OPTION_NOT_SUBSCRIBED"
              glib:nick="requested-service-option-not-subscribed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="438">Requested service option not subscribed. Since 1.10.</doc>
      </member>
      <member name="service_option_temporarily_out_of_order"
              value="34"
              c:identifier="MBIM_NW_ERROR_SERVICE_OPTION_TEMPORARILY_OUT_OF_ORDER"
              glib:nick="service-option-temporarily-out-of-order">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="439">Service option temporarily out of order. Since 1.10.</doc>
      </member>
      <member name="no_pdp_context_activated"
              value="40"
              c:identifier="MBIM_NW_ERROR_NO_PDP_CONTEXT_ACTIVATED"
              glib:nick="no-pdp-context-activated">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="440">No PDP context activated. Since 1.10.</doc>
      </member>
      <member name="pdp_type_ipv4_only_allowed"
              value="50"
              c:identifier="MBIM_NW_ERROR_PDP_TYPE_IPV4_ONLY_ALLOWED"
              glib:nick="pdp-type-ipv4-only-allowed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="441">PDP type IPv4 only allowed. Since 1.18.</doc>
      </member>
      <member name="pdp_type_ipv6_only_allowed"
              value="51"
              c:identifier="MBIM_NW_ERROR_PDP_TYPE_IPV6_ONLY_ALLOWED"
              glib:nick="pdp-type-ipv6-only-allowed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="442">PDP type IPv6 only allowed. Since 1.18.</doc>
      </member>
      <member name="maximum_number_of_pdp_contexts_reached"
              value="65"
              c:identifier="MBIM_NW_ERROR_MAXIMUM_NUMBER_OF_PDP_CONTEXTS_REACHED"
              glib:nick="maximum-number-of-pdp-contexts-reached">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="443">Maximum number of PDP contexts reached. Since 1.18.</doc>
      </member>
      <member name="requested_apn_not_supported_in_current_rat_and_plmn"
              value="66"
              c:identifier="MBIM_NW_ERROR_REQUESTED_APN_NOT_SUPPORTED_IN_CURRENT_RAT_AND_PLMN"
              glib:nick="requested-apn-not-supported-in-current-rat-and-plmn">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="444">Requested APN not supported in current RAT and PLMN combination. Since 1.18.</doc>
      </member>
      <member name="semantically_incorrect_message"
              value="95"
              c:identifier="MBIM_NW_ERROR_SEMANTICALLY_INCORRECT_MESSAGE"
              glib:nick="semantically-incorrect-message">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="445">Semantically incorrect message. Since 1.10.</doc>
      </member>
      <member name="invalid_mandatory_information"
              value="96"
              c:identifier="MBIM_NW_ERROR_INVALID_MANDATORY_INFORMATION"
              glib:nick="invalid-mandatory-information">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="446">Invalid mandatory information. Since 1.10.</doc>
      </member>
      <member name="message_type_non_existent_or_not_implemented"
              value="97"
              c:identifier="MBIM_NW_ERROR_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENTED"
              glib:nick="message-type-non-existent-or-not-implemented">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="447">Message type non-existent or not implemented. Since 1.10.</doc>
      </member>
      <member name="message_type_not_compatible_with_protocol_state"
              value="98"
              c:identifier="MBIM_NW_ERROR_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE"
              glib:nick="message-type-not-compatible-with-protocol-state">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="448">Message type not compatible with protocol state. Since 1.10.</doc>
      </member>
      <member name="information_element_non_existent_or_not_implemented"
              value="99"
              c:identifier="MBIM_NW_ERROR_INFORMATION_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED"
              glib:nick="information-element-non-existent-or-not-implemented">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="449">Information element non-existent or not implemented. Since 1.10.</doc>
      </member>
      <member name="conditional_ie_error"
              value="100"
              c:identifier="MBIM_NW_ERROR_CONDITIONAL_IE_ERROR"
              glib:nick="conditional-ie-error">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="450">Conditional IE error. Since 1.10.</doc>
      </member>
      <member name="message_not_compatible_with_protocol_state"
              value="101"
              c:identifier="MBIM_NW_ERROR_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE"
              glib:nick="message-not-compatible-with-protocol-state">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="451">Message not compatible with protocol state. Since 1.10.</doc>
      </member>
      <member name="protocol_error_unspecified"
              value="111"
              c:identifier="MBIM_NW_ERROR_PROTOCOL_ERROR_UNSPECIFIED"
              glib:nick="protocol-error-unspecified">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="452">Protocol error, unspecified. Since 1.10.</doc>
      </member>
      <member name="apn_restriction_value_incompatible_with_active_pdp_context"
              value="112"
              c:identifier="MBIM_NW_ERROR_APN_RESTRICTION_VALUE_INCOMPATIBLE_WITH_ACTIVE_PDP_CONTEXT"
              glib:nick="apn-restriction-value-incompatible-with-active-pdp-context">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="453">APN restriction value incompatible with active PDP context. Since 1.18.</doc>
      </member>
      <member name="multiple_accesses_to_a_pdn_connection_not_allowed"
              value="113"
              c:identifier="MBIM_NW_ERROR_MULTIPLE_ACCESSES_TO_A_PDN_CONNECTION_NOT_ALLOWED"
              glib:nick="multiple-accesses-to-a-pdn-connection-not-allowed">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="454">Multiple accesses to a PDN connection not allowed. Since 1.18.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_nw_error_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1079">Gets the nickname string for the #MbimNwError specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1089"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1085">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1081">a MbimNwError.</doc>
            <type name="NwError" c:type="MbimNwError"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <function-macro name="PROXY" c:identifier="MBIM_PROXY" introspectable="0">
      <source-position filename="mbim-proxy.h" line="51"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROXY_CLASS"
                    c:identifier="MBIM_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="mbim-proxy.h" line="52"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROXY_GET_CLASS"
                    c:identifier="MBIM_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="mbim-proxy.h" line="55"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PROXY_N_CLIENTS"
              value="mbim-proxy-n-clients"
              c:type="MBIM_PROXY_N_CLIENTS"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-proxy.h"
           line="70">Symbol defining the #MbimProxy:mbim-proxy-n-clients property.</doc>
      <source-position filename="mbim-proxy.h" line="77"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROXY_N_DEVICES"
              value="mbim-proxy-n-devices"
              c:type="MBIM_PROXY_N_DEVICES"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-proxy.h"
           line="79">Symbol defining the #MbimProxy:mbim-proxy-n-devices property.</doc>
      <source-position filename="mbim-proxy.h" line="86"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="PROXY_SOCKET_PATH"
              value="mbim-proxy"
              c:type="MBIM_PROXY_SOCKET_PATH"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-proxy.h"
           line="61">Symbol defining the default abstract socket name where the #MbimProxy will listen.</doc>
      <source-position filename="mbim-proxy.h" line="68"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <record name="PacketFilter" c:type="MbimPacketFilter" version="1.4">
      <source-position filename="generated/mbim-basic-connect.h" line="323"/>
      <field name="filter_size" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="313">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="packet_filter" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="314">an array of #guint8 values.</doc>
        <type name="guint8" c:type="guint8*"/>
      </field>
      <field name="packet_mask" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="315">an array of #guint8 values.</doc>
        <type name="guint8" c:type="guint8*"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_packet_filter_array_free"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="333">Frees the memory allocated for the array of #MbimPacketFilters.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="341"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="335">a #NULL terminated array of #MbimPacketFilter structs.</doc>
            <type name="PacketFilterArray" c:type="MbimPacketFilterArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="PacketServiceAction"
                 version="1.0"
                 glib:type-name="MbimPacketServiceAction"
                 glib:get-type="mbim_packet_service_action_get_type"
                 c:type="MbimPacketServiceAction">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="582">Packet Service Action.</doc>
      <member name="attach"
              value="0"
              c:identifier="MBIM_PACKET_SERVICE_ACTION_ATTACH"
              glib:nick="attach">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="584">Attach.</doc>
      </member>
      <member name="detach"
              value="1"
              c:identifier="MBIM_PACKET_SERVICE_ACTION_DETACH"
              glib:nick="detach">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="585">Detach.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_packet_service_action_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1249">Gets the nickname string for the #MbimPacketServiceAction specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1259"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1255">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1251">a MbimPacketServiceAction.</doc>
            <type name="PacketServiceAction" c:type="MbimPacketServiceAction"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PacketServiceState"
                 version="1.0"
                 glib:type-name="MbimPacketServiceState"
                 glib:get-type="mbim_packet_service_state_get_type"
                 c:type="MbimPacketServiceState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="596">Packet Service State.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_PACKET_SERVICE_STATE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="598">Unknown.</doc>
      </member>
      <member name="attaching"
              value="1"
              c:identifier="MBIM_PACKET_SERVICE_STATE_ATTACHING"
              glib:nick="attaching">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="599">Attaching.</doc>
      </member>
      <member name="attached"
              value="2"
              c:identifier="MBIM_PACKET_SERVICE_STATE_ATTACHED"
              glib:nick="attached">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="600">Attached.</doc>
      </member>
      <member name="detaching"
              value="3"
              c:identifier="MBIM_PACKET_SERVICE_STATE_DETACHING"
              glib:nick="detaching">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="601">Detaching.</doc>
      </member>
      <member name="detached"
              value="4"
              c:identifier="MBIM_PACKET_SERVICE_STATE_DETACHED"
              glib:nick="detached">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="602">Detached.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_packet_service_state_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1283">Gets the nickname string for the #MbimPacketServiceState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1293"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1289">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1285">a MbimPacketServiceState.</doc>
            <type name="PacketServiceState" c:type="MbimPacketServiceState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PcoType"
                 version="1.18"
                 glib:type-name="MbimPcoType"
                 glib:get-type="mbim_pco_type_get_type"
                 c:type="MbimPcoType">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1134">Type of PCO structure.</doc>
      <member name="complete"
              value="0"
              c:identifier="MBIM_PCO_TYPE_COMPLETE"
              glib:nick="complete">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1136">The PCO structure is complete.</doc>
      </member>
      <member name="partial"
              value="1"
              c:identifier="MBIM_PCO_TYPE_PARTIAL"
              glib:nick="partial">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1137">The PCO structure is a subset of what was received from the network.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_pco_type_get_string"
                version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2235">Gets the nickname string for the #MbimPcoType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2245"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2241">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2237">a MbimPcoType.</doc>
            <type name="PcoType" c:type="MbimPcoType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="PcoValue" c:type="MbimPcoValue" version="1.18">
      <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                       line="54"/>
      <field name="session_id" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="42">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pco_data_size" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="43">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pco_data_type" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="44">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pco_data_buffer" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="45">an array of #guint8 values.</doc>
        <type name="guint8" c:type="guint8*"/>
      </field>
      <method name="free" c:identifier="mbim_pco_value_free" version="1.18">
        <doc xml:space="preserve"
             filename="generated/mbim-ms-basic-connect-extensions.h"
             line="56">Frees the memory allocated for the #MbimPcoValue.</doc>
        <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="var" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-ms-basic-connect-extensions.h"
                 line="58">a #MbimPcoValue.</doc>
            <type name="PcoValue" c:type="MbimPcoValue*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="PhonebookEntry" c:type="MbimPhonebookEntry" version="1.4">
      <source-position filename="generated/mbim-phonebook.h" line="52"/>
      <field name="entry_index" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="42">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="number" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="43">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="name" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="44">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_phonebook_entry_array_free"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-phonebook.h"
             line="62">Frees the memory allocated for the array of #MbimPhonebookEntrys.</doc>
        <source-position filename="generated/mbim-phonebook.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-phonebook.h"
                 line="64">a #NULL terminated array of #MbimPhonebookEntry structs.</doc>
            <type name="PhonebookEntryArray"
                  c:type="MbimPhonebookEntryArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="PhonebookFlag"
                 version="1.4"
                 glib:type-name="MbimPhonebookFlag"
                 glib:get-type="mbim_phonebook_flag_get_type"
                 c:type="MbimPhonebookFlag">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="969">Flags to use when reading the phonebook.</doc>
      <member name="all"
              value="0"
              c:identifier="MBIM_PHONEBOOK_FLAG_ALL"
              glib:nick="all">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="971">Request all.</doc>
      </member>
      <member name="index"
              value="1"
              c:identifier="MBIM_PHONEBOOK_FLAG_INDEX"
              glib:nick="index">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="972">Request single entry by index.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_phonebook_flag_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1929">Gets the nickname string for the #MbimPhonebookFlag specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1939"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1935">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1931">a MbimPhonebookFlag.</doc>
            <type name="PhonebookFlag" c:type="MbimPhonebookFlag"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PhonebookState"
                 version="1.4"
                 glib:type-name="MbimPhonebookState"
                 glib:get-type="mbim_phonebook_state_get_type"
                 c:type="MbimPhonebookState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="952">Phonebook state.</doc>
      <member name="not_initialized"
              value="0"
              c:identifier="MBIM_PHONEBOOK_STATE_NOT_INITIALIZED"
              glib:nick="not-initialized">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="954">Not initialized.</doc>
      </member>
      <member name="initialized"
              value="1"
              c:identifier="MBIM_PHONEBOOK_STATE_INITIALIZED"
              glib:nick="initialized">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="955">Initialized</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_phonebook_state_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1895">Gets the nickname string for the #MbimPhonebookState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1905"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1901">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1897">a MbimPhonebookState.</doc>
            <type name="PhonebookState" c:type="MbimPhonebookState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PhonebookWriteFlag"
                 version="1.4"
                 glib:type-name="MbimPhonebookWriteFlag"
                 glib:get-type="mbim_phonebook_write_flag_get_type"
                 c:type="MbimPhonebookWriteFlag">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="983">Flags to use when writing the phonebook.</doc>
      <member name="unused"
              value="0"
              c:identifier="MBIM_PHONEBOOK_WRITE_FLAG_SAVE_UNUSED"
              glib:nick="unused">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="985">Store the record in an unused slot.</doc>
      </member>
      <member name="index"
              value="1"
              c:identifier="MBIM_PHONEBOOK_WRITE_FLAG_SAVE_INDEX"
              glib:nick="index">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="986">Index where to store the record.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_phonebook_write_flag_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1963">Gets the nickname string for the #MbimPhonebookWriteFlag specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1973"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1969">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1965">a MbimPhonebookWriteFlag.</doc>
            <type name="PhonebookWriteFlag" c:type="MbimPhonebookWriteFlag"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="PinDesc" c:type="MbimPinDesc" version="1.0">
      <source-position filename="generated/mbim-basic-connect.h" line="54"/>
      <field name="pin_mode" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="42">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pin_format" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="43">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pin_length_min" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="44">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pin_length_max" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="45">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <method name="free" c:identifier="mbim_pin_desc_free" version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="56">Frees the memory allocated for the #MbimPinDesc.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="var" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="58">a #MbimPinDesc.</doc>
            <type name="PinDesc" c:type="MbimPinDesc*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="PinFormat"
                 version="1.0"
                 glib:type-name="MbimPinFormat"
                 glib:get-type="mbim_pin_format_get_type"
                 c:type="MbimPinFormat">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="344">Format of the expected PIN code.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_PIN_FORMAT_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="346">Unknown format.</doc>
      </member>
      <member name="numeric"
              value="1"
              c:identifier="MBIM_PIN_FORMAT_NUMERIC"
              glib:nick="numeric">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="347">Numeric-only format.</doc>
      </member>
      <member name="alphanumeric"
              value="2"
              c:identifier="MBIM_PIN_FORMAT_ALPHANUMERIC"
              glib:nick="alphanumeric">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="348">Alphanumeric format.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_pin_format_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="977">Gets the nickname string for the #MbimPinFormat specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="987"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="983">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="979">a MbimPinFormat.</doc>
            <type name="PinFormat" c:type="MbimPinFormat"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PinMode"
                 version="1.0"
                 glib:type-name="MbimPinMode"
                 glib:get-type="mbim_pin_mode_get_type"
                 c:type="MbimPinMode">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="328">Whether the lock is enabled or disabled.</doc>
      <member name="not_supported"
              value="0"
              c:identifier="MBIM_PIN_MODE_NOT_SUPPORTED"
              glib:nick="not-supported">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="330">Not supported.</doc>
      </member>
      <member name="enabled"
              value="1"
              c:identifier="MBIM_PIN_MODE_ENABLED"
              glib:nick="enabled">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="331">Enabled.</doc>
      </member>
      <member name="disabled"
              value="2"
              c:identifier="MBIM_PIN_MODE_DISABLED"
              glib:nick="disabled">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="332">Disabled.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_pin_mode_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="943">Gets the nickname string for the #MbimPinMode specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="953"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="949">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="945">a MbimPinMode.</doc>
            <type name="PinMode" c:type="MbimPinMode"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PinOperation"
                 version="1.0"
                 glib:type-name="MbimPinOperation"
                 glib:get-type="mbim_pin_operation_get_type"
                 c:type="MbimPinOperation">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="307">Operation to perform on the PIN.</doc>
      <member name="enter"
              value="0"
              c:identifier="MBIM_PIN_OPERATION_ENTER"
              glib:nick="enter">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="309">Enter the specified PIN into the device.</doc>
      </member>
      <member name="enable"
              value="1"
              c:identifier="MBIM_PIN_OPERATION_ENABLE"
              glib:nick="enable">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="310">Enable the specified PIN.</doc>
      </member>
      <member name="disable"
              value="2"
              c:identifier="MBIM_PIN_OPERATION_DISABLE"
              glib:nick="disable">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="311">Disable the specified PIN.</doc>
      </member>
      <member name="change"
              value="3"
              c:identifier="MBIM_PIN_OPERATION_CHANGE"
              glib:nick="change">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="312">Change the specified PIN.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_pin_operation_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="909">Gets the nickname string for the #MbimPinOperation specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="919"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="915">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="911">a MbimPinOperation.</doc>
            <type name="PinOperation" c:type="MbimPinOperation"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PinState"
                 version="1.0"
                 glib:type-name="MbimPinState"
                 glib:get-type="mbim_pin_state_get_type"
                 c:type="MbimPinState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="293">PIN States.</doc>
      <member name="unlocked"
              value="0"
              c:identifier="MBIM_PIN_STATE_UNLOCKED"
              glib:nick="unlocked">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="295">The device does not require a PIN.</doc>
      </member>
      <member name="locked"
              value="1"
              c:identifier="MBIM_PIN_STATE_LOCKED"
              glib:nick="locked">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="296">The device requires the user to enter a PIN.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_pin_state_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="875">Gets the nickname string for the #MbimPinState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="885"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="881">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="877">a MbimPinState.</doc>
            <type name="PinState" c:type="MbimPinState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="PinType"
                 version="1.0"
                 glib:type-name="MbimPinType"
                 glib:get-type="mbim_pin_type_get_type"
                 c:type="MbimPinType">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="247">PIN Types.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_PIN_TYPE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="249">Unknown or unset.</doc>
      </member>
      <member name="custom"
              value="1"
              c:identifier="MBIM_PIN_TYPE_CUSTOM"
              glib:nick="custom">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="250">The PIN type is a custom type and is none of the other PIN types listed in this enumeration.</doc>
      </member>
      <member name="pin1"
              value="2"
              c:identifier="MBIM_PIN_TYPE_PIN1"
              glib:nick="pin1">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="251">The PIN1 key.</doc>
      </member>
      <member name="pin2"
              value="3"
              c:identifier="MBIM_PIN_TYPE_PIN2"
              glib:nick="pin2">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="252">The PIN2 key.</doc>
      </member>
      <member name="device_sim_pin"
              value="4"
              c:identifier="MBIM_PIN_TYPE_DEVICE_SIM_PIN"
              glib:nick="device-sim-pin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="253">The device to SIM key.</doc>
      </member>
      <member name="device_first_sim_pin"
              value="5"
              c:identifier="MBIM_PIN_TYPE_DEVICE_FIRST_SIM_PIN"
              glib:nick="device-first-sim-pin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="254">The device to very first SIM key.</doc>
      </member>
      <member name="network_pin"
              value="6"
              c:identifier="MBIM_PIN_TYPE_NETWORK_PIN"
              glib:nick="network-pin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="255">The network personalization key.</doc>
      </member>
      <member name="network_subset_pin"
              value="7"
              c:identifier="MBIM_PIN_TYPE_NETWORK_SUBSET_PIN"
              glib:nick="network-subset-pin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="256">The network subset personalization key.</doc>
      </member>
      <member name="service_provider_pin"
              value="8"
              c:identifier="MBIM_PIN_TYPE_SERVICE_PROVIDER_PIN"
              glib:nick="service-provider-pin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="257">The service provider (SP) personalization key.</doc>
      </member>
      <member name="corporate_pin"
              value="9"
              c:identifier="MBIM_PIN_TYPE_CORPORATE_PIN"
              glib:nick="corporate-pin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="258">The corporate personalization key.</doc>
      </member>
      <member name="subsidy_pin"
              value="10"
              c:identifier="MBIM_PIN_TYPE_SUBSIDY_PIN"
              glib:nick="subsidy-pin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="259">The subsidy unlock key.</doc>
      </member>
      <member name="puk1"
              value="11"
              c:identifier="MBIM_PIN_TYPE_PUK1"
              glib:nick="puk1">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="260">The Personal Identification Number1 Unlock Key (PUK1).</doc>
      </member>
      <member name="puk2"
              value="12"
              c:identifier="MBIM_PIN_TYPE_PUK2"
              glib:nick="puk2">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="261">The Personal Identification Number2 Unlock Key (PUK2).</doc>
      </member>
      <member name="device_first_sim_puk"
              value="13"
              c:identifier="MBIM_PIN_TYPE_DEVICE_FIRST_SIM_PUK"
              glib:nick="device-first-sim-puk">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="262">The device to very first SIM PIN unlock key.</doc>
      </member>
      <member name="network_puk"
              value="14"
              c:identifier="MBIM_PIN_TYPE_NETWORK_PUK"
              glib:nick="network-puk">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="263">The network personalization unlock key.</doc>
      </member>
      <member name="network_subset_puk"
              value="15"
              c:identifier="MBIM_PIN_TYPE_NETWORK_SUBSET_PUK"
              glib:nick="network-subset-puk">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="264">The network subset personalization unlock key.</doc>
      </member>
      <member name="service_provider_puk"
              value="16"
              c:identifier="MBIM_PIN_TYPE_SERVICE_PROVIDER_PUK"
              glib:nick="service-provider-puk">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="265">The service provider (SP) personalization unlock key.</doc>
      </member>
      <member name="corporate_puk"
              value="17"
              c:identifier="MBIM_PIN_TYPE_CORPORATE_PUK"
              glib:nick="corporate-puk">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="266">The corporate personalization unlock key.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_pin_type_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="841">Gets the nickname string for the #MbimPinType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="851"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="847">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="843">a MbimPinType.</doc>
            <type name="PinType" c:type="MbimPinType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="ProtocolError"
                 version="1.0"
                 glib:type-name="MbimProtocolError"
                 glib:get-type="mbim_protocol_error_get_type"
                 c:type="MbimProtocolError"
                 glib:error-domain="mbim_protocol_error_quark">
      <doc xml:space="preserve"
           filename="mbim-errors.h"
           line="70">MBIM protocol errors.</doc>
      <member name="Invalid"
              value="0"
              c:identifier="MBIM_PROTOCOL_ERROR_INVALID"
              glib:nick="Invalid">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="72">Invalid MBIM error.</doc>
      </member>
      <member name="TimeoutFragment"
              value="1"
              c:identifier="MBIM_PROTOCOL_ERROR_TIMEOUT_FRAGMENT"
              glib:nick="TimeoutFragment">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="73">Timeout waiting for fragment.</doc>
      </member>
      <member name="FragmentOutOfSequence"
              value="2"
              c:identifier="MBIM_PROTOCOL_ERROR_FRAGMENT_OUT_OF_SEQUENCE"
              glib:nick="FragmentOutOfSequence">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="74">Fragment received out of sequence.</doc>
      </member>
      <member name="LengthMismatch"
              value="3"
              c:identifier="MBIM_PROTOCOL_ERROR_LENGTH_MISMATCH"
              glib:nick="LengthMismatch">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="75">Length mismatch.</doc>
      </member>
      <member name="DuplicatedTid"
              value="4"
              c:identifier="MBIM_PROTOCOL_ERROR_DUPLICATED_TID"
              glib:nick="DuplicatedTid">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="76">Duplicated transaction ID.</doc>
      </member>
      <member name="NotOpened"
              value="5"
              c:identifier="MBIM_PROTOCOL_ERROR_NOT_OPENED"
              glib:nick="NotOpened">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="77">Not opened.</doc>
      </member>
      <member name="Unknown"
              value="6"
              c:identifier="MBIM_PROTOCOL_ERROR_UNKNOWN"
              glib:nick="Unknown">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="78">Unknown error.</doc>
      </member>
      <member name="Cancel"
              value="7"
              c:identifier="MBIM_PROTOCOL_ERROR_CANCEL"
              glib:nick="Cancel">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="79">Cancel the operation.</doc>
      </member>
      <member name="MaxTransfer"
              value="8"
              c:identifier="MBIM_PROTOCOL_ERROR_MAX_TRANSFER"
              glib:nick="MaxTransfer">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="80">Maximum control transfer not supported.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_protocol_error_get_string">
        <doc xml:space="preserve"
             filename="generated/mbim-error-types.c"
             line="92">Gets the nickname string for the #MbimProtocolError specified at @val.</doc>
        <source-position filename="generated/mbim-error-types.h" line="22"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-error-types.c"
               line="98">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-error-types.c"
                 line="94">a MbimProtocolError.</doc>
            <type name="ProtocolError" c:type="MbimProtocolError"/>
          </parameter>
        </parameters>
      </function>
      <function name="quark" c:identifier="mbim_protocol_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="Provider" c:type="MbimProvider" version="1.2">
      <source-position filename="generated/mbim-basic-connect.h" line="88"/>
      <field name="provider_id" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="72">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="provider_state" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="73">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="provider_name" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="74">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="cellular_class" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="75">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="rssi" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="76">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="error_rate" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="77">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <method name="free" c:identifier="mbim_provider_free" version="1.2">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="90">Frees the memory allocated for the #MbimProvider.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="var" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="92">a #MbimProvider.</doc>
            <type name="Provider" c:type="MbimProvider*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="array_free"
                c:identifier="mbim_provider_array_free"
                version="1.2">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="109">Frees the memory allocated for the array of #MbimProviders.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="111">a #NULL terminated array of #MbimProvider structs.</doc>
            <type name="ProviderArray" c:type="MbimProviderArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <bitfield name="ProviderState"
              version="1.2"
              glib:type-name="MbimProviderState"
              glib:get-type="mbim_provider_state_get_type"
              c:type="MbimProviderState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="363">State of the provider.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_PROVIDER_STATE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="365">Unknown.</doc>
      </member>
      <member name="home"
              value="1"
              c:identifier="MBIM_PROVIDER_STATE_HOME"
              glib:nick="home">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="366">Home operator.</doc>
      </member>
      <member name="forbidden"
              value="2"
              c:identifier="MBIM_PROVIDER_STATE_FORBIDDEN"
              glib:nick="forbidden">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="367">Provider blocked.</doc>
      </member>
      <member name="preferred"
              value="4"
              c:identifier="MBIM_PROVIDER_STATE_PREFERRED"
              glib:nick="preferred">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="368">Provider is in the preferred list.</doc>
      </member>
      <member name="visible"
              value="8"
              c:identifier="MBIM_PROVIDER_STATE_VISIBLE"
              glib:nick="visible">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="369">Provider is visible.</doc>
      </member>
      <member name="registered"
              value="16"
              c:identifier="MBIM_PROVIDER_STATE_REGISTERED"
              glib:nick="registered">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="370">Currently registered to the provider.</doc>
      </member>
      <member name="preferred_multicarrier"
              value="32"
              c:identifier="MBIM_PROVIDER_STATE_PREFERRED_MULTICARRIER"
              glib:nick="preferred-multicarrier">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="371">Provider is a preferred multicarrier network.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_provider_state_build_string_from_mask"
                version="1.2">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1025">Builds a string containing a comma-separated list of nicknames for
each #MbimProviderState in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1036"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1032">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1027">bitmask of MbimProviderState values.</doc>
            <type name="ProviderState" c:type="MbimProviderState"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <record name="ProvisionedContextElement"
            c:type="MbimProvisionedContextElement"
            version="1.0">
      <source-position filename="generated/mbim-basic-connect.h" line="143"/>
      <field name="context_id" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="125">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="context_type" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="126">a #MbimUuid.</doc>
        <type name="Uuid" c:type="MbimUuid"/>
      </field>
      <field name="access_string" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="127">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="user_name" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="128">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="password" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="129">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="compression" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="130">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="auth_protocol" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="131">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_provisioned_context_element_array_free"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-basic-connect.h"
             line="153">Frees the memory allocated for the array of #MbimProvisionedContextElements.</doc>
        <source-position filename="generated/mbim-basic-connect.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-basic-connect.h"
                 line="155">a #NULL terminated array of #MbimProvisionedContextElement structs.</doc>
            <type name="ProvisionedContextElementArray"
                  c:type="MbimProvisionedContextElementArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="Proxy"
           c:symbol-prefix="proxy"
           c:type="MbimProxy"
           version="1.10"
           parent="GObject.Object"
           glib:type-name="MbimProxy"
           glib:get-type="mbim_proxy_get_type"
           glib:type-struct="ProxyClass">
      <doc xml:space="preserve"
           filename="mbim-proxy.h"
           line="36">The #MbimProxy will setup an abstract socket listening on a predefined
address, and will take care of synchronizing the access to a set of shared
MBIM ports.

Multiple #MbimDevice objects may be connected to the #MbimProxy at any given
time. The #MbimProxy acts as a stateful proxy (all remote #MbimDevice objects
will need to share the same message sequence).</doc>
      <source-position filename="mbim-proxy.h" line="103"/>
      <constructor name="new"
                   c:identifier="mbim_proxy_new"
                   version="1.10"
                   throws="1">
        <doc xml:space="preserve"
             filename="mbim-proxy.h"
             line="108">Creates a #MbimProxy object.</doc>
        <source-position filename="mbim-proxy.h" line="118"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-proxy.h"
               line="114">a newly created #MbimProxy, or #NULL if @error is set.</doc>
          <type name="Proxy" c:type="MbimProxy*"/>
        </return-value>
      </constructor>
      <method name="get_n_clients"
              c:identifier="mbim_proxy_get_n_clients"
              version="1.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="mbim-proxy.h"
             line="120">Get the number of clients currently connected to the proxy.</doc>
        <source-position filename="mbim-proxy.h" line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-proxy.h"
               line="126">a #guint.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-proxy.h"
                 line="122">a #MbimProxy.</doc>
            <type name="Proxy" c:type="MbimProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_devices"
              c:identifier="mbim_proxy_get_n_devices"
              version="1.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="mbim-proxy.h"
             line="132">Get the number of devices currently connected to the proxy.</doc>
        <source-position filename="mbim-proxy.h" line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-proxy.h"
               line="138">a #guint.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-proxy.h"
                 line="134">a #MbimProxy.</doc>
            <type name="Proxy" c:type="MbimProxy*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="mbim-proxy-n-clients" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="mbim-proxy-n-devices" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ProxyPrivate" c:type="MbimProxyPrivate*"/>
      </field>
    </class>
    <record name="ProxyClass"
            c:type="MbimProxyClass"
            glib:is-gtype-struct-for="Proxy">
      <source-position filename="mbim-proxy.h" line="103"/>
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ProxyPrivate" c:type="MbimProxyPrivate" disguised="1">
      <source-position filename="mbim-proxy.h" line="59"/>
    </record>
    <enumeration name="RadioSwitchState"
                 version="1.0"
                 glib:type-name="MbimRadioSwitchState"
                 glib:get-type="mbim_radio_switch_state_get_type"
                 c:type="MbimRadioSwitchState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="230">Radio switch state.</doc>
      <member name="off"
              value="0"
              c:identifier="MBIM_RADIO_SWITCH_STATE_OFF"
              glib:nick="off">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="232">Radio is off.</doc>
      </member>
      <member name="on"
              value="1"
              c:identifier="MBIM_RADIO_SWITCH_STATE_ON"
              glib:nick="on">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="233">Radio is on.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_radio_switch_state_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="807">Gets the nickname string for the #MbimRadioSwitchState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="817"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="813">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="809">a MbimRadioSwitchState.</doc>
            <type name="RadioSwitchState" c:type="MbimRadioSwitchState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <bitfield name="ReadyInfoFlag"
              version="1.0"
              glib:type-name="MbimReadyInfoFlag"
              glib:get-type="mbim_ready_info_flag_get_type"
              c:type="MbimReadyInfoFlag">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="213">Flag specifying how the ready info is treated.</doc>
      <member name="none"
              value="0"
              c:identifier="MBIM_READY_INFO_FLAG_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="215">Device in normal mode. Since 1.16.</doc>
      </member>
      <member name="protect_unique_id"
              value="1"
              c:identifier="MBIM_READY_INFO_FLAG_PROTECT_UNIQUE_ID"
              glib:nick="protect-unique-id">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="216">Request to avoid displaying subscriber ID.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_ready_info_flag_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="787">Builds a string containing a comma-separated list of nicknames for
each #MbimReadyInfoFlag in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="798"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="794">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="789">bitmask of MbimReadyInfoFlag values.</doc>
            <type name="ReadyInfoFlag" c:type="MbimReadyInfoFlag"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <enumeration name="RegisterAction"
                 version="1.0"
                 glib:type-name="MbimRegisterAction"
                 glib:get-type="mbim_register_action_get_type"
                 c:type="MbimRegisterAction">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="509">Type of registration requested.</doc>
      <member name="automatic"
              value="0"
              c:identifier="MBIM_REGISTER_ACTION_AUTOMATIC"
              glib:nick="automatic">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="511">Automatic registration.</doc>
      </member>
      <member name="manual"
              value="1"
              c:identifier="MBIM_REGISTER_ACTION_MANUAL"
              glib:nick="manual">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="512">Manual registration.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_register_action_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1113">Gets the nickname string for the #MbimRegisterAction specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1119">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1115">a MbimRegisterAction.</doc>
            <type name="RegisterAction" c:type="MbimRegisterAction"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="RegisterMode"
                 version="1.0"
                 glib:type-name="MbimRegisterMode"
                 glib:get-type="mbim_register_mode_get_type"
                 c:type="MbimRegisterMode">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="547">Type of registration requested.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_REGISTER_MODE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="549">Unknown.</doc>
      </member>
      <member name="automatic"
              value="1"
              c:identifier="MBIM_REGISTER_MODE_AUTOMATIC"
              glib:nick="automatic">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="550">Automatic registration.</doc>
      </member>
      <member name="manual"
              value="2"
              c:identifier="MBIM_REGISTER_MODE_MANUAL"
              glib:nick="manual">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="551">Manual registration.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_register_mode_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1181">Gets the nickname string for the #MbimRegisterMode specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1187">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1183">a MbimRegisterMode.</doc>
            <type name="RegisterMode" c:type="MbimRegisterMode"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="RegisterState"
                 version="1.0"
                 glib:type-name="MbimRegisterState"
                 glib:get-type="mbim_register_state_get_type"
                 c:type="MbimRegisterState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="523">Registration state.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_REGISTER_STATE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="525">Unknown registration state.</doc>
      </member>
      <member name="deregistered"
              value="1"
              c:identifier="MBIM_REGISTER_STATE_DEREGISTERED"
              glib:nick="deregistered">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="526">Not registered.</doc>
      </member>
      <member name="searching"
              value="2"
              c:identifier="MBIM_REGISTER_STATE_SEARCHING"
              glib:nick="searching">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="527">Searching.</doc>
      </member>
      <member name="home"
              value="3"
              c:identifier="MBIM_REGISTER_STATE_HOME"
              glib:nick="home">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="528">Registered in home network.</doc>
      </member>
      <member name="roaming"
              value="4"
              c:identifier="MBIM_REGISTER_STATE_ROAMING"
              glib:nick="roaming">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="529">Registered in roaming network.</doc>
      </member>
      <member name="partner"
              value="5"
              c:identifier="MBIM_REGISTER_STATE_PARTNER"
              glib:nick="partner">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="530">Registered in a preferred roaming network.</doc>
      </member>
      <member name="denied"
              value="6"
              c:identifier="MBIM_REGISTER_STATE_DENIED"
              glib:nick="denied">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="531">Registration denied.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_register_state_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1147">Gets the nickname string for the #MbimRegisterState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1153">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1149">a MbimRegisterState.</doc>
            <type name="RegisterState" c:type="MbimRegisterState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <bitfield name="RegistrationFlag"
              version="1.0"
              glib:type-name="MbimRegistrationFlag"
              glib:get-type="mbim_registration_flag_get_type"
              c:type="MbimRegistrationFlag">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="563">Registration flags.</doc>
      <member name="none"
              value="0"
              c:identifier="MBIM_REGISTRATION_FLAG_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="565">None.</doc>
      </member>
      <member name="manual_selection_not_available"
              value="1"
              c:identifier="MBIM_REGISTRATION_FLAG_MANUAL_SELECTION_NOT_AVAILABLE"
              glib:nick="manual-selection-not-available">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="566">Network doesn't support manual network selection.</doc>
      </member>
      <member name="packet_service_automatic_attach"
              value="2"
              c:identifier="MBIM_REGISTRATION_FLAG_PACKET_SERVICE_AUTOMATIC_ATTACH"
              glib:nick="packet-service-automatic-attach">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="567">Modem should auto-attach to the network after registration. Since 1.8.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_registration_flag_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1229">Builds a string containing a comma-separated list of nicknames for
each #MbimRegistrationFlag in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1240"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1236">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1231">bitmask of MbimRegistrationFlag values.</doc>
            <type name="RegistrationFlag" c:type="MbimRegistrationFlag"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <enumeration name="Service"
                 version="1.0"
                 glib:type-name="MbimService"
                 glib:get-type="mbim_service_get_type"
                 c:type="MbimService">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="108">Enumeration of the generic MBIM services.</doc>
      <member name="invalid"
              value="0"
              c:identifier="MBIM_SERVICE_INVALID"
              glib:nick="invalid">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="110">Invalid service.</doc>
      </member>
      <member name="basic_connect"
              value="1"
              c:identifier="MBIM_SERVICE_BASIC_CONNECT"
              glib:nick="basic-connect">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="111">Basic connectivity service.</doc>
      </member>
      <member name="sms"
              value="2"
              c:identifier="MBIM_SERVICE_SMS"
              glib:nick="sms">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="112">SMS messaging service.</doc>
      </member>
      <member name="ussd"
              value="3"
              c:identifier="MBIM_SERVICE_USSD"
              glib:nick="ussd">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="113">USSD service.</doc>
      </member>
      <member name="phonebook"
              value="4"
              c:identifier="MBIM_SERVICE_PHONEBOOK"
              glib:nick="phonebook">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="114">Phonebook service.</doc>
      </member>
      <member name="stk"
              value="5"
              c:identifier="MBIM_SERVICE_STK"
              glib:nick="stk">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="115">SIM toolkit service.</doc>
      </member>
      <member name="auth"
              value="6"
              c:identifier="MBIM_SERVICE_AUTH"
              glib:nick="auth">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="116">Authentication service.</doc>
      </member>
      <member name="dss"
              value="7"
              c:identifier="MBIM_SERVICE_DSS"
              glib:nick="dss">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="117">Device Service Stream service.</doc>
      </member>
      <member name="ms_firmware_id"
              value="8"
              c:identifier="MBIM_SERVICE_MS_FIRMWARE_ID"
              glib:nick="ms-firmware-id">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="118">Microsoft Firmware ID service. Since 1.8.</doc>
      </member>
      <member name="ms_host_shutdown"
              value="9"
              c:identifier="MBIM_SERVICE_MS_HOST_SHUTDOWN"
              glib:nick="ms-host-shutdown">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="119">Microsoft Host Shutdown service. Since 1.8.</doc>
      </member>
      <member name="proxy_control"
              value="10"
              c:identifier="MBIM_SERVICE_PROXY_CONTROL"
              glib:nick="proxy-control">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="120">Proxy Control service. Since 1.10.</doc>
      </member>
      <member name="qmi"
              value="11"
              c:identifier="MBIM_SERVICE_QMI"
              glib:nick="qmi">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="121">QMI-over-MBIM service. Since 1.14.</doc>
      </member>
      <member name="atds"
              value="12"
              c:identifier="MBIM_SERVICE_ATDS"
              glib:nick="atds">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="122">ATT Device service. Since 1.16.</doc>
      </member>
      <member name="intel_firmware_update"
              value="13"
              c:identifier="MBIM_SERVICE_INTEL_FIRMWARE_UPDATE"
              glib:nick="intel-firmware-update">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="123">Intel firmware update service. Since 1.16.</doc>
      </member>
      <member name="ms_basic_connect_extensions"
              value="14"
              c:identifier="MBIM_SERVICE_MS_BASIC_CONNECT_EXTENSIONS"
              glib:nick="ms-basic-connect-extensions">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="124">Microsoft basic connectivity extensions service. Since 1.18.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_service_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2477">Gets the nickname string for the #MbimService specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2487"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2483">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2479">a MbimService.</doc>
            <type name="Service" c:type="MbimService"/>
          </parameter>
        </parameters>
      </function>
      <function name="id_is_custom"
                c:identifier="mbim_service_id_is_custom"
                version="1.10">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="358">Checks whether @id is a custom or standard service.</doc>
        <source-position filename="mbim-uuid.h" line="368"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="364">TRUE if service is custom, FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="360">ID of the service</doc>
            <type name="guint" c:type="const guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="lookup_name"
                c:identifier="mbim_service_lookup_name"
                version="1.10">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="317">Gets the nickname string for the @service.

As opposed to mbim_service_get_string(), this methods takes into account
custom services that may have been registered by the user.</doc>
        <source-position filename="mbim-uuid.h" line="330"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="326">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="319">a MbimService or custom service.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <bitfield name="SimClass"
              version="1.0"
              glib:type-name="MbimSimClass"
              glib:get-type="mbim_sim_class_get_type"
              c:type="MbimSimClass">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="94">SIM class.</doc>
      <member name="logical"
              value="1"
              c:identifier="MBIM_SIM_CLASS_LOGICAL"
              glib:nick="logical">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="96">No physical SIM.</doc>
      </member>
      <member name="removable"
              value="2"
              c:identifier="MBIM_SIM_CLASS_REMOVABLE"
              glib:nick="removable">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="97">Physical removable SIM.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_sim_class_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="617">Builds a string containing a comma-separated list of nicknames for
each #MbimSimClass in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="628"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="624">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="619">bitmask of MbimSimClass values.</doc>
            <type name="SimClass" c:type="MbimSimClass"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <bitfield name="SmsCaps"
              version="1.0"
              glib:type-name="MbimSmsCaps"
              glib:get-type="mbim_sms_caps_get_type"
              c:type="MbimSmsCaps">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="148">SMS capabilities.</doc>
      <member name="pdu_receive"
              value="1"
              c:identifier="MBIM_SMS_CAPS_PDU_RECEIVE"
              glib:nick="pdu-receive">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="150">Can receive in PDU mode.</doc>
      </member>
      <member name="pdu_send"
              value="2"
              c:identifier="MBIM_SMS_CAPS_PDU_SEND"
              glib:nick="pdu-send">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="151">Can send in PDU mode.</doc>
      </member>
      <member name="text_receive"
              value="4"
              c:identifier="MBIM_SMS_CAPS_TEXT_RECEIVE"
              glib:nick="text-receive">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="152">Can receive in text mode.</doc>
      </member>
      <member name="text_send"
              value="8"
              c:identifier="MBIM_SMS_CAPS_TEXT_SEND"
              glib:nick="text-send">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="153">Can send in text mode.</doc>
      </member>
      <function name="build_string_from_mask"
                c:identifier="mbim_sms_caps_build_string_from_mask"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="685">Builds a string containing a comma-separated list of nicknames for
each #MbimSmsCaps in @mask.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="696"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="692">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="687">bitmask of MbimSmsCaps values.</doc>
            <type name="SmsCaps" c:type="MbimSmsCaps"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <enumeration name="SmsCdmaEncoding"
                 version="1.4"
                 glib:type-name="MbimSmsCdmaEncoding"
                 glib:get-type="mbim_sms_cdma_encoding_get_type"
                 c:type="MbimSmsCdmaEncoding">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="827">Type of encoding of a CDMA SMS.</doc>
      <member name="octet"
              value="0"
              c:identifier="MBIM_SMS_CDMA_ENCODING_OCTET"
              glib:nick="octet">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="829">Octet.</doc>
      </member>
      <member name="epm"
              value="1"
              c:identifier="MBIM_SMS_CDMA_ENCODING_EPM"
              glib:nick="epm">
        <doc xml:space="preserve" filename="mbim-enums.h" line="830">EPM.</doc>
      </member>
      <member name="7bit_ascii"
              value="2"
              c:identifier="MBIM_SMS_CDMA_ENCODING_7BIT_ASCII"
              glib:nick="7bit-ascii">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="831">7-bit ASCII.</doc>
      </member>
      <member name="la5"
              value="3"
              c:identifier="MBIM_SMS_CDMA_ENCODING_LA5"
              glib:nick="la5">
        <doc xml:space="preserve" filename="mbim-enums.h" line="832">LA5.</doc>
      </member>
      <member name="unicode"
              value="4"
              c:identifier="MBIM_SMS_CDMA_ENCODING_UNICODE"
              glib:nick="unicode">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="833">Unicode.</doc>
      </member>
      <member name="shift_jis"
              value="5"
              c:identifier="MBIM_SMS_CDMA_ENCODING_SHIFT_JIS"
              glib:nick="shift-jis">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="834">Shift JIS.</doc>
      </member>
      <member name="korean"
              value="6"
              c:identifier="MBIM_SMS_CDMA_ENCODING_KOREAN"
              glib:nick="korean">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="835">Korean.</doc>
      </member>
      <member name="latin_hebrew"
              value="7"
              c:identifier="MBIM_SMS_CDMA_ENCODING_LATIN_HEBREW"
              glib:nick="latin-hebrew">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="836">Latin hebrew.</doc>
      </member>
      <member name="latin"
              value="8"
              c:identifier="MBIM_SMS_CDMA_ENCODING_LATIN"
              glib:nick="latin">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="837">Latin.</doc>
      </member>
      <member name="gsm_7bit"
              value="9"
              c:identifier="MBIM_SMS_CDMA_ENCODING_GSM_7BIT"
              glib:nick="gsm-7bit">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="838">7-bit GSM.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_sms_cdma_encoding_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1691">Gets the nickname string for the #MbimSmsCdmaEncoding specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1701"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1697">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1693">a MbimSmsCdmaEncoding.</doc>
            <type name="SmsCdmaEncoding" c:type="MbimSmsCdmaEncoding"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="SmsCdmaLang"
                 version="1.4"
                 glib:type-name="MbimSmsCdmaLang"
                 glib:get-type="mbim_sms_cdma_lang_get_type"
                 c:type="MbimSmsCdmaLang">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="801">Language of a CDMA SMS.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_SMS_CDMA_LANG_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="803">Unknown language.</doc>
      </member>
      <member name="english"
              value="1"
              c:identifier="MBIM_SMS_CDMA_LANG_ENGLISH"
              glib:nick="english">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="804">English.</doc>
      </member>
      <member name="french"
              value="2"
              c:identifier="MBIM_SMS_CDMA_LANG_FRENCH"
              glib:nick="french">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="805">French.</doc>
      </member>
      <member name="spanish"
              value="3"
              c:identifier="MBIM_SMS_CDMA_LANG_SPANISH"
              glib:nick="spanish">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="806">Spanish.</doc>
      </member>
      <member name="japanese"
              value="4"
              c:identifier="MBIM_SMS_CDMA_LANG_JAPANESE"
              glib:nick="japanese">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="807">Japanese.</doc>
      </member>
      <member name="korean"
              value="5"
              c:identifier="MBIM_SMS_CDMA_LANG_KOREAN"
              glib:nick="korean">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="808">Korean.</doc>
      </member>
      <member name="chinese"
              value="6"
              c:identifier="MBIM_SMS_CDMA_LANG_CHINESE"
              glib:nick="chinese">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="809">Chinese.</doc>
      </member>
      <member name="hebrew"
              value="7"
              c:identifier="MBIM_SMS_CDMA_LANG_HEBREW"
              glib:nick="hebrew">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="810">Hebrew.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_sms_cdma_lang_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1657">Gets the nickname string for the #MbimSmsCdmaLang specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1667"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1663">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1659">a MbimSmsCdmaLang.</doc>
            <type name="SmsCdmaLang" c:type="MbimSmsCdmaLang"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="SmsCdmaReadRecord"
            c:type="MbimSmsCdmaReadRecord"
            version="1.4">
      <source-position filename="generated/mbim-sms.h" line="102"/>
      <field name="message_index" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="80">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="message_status" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="81">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="address" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="82">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="timestamp" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="83">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="encoding" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="84">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="language" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="85">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="encoded_message_size" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="86">size of the encoded_message array.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="encoded_message" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="87">an array of #guint8 values.</doc>
        <type name="guint8" c:type="guint8*"/>
      </field>
      <field name="encoded_message_size_in_characters" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="88">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_sms_cdma_read_record_array_free"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="112">Frees the memory allocated for the array of #MbimSmsCdmaReadRecords.</doc>
        <source-position filename="generated/mbim-sms.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="114">a #NULL terminated array of #MbimSmsCdmaReadRecord structs.</doc>
            <type name="SmsCdmaReadRecordArray"
                  c:type="MbimSmsCdmaReadRecordArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="SmsCdmaSendRecord"
            c:type="MbimSmsCdmaSendRecord"
            version="1.4">
      <source-position filename="generated/mbim-sms.h" line="170"/>
      <field name="encoding" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="154">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="language" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="155">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="address" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="156">a string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="encoded_message_size" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="157">size of the encoded_message array.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="encoded_message" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="158">an array of #guint8 values.</doc>
        <type name="guint8" c:type="guint8*"/>
      </field>
      <field name="encoded_message_size_in_characters" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="159">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <method name="free"
              c:identifier="mbim_sms_cdma_send_record_free"
              version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="172">Frees the memory allocated for the #MbimSmsCdmaSendRecord.</doc>
        <source-position filename="generated/mbim-sms.h" line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="var" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="174">a #MbimSmsCdmaSendRecord.</doc>
            <type name="SmsCdmaSendRecord" c:type="MbimSmsCdmaSendRecord*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="SmsFlag"
                 version="1.4"
                 glib:type-name="MbimSmsFlag"
                 glib:get-type="mbim_sms_flag_get_type"
                 c:type="MbimSmsFlag">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="778">Flags to use when requesting to read SMS. @MBIM_SMS_FLAG_ALL and
@MBIM_SMS_FLAG_NEW are mandatory, all the others are optional.</doc>
      <member name="all"
              value="0"
              c:identifier="MBIM_SMS_FLAG_ALL"
              glib:nick="all">
        <doc xml:space="preserve" filename="mbim-enums.h" line="780">All.</doc>
      </member>
      <member name="index"
              value="1"
              c:identifier="MBIM_SMS_FLAG_INDEX"
              glib:nick="index">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="781">Index.</doc>
      </member>
      <member name="new"
              value="2"
              c:identifier="MBIM_SMS_FLAG_NEW"
              glib:nick="new">
        <doc xml:space="preserve" filename="mbim-enums.h" line="782">New.</doc>
      </member>
      <member name="old"
              value="3"
              c:identifier="MBIM_SMS_FLAG_OLD"
              glib:nick="old">
        <doc xml:space="preserve" filename="mbim-enums.h" line="783">Old.</doc>
      </member>
      <member name="sent"
              value="4"
              c:identifier="MBIM_SMS_FLAG_SENT"
              glib:nick="sent">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="784">Sent.</doc>
      </member>
      <member name="draft"
              value="5"
              c:identifier="MBIM_SMS_FLAG_DRAFT"
              glib:nick="draft">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="785">Draft.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_sms_flag_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1623">Gets the nickname string for the #MbimSmsFlag specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1633"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1629">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1625">a MbimSmsFlag.</doc>
            <type name="SmsFlag" c:type="MbimSmsFlag"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="SmsFormat"
                 version="1.4"
                 glib:type-name="MbimSmsFormat"
                 glib:get-type="mbim_sms_format_get_type"
                 c:type="MbimSmsFormat">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="761">SMS format.</doc>
      <member name="pdu"
              value="0"
              c:identifier="MBIM_SMS_FORMAT_PDU"
              glib:nick="pdu">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="763">PDU format.</doc>
      </member>
      <member name="cdma"
              value="1"
              c:identifier="MBIM_SMS_FORMAT_CDMA"
              glib:nick="cdma">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="764">CDMA format.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_sms_format_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1589">Gets the nickname string for the #MbimSmsFormat specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1599"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1595">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1591">a MbimSmsFormat.</doc>
            <type name="SmsFormat" c:type="MbimSmsFormat"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="SmsPduReadRecord"
            c:type="MbimSmsPduReadRecord"
            version="1.4">
      <source-position filename="generated/mbim-sms.h" line="54"/>
      <field name="message_index" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="42">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="message_status" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="43">a #guint32.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pdu_data_size" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="44">size of the pdu_data array.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pdu_data" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="45">an array of #guint8 values.</doc>
        <type name="guint8" c:type="guint8*"/>
      </field>
      <function name="array_free"
                c:identifier="mbim_sms_pdu_read_record_array_free"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="64">Frees the memory allocated for the array of #MbimSmsPduReadRecords.</doc>
        <source-position filename="generated/mbim-sms.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="66">a #NULL terminated array of #MbimSmsPduReadRecord structs.</doc>
            <type name="SmsPduReadRecordArray"
                  c:type="MbimSmsPduReadRecordArray*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="SmsPduSendRecord"
            c:type="MbimSmsPduSendRecord"
            version="1.4">
      <source-position filename="generated/mbim-sms.h" line="136"/>
      <field name="pdu_data_size" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="128">size of the pdu_data array.</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pdu_data" writable="1">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="129">an array of #guint8 values.</doc>
        <type name="guint8" c:type="guint8*"/>
      </field>
      <method name="free"
              c:identifier="mbim_sms_pdu_send_record_free"
              version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-sms.h"
             line="138">Frees the memory allocated for the #MbimSmsPduSendRecord.</doc>
        <source-position filename="generated/mbim-sms.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="var" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-sms.h"
                 line="140">a #MbimSmsPduSendRecord.</doc>
            <type name="SmsPduSendRecord" c:type="MbimSmsPduSendRecord*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="SmsStatus"
                 version="1.4"
                 glib:type-name="MbimSmsStatus"
                 glib:get-type="mbim_sms_status_get_type"
                 c:type="MbimSmsStatus">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="857">Status of a SMS message.</doc>
      <member name="new"
              value="0"
              c:identifier="MBIM_SMS_STATUS_NEW"
              glib:nick="new">
        <doc xml:space="preserve" filename="mbim-enums.h" line="859">New.</doc>
      </member>
      <member name="old"
              value="1"
              c:identifier="MBIM_SMS_STATUS_OLD"
              glib:nick="old">
        <doc xml:space="preserve" filename="mbim-enums.h" line="860">Old.</doc>
      </member>
      <member name="draft"
              value="2"
              c:identifier="MBIM_SMS_STATUS_DRAFT"
              glib:nick="draft">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="861">Draft.</doc>
      </member>
      <member name="sent"
              value="3"
              c:identifier="MBIM_SMS_STATUS_SENT"
              glib:nick="sent">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="862">Sent.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_sms_status_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1725">Gets the nickname string for the #MbimSmsStatus specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1735"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1731">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1727">a MbimSmsStatus.</doc>
            <type name="SmsStatus" c:type="MbimSmsStatus"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="SmsStatusFlag"
                 version="1.4"
                 glib:type-name="MbimSmsStatusFlag"
                 glib:get-type="mbim_sms_status_flag_get_type"
                 c:type="MbimSmsStatusFlag">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="878">SMS status flags.</doc>
      <member name="none"
              value="0"
              c:identifier="MBIM_SMS_STATUS_FLAG_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="880">None.</doc>
      </member>
      <member name="message_store_full"
              value="1"
              c:identifier="MBIM_SMS_STATUS_FLAG_MESSAGE_STORE_FULL"
              glib:nick="message-store-full">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="881">Message store is full.</doc>
      </member>
      <member name="new_message"
              value="2"
              c:identifier="MBIM_SMS_STATUS_FLAG_NEW_MESSAGE"
              glib:nick="new-message">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="882">New non-Class 0 message arrived.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_sms_status_flag_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1759">Gets the nickname string for the #MbimSmsStatusFlag specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1769"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1765">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1761">a MbimSmsStatusFlag.</doc>
            <type name="SmsStatusFlag" c:type="MbimSmsStatusFlag"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="SmsStorageState"
                 version="1.4"
                 glib:type-name="MbimSmsStorageState"
                 glib:get-type="mbim_sms_storage_state_get_type"
                 c:type="MbimSmsStorageState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="747">State of the SMS storage.</doc>
      <member name="not_initialized"
              value="0"
              c:identifier="MBIM_SMS_STORAGE_STATE_NOT_INITIALIZED"
              glib:nick="not-initialized">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="749">Storage not initialized.</doc>
      </member>
      <member name="initialized"
              value="1"
              c:identifier="MBIM_SMS_STORAGE_STATE_INITIALIZED"
              glib:nick="initialized">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="750">Storage initialized.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_sms_storage_state_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1555">Gets the nickname string for the #MbimSmsStorageState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1565"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1561">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1557">a MbimSmsStorageState.</doc>
            <type name="SmsStorageState" c:type="MbimSmsStorageState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="StatusError"
                 version="1.0"
                 glib:type-name="MbimStatusError"
                 glib:get-type="mbim_status_error_get_type"
                 c:type="MbimStatusError"
                 glib:error-domain="mbim_status_error_quark">
      <doc xml:space="preserve"
           filename="mbim-errors.h"
           line="99">Status of the MBIM request.</doc>
      <member name="None"
              value="0"
              c:identifier="MBIM_STATUS_ERROR_NONE"
              glib:nick="None">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="101">Success, no error.</doc>
      </member>
      <member name="Busy"
              value="1"
              c:identifier="MBIM_STATUS_ERROR_BUSY"
              glib:nick="Busy">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="102">Busy.</doc>
      </member>
      <member name="Failure"
              value="2"
              c:identifier="MBIM_STATUS_ERROR_FAILURE"
              glib:nick="Failure">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="103">Failure.</doc>
      </member>
      <member name="SimNotInserted"
              value="3"
              c:identifier="MBIM_STATUS_ERROR_SIM_NOT_INSERTED"
              glib:nick="SimNotInserted">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="104">SIM not inserted.</doc>
      </member>
      <member name="BadSim"
              value="4"
              c:identifier="MBIM_STATUS_ERROR_BAD_SIM"
              glib:nick="BadSim">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="105">Bad SIM.</doc>
      </member>
      <member name="PinRequired"
              value="5"
              c:identifier="MBIM_STATUS_ERROR_PIN_REQUIRED"
              glib:nick="PinRequired">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="106">PIN required.</doc>
      </member>
      <member name="PinDisabled"
              value="6"
              c:identifier="MBIM_STATUS_ERROR_PIN_DISABLED"
              glib:nick="PinDisabled">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="107">PIN disabled.</doc>
      </member>
      <member name="NotRegistered"
              value="7"
              c:identifier="MBIM_STATUS_ERROR_NOT_REGISTERED"
              glib:nick="NotRegistered">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="108">Not registered.</doc>
      </member>
      <member name="ProvidersNotFound"
              value="8"
              c:identifier="MBIM_STATUS_ERROR_PROVIDERS_NOT_FOUND"
              glib:nick="ProvidersNotFound">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="109">Providers not found.</doc>
      </member>
      <member name="NoDeviceSupport"
              value="9"
              c:identifier="MBIM_STATUS_ERROR_NO_DEVICE_SUPPORT"
              glib:nick="NoDeviceSupport">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="110">No device support.</doc>
      </member>
      <member name="ProviderNotVisible"
              value="10"
              c:identifier="MBIM_STATUS_ERROR_PROVIDER_NOT_VISIBLE"
              glib:nick="ProviderNotVisible">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="111">Provider not visible.</doc>
      </member>
      <member name="DataClassNotAvailable"
              value="11"
              c:identifier="MBIM_STATUS_ERROR_DATA_CLASS_NOT_AVAILABLE"
              glib:nick="DataClassNotAvailable">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="112">Data class not available.</doc>
      </member>
      <member name="PacketServiceDetached"
              value="12"
              c:identifier="MBIM_STATUS_ERROR_PACKET_SERVICE_DETACHED"
              glib:nick="PacketServiceDetached">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="113">Packet service detached.</doc>
      </member>
      <member name="MaxActivatedContexts"
              value="13"
              c:identifier="MBIM_STATUS_ERROR_MAX_ACTIVATED_CONTEXTS"
              glib:nick="MaxActivatedContexts">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="114">Max activated contexts.</doc>
      </member>
      <member name="NotInitialized"
              value="14"
              c:identifier="MBIM_STATUS_ERROR_NOT_INITIALIZED"
              glib:nick="NotInitialized">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="115">Not initialized.</doc>
      </member>
      <member name="VoiceCallInProgress"
              value="15"
              c:identifier="MBIM_STATUS_ERROR_VOICE_CALL_IN_PROGRESS"
              glib:nick="VoiceCallInProgress">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="116">Voice call in progress.</doc>
      </member>
      <member name="ContextNotActivated"
              value="16"
              c:identifier="MBIM_STATUS_ERROR_CONTEXT_NOT_ACTIVATED"
              glib:nick="ContextNotActivated">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="117">Context not activated.</doc>
      </member>
      <member name="ServiceNotActivated"
              value="17"
              c:identifier="MBIM_STATUS_ERROR_SERVICE_NOT_ACTIVATED"
              glib:nick="ServiceNotActivated">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="118">Service not activated.</doc>
      </member>
      <member name="InvalidAccessString"
              value="18"
              c:identifier="MBIM_STATUS_ERROR_INVALID_ACCESS_STRING"
              glib:nick="InvalidAccessString">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="119">Invalid access string.</doc>
      </member>
      <member name="InvalidUserNamePwd"
              value="19"
              c:identifier="MBIM_STATUS_ERROR_INVALID_USER_NAME_PWD"
              glib:nick="InvalidUserNamePwd">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="120">Invalid user name or password.</doc>
      </member>
      <member name="RadioPowerOff"
              value="20"
              c:identifier="MBIM_STATUS_ERROR_RADIO_POWER_OFF"
              glib:nick="RadioPowerOff">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="121">Radio power off.</doc>
      </member>
      <member name="InvalidParameters"
              value="21"
              c:identifier="MBIM_STATUS_ERROR_INVALID_PARAMETERS"
              glib:nick="InvalidParameters">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="122">Invalid parameters.</doc>
      </member>
      <member name="ReadFailure"
              value="22"
              c:identifier="MBIM_STATUS_ERROR_READ_FAILURE"
              glib:nick="ReadFailure">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="123">Read failure.</doc>
      </member>
      <member name="WriteFailure"
              value="23"
              c:identifier="MBIM_STATUS_ERROR_WRITE_FAILURE"
              glib:nick="WriteFailure">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="124">Write failure.</doc>
      </member>
      <member name="NoPhonebook"
              value="25"
              c:identifier="MBIM_STATUS_ERROR_NO_PHONEBOOK"
              glib:nick="NoPhonebook">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="125">No phonebook.</doc>
      </member>
      <member name="ParameterTooLong"
              value="26"
              c:identifier="MBIM_STATUS_ERROR_PARAMETER_TOO_LONG"
              glib:nick="ParameterTooLong">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="126">Parameter too long.</doc>
      </member>
      <member name="StkBusy"
              value="27"
              c:identifier="MBIM_STATUS_ERROR_STK_BUSY"
              glib:nick="StkBusy">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="127">SIM toolkit busy.</doc>
      </member>
      <member name="OperationNotAllowed"
              value="28"
              c:identifier="MBIM_STATUS_ERROR_OPERATION_NOT_ALLOWED"
              glib:nick="OperationNotAllowed">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="128">Operation not allowed.</doc>
      </member>
      <member name="MemoryFailure"
              value="29"
              c:identifier="MBIM_STATUS_ERROR_MEMORY_FAILURE"
              glib:nick="MemoryFailure">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="129">Memory failure.</doc>
      </member>
      <member name="InvalidMemoryIndex"
              value="30"
              c:identifier="MBIM_STATUS_ERROR_INVALID_MEMORY_INDEX"
              glib:nick="InvalidMemoryIndex">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="130">Invalid memory index.</doc>
      </member>
      <member name="MemoryFull"
              value="31"
              c:identifier="MBIM_STATUS_ERROR_MEMORY_FULL"
              glib:nick="MemoryFull">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="131">Memory full.</doc>
      </member>
      <member name="FilterNotSupported"
              value="32"
              c:identifier="MBIM_STATUS_ERROR_FILTER_NOT_SUPPORTED"
              glib:nick="FilterNotSupported">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="132">Filter not supported.</doc>
      </member>
      <member name="DssInstanceLimit"
              value="33"
              c:identifier="MBIM_STATUS_ERROR_DSS_INSTANCE_LIMIT"
              glib:nick="DssInstanceLimit">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="133">DSS instance limit.</doc>
      </member>
      <member name="InvalidDeviceServiceOperation"
              value="34"
              c:identifier="MBIM_STATUS_ERROR_INVALID_DEVICE_SERVICE_OPERATION"
              glib:nick="InvalidDeviceServiceOperation">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="134">Invalid device service operation.</doc>
      </member>
      <member name="AuthIncorrectAuth"
              value="35"
              c:identifier="MBIM_STATUS_ERROR_AUTH_INCORRECT_AUTN"
              glib:nick="AuthIncorrectAuth">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="135">Incorrect AUTN when sending authentication.</doc>
      </member>
      <member name="AuthSyncFailure"
              value="36"
              c:identifier="MBIM_STATUS_ERROR_AUTH_SYNC_FAILURE"
              glib:nick="AuthSyncFailure">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="136">Synchronization failure during the authentication.</doc>
      </member>
      <member name="AuthAmfNotSet"
              value="37"
              c:identifier="MBIM_STATUS_ERROR_AUTH_AMF_NOT_SET"
              glib:nick="AuthAmfNotSet">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="137">AMF bit not set in the authentication.</doc>
      </member>
      <member name="ContextNotSupported"
              value="38"
              c:identifier="MBIM_STATUS_ERROR_CONTEXT_NOT_SUPPORTED"
              glib:nick="ContextNotSupported">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="138">ContextType not supported by the operation. Since 1.16.</doc>
      </member>
      <member name="SmsUnknownSmscAddress"
              value="100"
              c:identifier="MBIM_STATUS_ERROR_SMS_UNKNOWN_SMSC_ADDRESS"
              glib:nick="SmsUnknownSmscAddress">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="139">Unknown SMSC address.</doc>
      </member>
      <member name="SmsNetworkTimeout"
              value="101"
              c:identifier="MBIM_STATUS_ERROR_SMS_NETWORK_TIMEOUT"
              glib:nick="SmsNetworkTimeout">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="140">Network timeout when sending SMS.</doc>
      </member>
      <member name="SmsLangNotSupported"
              value="102"
              c:identifier="MBIM_STATUS_ERROR_SMS_LANG_NOT_SUPPORTED"
              glib:nick="SmsLangNotSupported">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="141">Language not supported in SMS.</doc>
      </member>
      <member name="SmsEncodingNotSupported"
              value="103"
              c:identifier="MBIM_STATUS_ERROR_SMS_ENCODING_NOT_SUPPORTED"
              glib:nick="SmsEncodingNotSupported">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="142">Encoding not supported in SMS.</doc>
      </member>
      <member name="SmsFormatNotSupported"
              value="104"
              c:identifier="MBIM_STATUS_ERROR_SMS_FORMAT_NOT_SUPPORTED"
              glib:nick="SmsFormatNotSupported">
        <doc xml:space="preserve"
             filename="mbim-errors.h"
             line="143">Format not supported in SMS.</doc>
      </member>
      <function name="get_string" c:identifier="mbim_status_error_get_string">
        <doc xml:space="preserve"
             filename="generated/mbim-error-types.c"
             line="179">Gets the nickname string for the #MbimStatusError specified at @val.</doc>
        <source-position filename="generated/mbim-error-types.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-error-types.c"
               line="185">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-error-types.c"
                 line="181">a MbimStatusError.</doc>
            <type name="StatusError" c:type="MbimStatusError"/>
          </parameter>
        </parameters>
      </function>
      <function name="quark" c:identifier="mbim_status_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <enumeration name="StkPacProfile"
                 version="1.4"
                 glib:type-name="MbimStkPacProfile"
                 glib:get-type="mbim_stk_pac_profile_get_type"
                 c:type="MbimStkPacProfile">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1000">Proactive command profile.</doc>
      <member name="not_handled_by_function_handled_by_host"
              value="0"
              c:identifier="MBIM_STK_PAC_PROFILE_NOT_HANDLED_BY_FUNCTION_HANDLED_BY_HOST"
              glib:nick="not-handled-by-function-handled-by-host">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1002">Command not handled by function but handled by host.</doc>
      </member>
      <member name="not_handled_by_function_may_be_handled_by_host"
              value="1"
              c:identifier="MBIM_STK_PAC_PROFILE_NOT_HANDLED_BY_FUNCTION_MAY_BE_HANDLED_BY_HOST"
              glib:nick="not-handled-by-function-may-be-handled-by-host">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1003">Command not handled by function but may be handled by host.</doc>
      </member>
      <member name="handled_by_function_only_transparent_to_host"
              value="2"
              c:identifier="MBIM_STK_PAC_PROFILE_HANDLED_BY_FUNCTION_ONLY_TRANSPARENT_TO_HOST"
              glib:nick="handled-by-function-only-transparent-to-host">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1004">Command handled by function without informing the host.</doc>
      </member>
      <member name="handled_by_function_notification_to_host_possible"
              value="3"
              c:identifier="MBIM_STK_PAC_PROFILE_HANDLED_BY_FUNCTION_NOTIFICATION_TO_HOST_POSSIBLE"
              glib:nick="handled-by-function-notification-to-host-possible">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1005">Command handled by function without informing the host, but notifications may be sent to host.</doc>
      </member>
      <member name="handled_by_function_notifications_to_host_enabled"
              value="4"
              c:identifier="MBIM_STK_PAC_PROFILE_HANDLED_BY_FUNCTION_NOTIFICATIONS_TO_HOST_ENABLED"
              glib:nick="handled-by-function-notifications-to-host-enabled">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1006">Command handled by function, and the function wil also send notification to the host.</doc>
      </member>
      <member name="handled_by_function_can_be_overriden_by_host"
              value="5"
              c:identifier="MBIM_STK_PAC_PROFILE_HANDLED_BY_FUNCTION_CAN_BE_OVERRIDEN_BY_HOST"
              glib:nick="handled-by-function-can-be-overriden-by-host">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1007">Command handled by function, but the host may request full control of the command.</doc>
      </member>
      <member name="handled_by_host_function_not_able_to_handle"
              value="6"
              c:identifier="MBIM_STK_PAC_PROFILE_HANDLED_BY_HOST_FUNCTION_NOT_ABLE_TO_HANDLE"
              glib:nick="handled-by-host-function-not-able-to-handle">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1008">Command will be forwarded to the host. If the host decides not to receive the command, the function will not handle it.</doc>
      </member>
      <member name="handled_by_host_function_able_to_handle"
              value="7"
              c:identifier="MBIM_STK_PAC_PROFILE_HANDLED_BY_HOST_FUNCTION_ABLE_TO_HANDLE"
              glib:nick="handled-by-host-function-able-to-handle">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1009">Command will be forwarded to the host. If the host decides not to receive the command, the function will handle it.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_stk_pac_profile_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1997">Gets the nickname string for the #MbimStkPacProfile specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2007"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2003">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1999">a MbimStkPacProfile.</doc>
            <type name="StkPacProfile" c:type="MbimStkPacProfile"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="StkPacType"
                 version="1.4"
                 glib:type-name="MbimStkPacType"
                 glib:get-type="mbim_stk_pac_type_get_type"
                 c:type="MbimStkPacType">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="1026">Type of proactive command.</doc>
      <member name="proactive_command"
              value="0"
              c:identifier="MBIM_STK_PAC_TYPE_PROACTIVE_COMMAND"
              glib:nick="proactive-command">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1028">Host is requested to handle the Proactive command.</doc>
      </member>
      <member name="notification"
              value="1"
              c:identifier="MBIM_STK_PAC_TYPE_NOTIFICATION"
              glib:nick="notification">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="1029">Proactive command is handled by the function, but the host is notified.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_stk_pac_type_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2031">Gets the nickname string for the #MbimStkPacType specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="2041"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2037">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="2033">a MbimStkPacType.</doc>
            <type name="StkPacType" c:type="MbimStkPacType"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="SubscriberReadyState"
                 version="1.0"
                 glib:type-name="MbimSubscriberReadyState"
                 glib:get-type="mbim_subscriber_ready_state_get_type"
                 c:type="MbimSubscriberReadyState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="189">Ready state of the subscriber.</doc>
      <member name="not_initialized"
              value="0"
              c:identifier="MBIM_SUBSCRIBER_READY_STATE_NOT_INITIALIZED"
              glib:nick="not-initialized">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="191">Not initialized.</doc>
      </member>
      <member name="initialized"
              value="1"
              c:identifier="MBIM_SUBSCRIBER_READY_STATE_INITIALIZED"
              glib:nick="initialized">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="192">Initialized.</doc>
      </member>
      <member name="sim_not_inserted"
              value="2"
              c:identifier="MBIM_SUBSCRIBER_READY_STATE_SIM_NOT_INSERTED"
              glib:nick="sim-not-inserted">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="193">SIM not inserted.</doc>
      </member>
      <member name="bad_sim"
              value="3"
              c:identifier="MBIM_SUBSCRIBER_READY_STATE_BAD_SIM"
              glib:nick="bad-sim">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="194">Bad SIM.</doc>
      </member>
      <member name="failure"
              value="4"
              c:identifier="MBIM_SUBSCRIBER_READY_STATE_FAILURE"
              glib:nick="failure">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="195">Failure.</doc>
      </member>
      <member name="not_activated"
              value="5"
              c:identifier="MBIM_SUBSCRIBER_READY_STATE_NOT_ACTIVATED"
              glib:nick="not-activated">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="196">Not activated.</doc>
      </member>
      <member name="device_locked"
              value="6"
              c:identifier="MBIM_SUBSCRIBER_READY_STATE_DEVICE_LOCKED"
              glib:nick="device-locked">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="197">Device locked.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_subscriber_ready_state_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="739">Gets the nickname string for the #MbimSubscriberReadyState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="749"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="745">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="741">a MbimSubscriberReadyState.</doc>
            <type name="SubscriberReadyState"
                  c:type="MbimSubscriberReadyState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="UssdAction"
                 version="1.4"
                 glib:type-name="MbimUssdAction"
                 glib:get-type="mbim_ussd_action_get_type"
                 c:type="MbimUssdAction">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="897">USSD action.</doc>
      <member name="initiate"
              value="0"
              c:identifier="MBIM_USSD_ACTION_INITIATE"
              glib:nick="initiate">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="899">Initiate USSD session.</doc>
      </member>
      <member name="continue"
              value="1"
              c:identifier="MBIM_USSD_ACTION_CONTINUE"
              glib:nick="continue">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="900">Continue USSD session.</doc>
      </member>
      <member name="cancel"
              value="2"
              c:identifier="MBIM_USSD_ACTION_CANCEL"
              glib:nick="cancel">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="901">Cancel USSD session.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_ussd_action_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1793">Gets the nickname string for the #MbimUssdAction specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1803"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1799">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1795">a MbimUssdAction.</doc>
            <type name="UssdAction" c:type="MbimUssdAction"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="UssdResponse"
                 version="1.4"
                 glib:type-name="MbimUssdResponse"
                 glib:get-type="mbim_ussd_response_get_type"
                 c:type="MbimUssdResponse">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="913">USSD response.</doc>
      <member name="no_action_required"
              value="0"
              c:identifier="MBIM_USSD_RESPONSE_NO_ACTION_REQUIRED"
              glib:nick="no-action-required">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="915">No action required.</doc>
      </member>
      <member name="action_required"
              value="1"
              c:identifier="MBIM_USSD_RESPONSE_ACTION_REQUIRED"
              glib:nick="action-required">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="916">An action is required.</doc>
      </member>
      <member name="terminated_by_network"
              value="2"
              c:identifier="MBIM_USSD_RESPONSE_TERMINATED_BY_NETWORK"
              glib:nick="terminated-by-network">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="917">Terminated by network</doc>
      </member>
      <member name="other_local_client"
              value="3"
              c:identifier="MBIM_USSD_RESPONSE_OTHER_LOCAL_CLIENT"
              glib:nick="other-local-client">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="918">Other local client.</doc>
      </member>
      <member name="operation_not_supported"
              value="4"
              c:identifier="MBIM_USSD_RESPONSE_OPERATION_NOT_SUPPORTED"
              glib:nick="operation-not-supported">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="919">Operation not supported.</doc>
      </member>
      <member name="network_timeout"
              value="5"
              c:identifier="MBIM_USSD_RESPONSE_NETWORK_TIMEOUT"
              glib:nick="network-timeout">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="920">Network timeout.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_ussd_response_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1827">Gets the nickname string for the #MbimUssdResponse specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1837"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1833">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1829">a MbimUssdResponse.</doc>
            <type name="UssdResponse" c:type="MbimUssdResponse"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="UssdSessionState"
                 version="1.4"
                 glib:type-name="MbimUssdSessionState"
                 glib:get-type="mbim_ussd_session_state_get_type"
                 c:type="MbimUssdSessionState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="935">Session state.</doc>
      <member name="new_session"
              value="0"
              c:identifier="MBIM_USSD_SESSION_STATE_NEW_SESSION"
              glib:nick="new-session">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="937">New session.</doc>
      </member>
      <member name="existing_session"
              value="1"
              c:identifier="MBIM_USSD_SESSION_STATE_EXISTING_SESSION"
              glib:nick="existing-session">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="938">Existing session.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_ussd_session_state_get_string"
                version="1.4">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1861">Gets the nickname string for the #MbimUssdSessionState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1871"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1867">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1863">a MbimUssdSessionState.</doc>
            <type name="UssdSessionState" c:type="MbimUssdSessionState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="Uuid" c:type="MbimUuid" version="1.0">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="35">This section defines the data type for unique identifiers.</doc>
      <source-position filename="mbim-uuid.h" line="60"/>
      <field name="a" writable="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="b" writable="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="c" writable="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="d" writable="1">
        <array zero-terminated="0" fixed-size="2">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <field name="e" writable="1">
        <array zero-terminated="0" fixed-size="6">
          <type name="guint8" c:type="guint8"/>
        </array>
      </field>
      <method name="cmp" c:identifier="mbim_uuid_cmp" version="1.0">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="63">Compare two %MbimUuid values.</doc>
        <source-position filename="mbim-uuid.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="70">%TRUE if @a and @b are equal, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="65">a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="66">a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_printable"
              c:identifier="mbim_uuid_get_printable"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="77">Get a string with the UUID.</doc>
        <source-position filename="mbim-uuid.h" line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="83">a newly allocated string, which should be freed with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="79">a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_context_type"
              c:identifier="mbim_uuid_to_context_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="441">Get the context type corresponding to @uuid.</doc>
        <source-position filename="mbim-uuid.h" line="451"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="447">a #MbimContextType.</doc>
          <type name="ContextType" c:type="MbimContextType"/>
        </return-value>
        <parameters>
          <instance-parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="443">a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_service"
              c:identifier="mbim_uuid_to_service"
              version="1.0">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="385">Get the service corresponding to @uuid.</doc>
        <source-position filename="mbim-uuid.h" line="395"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="391">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </return-value>
        <parameters>
          <instance-parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="387">a #MbimUuid.</doc>
            <type name="Uuid" c:type="const MbimUuid*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="from_context_type"
                c:identifier="mbim_uuid_from_context_type"
                version="1.0">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="429">Get the UUID corresponding to @context_type.</doc>
        <source-position filename="mbim-uuid.h" line="439"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="435">a #MbimUuid.</doc>
          <type name="Uuid" c:type="const MbimUuid*"/>
        </return-value>
        <parameters>
          <parameter name="context_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="431">a #MbimContextType.</doc>
            <type name="ContextType" c:type="MbimContextType"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_printable"
                c:identifier="mbim_uuid_from_printable"
                version="1.8">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="89">Fills in @uuid from the printable representation give in @str.

Only ccepts @str written with dashes separating items, e.g.:
 a289cc33-bcbb-8b4f-b6b0-133ec2aae6df</doc>
        <source-position filename="mbim-uuid.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="99">%TRUE if @uuid was correctly set, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="91">a MBIM UUID.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="uuid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="92">pointer to the target #MbimUuid.</doc>
            <type name="Uuid" c:type="MbimUuid*"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_service"
                c:identifier="mbim_uuid_from_service"
                version="1.0">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="370">Get the UUID corresponding to @service.

The @service needs to be either a generic one (including #MBIM_SERVICE_INVALID)
or a custom registered one.</doc>
        <source-position filename="mbim-uuid.h" line="383"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="379">a #MbimUuid.</doc>
          <type name="Uuid" c:type="const MbimUuid*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="mbim-uuid.h"
                 line="372">a #MbimService.</doc>
            <type name="Service" c:type="MbimService"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="VisibleProvidersAction"
                 version="1.2"
                 glib:type-name="MbimVisibleProvidersAction"
                 glib:get-type="mbim_visible_providers_action_get_type"
                 c:type="MbimVisibleProvidersAction">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="390">Type of action to perform when listing visible providers.</doc>
      <member name="full_scan"
              value="0"
              c:identifier="MBIM_VISIBLE_PROVIDERS_ACTION_FULL_SCAN"
              glib:nick="full-scan">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="392">Full scan.</doc>
      </member>
      <member name="restricted_scan"
              value="1"
              c:identifier="MBIM_VISIBLE_PROVIDERS_ACTION_RESTRICTED_SCAN"
              glib:nick="restricted-scan">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="393">Locate preferred multicarrier providers.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_visible_providers_action_get_string"
                version="1.2">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1045">Gets the nickname string for the #MbimVisibleProvidersAction specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1055"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1051">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1047">a MbimVisibleProvidersAction.</doc>
            <type name="VisibleProvidersAction"
                  c:type="MbimVisibleProvidersAction"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="VoiceCallState"
                 version="1.0"
                 glib:type-name="MbimVoiceCallState"
                 glib:get-type="mbim_voice_call_state_get_type"
                 c:type="MbimVoiceCallState">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="705">Voice Call State.</doc>
      <member name="none"
              value="0"
              c:identifier="MBIM_VOICE_CALL_STATE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="707">None.</doc>
      </member>
      <member name="in_progress"
              value="1"
              c:identifier="MBIM_VOICE_CALL_STATE_IN_PROGRESS"
              glib:nick="in-progress">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="708">Progress.</doc>
      </member>
      <member name="hang_up"
              value="2"
              c:identifier="MBIM_VOICE_CALL_STATE_HANG_UP"
              glib:nick="hang-up">
        <doc xml:space="preserve" filename="mbim-enums.h" line="709">Up.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_voice_call_state_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1487">Gets the nickname string for the #MbimVoiceCallState specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="1497"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1493">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="1489">a MbimVoiceCallState.</doc>
            <type name="VoiceCallState" c:type="MbimVoiceCallState"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="VoiceClass"
                 version="1.0"
                 glib:type-name="MbimVoiceClass"
                 glib:get-type="mbim_voice_class_get_type"
                 c:type="MbimVoiceClass">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="76">Voice class.</doc>
      <member name="unknown"
              value="0"
              c:identifier="MBIM_VOICE_CLASS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="78">Unknown voice class.</doc>
      </member>
      <member name="no_voice"
              value="1"
              c:identifier="MBIM_VOICE_CLASS_NO_VOICE"
              glib:nick="no-voice">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="79">Device doesn't support voice.</doc>
      </member>
      <member name="separated_voice_data"
              value="2"
              c:identifier="MBIM_VOICE_CLASS_SEPARATED_VOICE_DATA"
              glib:nick="separated-voice-data">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="80">Device supports separate voice and data connections.</doc>
      </member>
      <member name="simultaneous_voice_data"
              value="3"
              c:identifier="MBIM_VOICE_CLASS_SIMULTANEOUS_VOICE_DATA"
              glib:nick="simultaneous-voice-data">
        <doc xml:space="preserve"
             filename="mbim-enums.h"
             line="81">Device supports simultaneous voice and data connections.</doc>
      </member>
      <function name="get_string"
                c:identifier="mbim_voice_class_get_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="569">Gets the nickname string for the #MbimVoiceClass specified at @val.</doc>
        <source-position filename="generated/mbim-enum-types.h" line="579"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="575">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="generated/mbim-enum-types.h"
                 line="571">a MbimVoiceClass.</doc>
            <type name="VoiceClass" c:type="MbimVoiceClass"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <function name="activation_command_get_string"
              c:identifier="mbim_activation_command_get_string"
              moved-to="ActivationCommand.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1317">Gets the nickname string for the #MbimActivationCommand specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1327"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1323">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1319">a MbimActivationCommand.</doc>
          <type name="ActivationCommand" c:type="MbimActivationCommand"/>
        </parameter>
      </parameters>
    </function>
    <function name="activation_state_get_string"
              c:identifier="mbim_activation_state_get_string"
              moved-to="ActivationState.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1453">Gets the nickname string for the #MbimActivationState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1463"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1459">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1455">a MbimActivationState.</doc>
          <type name="ActivationState" c:type="MbimActivationState"/>
        </parameter>
      </parameters>
    </function>
    <function name="atds_provider_array_free"
              c:identifier="mbim_atds_provider_array_free"
              moved-to="AtdsProvider.array_free"
              version="1.16">
      <doc xml:space="preserve"
           filename="generated/mbim-atds.h"
           line="68">Frees the memory allocated for the array of #MbimAtdsProviders.</doc>
      <source-position filename="generated/mbim-atds.h" line="76"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-atds.h"
               line="70">a #NULL terminated array of #MbimAtdsProvider structs.</doc>
          <type name="AtdsProviderArray" c:type="MbimAtdsProviderArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="atds_provider_plmn_mode_get_string"
              c:identifier="mbim_atds_provider_plmn_mode_get_string"
              moved-to="AtdsProviderPlmnMode.get_string"
              version="1.16">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2201">Gets the nickname string for the #MbimAtdsProviderPlmnMode specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2211"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2207">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2203">a MbimAtdsProviderPlmnMode.</doc>
          <type name="AtdsProviderPlmnMode" c:type="MbimAtdsProviderPlmnMode"/>
        </parameter>
      </parameters>
    </function>
    <function name="atds_rat_mode_get_string"
              c:identifier="mbim_atds_rat_mode_get_string"
              moved-to="AtdsRatMode.get_string"
              version="1.16">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2167">Gets the nickname string for the #MbimAtdsRatMode specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2177"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2173">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2169">a MbimAtdsRatMode.</doc>
          <type name="AtdsRatMode" c:type="MbimAtdsRatMode"/>
        </parameter>
      </parameters>
    </function>
    <function name="auth_protocol_get_string"
              c:identifier="mbim_auth_protocol_get_string"
              moved-to="AuthProtocol.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1385">Gets the nickname string for the #MbimAuthProtocol specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1395"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1391">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1387">a MbimAuthProtocol.</doc>
          <type name="AuthProtocol" c:type="MbimAuthProtocol"/>
        </parameter>
      </parameters>
    </function>
    <function name="cellular_class_build_string_from_mask"
              c:identifier="mbim_cellular_class_build_string_from_mask"
              moved-to="CellularClass.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="549">Builds a string containing a comma-separated list of nicknames for
each #MbimCellularClass in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="560"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="556">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="551">bitmask of MbimCellularClass values.</doc>
          <type name="CellularClass" c:type="MbimCellularClass"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_atds_get_string"
              c:identifier="mbim_cid_atds_get_string"
              moved-to="CidAtds.get_string"
              version="1.16">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="397">Gets the nickname string for the #MbimCidAtds specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="407"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="403">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="399">a MbimCidAtds.</doc>
          <type name="CidAtds" c:type="MbimCidAtds"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_auth_get_string"
              c:identifier="mbim_cid_auth_get_string"
              moved-to="CidAuth.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="193">Gets the nickname string for the #MbimCidAuth specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="203"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="199">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="195">a MbimCidAuth.</doc>
          <type name="CidAuth" c:type="MbimCidAuth"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_basic_connect_get_string"
              c:identifier="mbim_cid_basic_connect_get_string"
              moved-to="CidBasicConnect.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="23">Gets the nickname string for the #MbimCidBasicConnect specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="33"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="29">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="25">a MbimCidBasicConnect.</doc>
          <type name="CidBasicConnect" c:type="MbimCidBasicConnect"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_can_notify"
              c:identifier="mbim_cid_can_notify"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="362">Checks whether the given command allows notifying.</doc>
      <source-position filename="mbim-cid.h" line="373"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="369">%TRUE if the command allows notifying, %FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="364">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </parameter>
        <parameter name="cid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="365">a command ID.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_can_query"
              c:identifier="mbim_cid_can_query"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="348">Checks whether the given command allows querying.</doc>
      <source-position filename="mbim-cid.h" line="359"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="355">%TRUE if the command allows querying, %FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="350">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </parameter>
        <parameter name="cid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="351">a command ID.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_can_set" c:identifier="mbim_cid_can_set" version="1.0">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="334">Checks whether the given command allows setting.</doc>
      <source-position filename="mbim-cid.h" line="345"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="341">%TRUE if the command allows setting, %FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="336">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </parameter>
        <parameter name="cid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="337">a command ID.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_dss_get_string"
              c:identifier="mbim_cid_dss_get_string"
              moved-to="CidDss.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="227">Gets the nickname string for the #MbimCidDss specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="237"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="233">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="229">a MbimCidDss.</doc>
          <type name="CidDss" c:type="MbimCidDss"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_get_printable"
              c:identifier="mbim_cid_get_printable"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="377">Gets a printable string for the command specified by the @service and the
@cid.</doc>
      <source-position filename="mbim-cid.h" line="389"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-cid.h"
             line="385">a constant string.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="379">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </parameter>
        <parameter name="cid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-cid.h"
               line="380">a command ID.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_intel_firmware_update_get_string"
              c:identifier="mbim_cid_intel_firmware_update_get_string"
              moved-to="CidIntelFirmwareUpdate.get_string"
              version="1.16">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="431">Gets the nickname string for the #MbimCidIntelFirmwareUpdate specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="441"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="437">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="433">a MbimCidIntelFirmwareUpdate.</doc>
          <type name="CidIntelFirmwareUpdate"
                c:type="MbimCidIntelFirmwareUpdate"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_ms_basic_connect_extensions_get_string"
              c:identifier="mbim_cid_ms_basic_connect_extensions_get_string"
              moved-to="CidMsBasicConnectExtensions.get_string"
              version="1.18">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="465">Gets the nickname string for the #MbimCidMsBasicConnectExtensions specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="475"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="471">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="467">a MbimCidMsBasicConnectExtensions.</doc>
          <type name="CidMsBasicConnectExtensions"
                c:type="MbimCidMsBasicConnectExtensions"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_ms_firmware_id_get_string"
              c:identifier="mbim_cid_ms_firmware_id_get_string"
              moved-to="CidMsFirmwareId.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="261">Gets the nickname string for the #MbimCidMsFirmwareId specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="271"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="267">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="263">a MbimCidMsFirmwareId.</doc>
          <type name="CidMsFirmwareId" c:type="MbimCidMsFirmwareId"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_ms_host_shutdown_get_string"
              c:identifier="mbim_cid_ms_host_shutdown_get_string"
              moved-to="CidMsHostShutdown.get_string"
              version="1.8">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="295">Gets the nickname string for the #MbimCidMsHostShutdown specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="305"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="301">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="297">a MbimCidMsHostShutdown.</doc>
          <type name="CidMsHostShutdown" c:type="MbimCidMsHostShutdown"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_phonebook_get_string"
              c:identifier="mbim_cid_phonebook_get_string"
              moved-to="CidPhonebook.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="125">Gets the nickname string for the #MbimCidPhonebook specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="135"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="131">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="127">a MbimCidPhonebook.</doc>
          <type name="CidPhonebook" c:type="MbimCidPhonebook"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_proxy_control_get_string"
              c:identifier="mbim_cid_proxy_control_get_string"
              moved-to="CidProxyControl.get_string"
              version="1.10">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="329">Gets the nickname string for the #MbimCidProxyControl specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="339"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="335">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="331">a MbimCidProxyControl.</doc>
          <type name="CidProxyControl" c:type="MbimCidProxyControl"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_qmi_get_string"
              c:identifier="mbim_cid_qmi_get_string"
              moved-to="CidQmi.get_string"
              version="1.14">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="363">Gets the nickname string for the #MbimCidQmi specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="373"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="369">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="365">a MbimCidQmi.</doc>
          <type name="CidQmi" c:type="MbimCidQmi"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_sms_get_string"
              c:identifier="mbim_cid_sms_get_string"
              moved-to="CidSms.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="57">Gets the nickname string for the #MbimCidSms specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="67"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="63">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="59">a MbimCidSms.</doc>
          <type name="CidSms" c:type="MbimCidSms"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_stk_get_string"
              c:identifier="mbim_cid_stk_get_string"
              moved-to="CidStk.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="159">Gets the nickname string for the #MbimCidStk specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="169"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="165">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="161">a MbimCidStk.</doc>
          <type name="CidStk" c:type="MbimCidStk"/>
        </parameter>
      </parameters>
    </function>
    <function name="cid_ussd_get_string"
              c:identifier="mbim_cid_ussd_get_string"
              moved-to="CidUssd.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="91">Gets the nickname string for the #MbimCidUssd specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="101"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="97">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="93">a MbimCidUssd.</doc>
          <type name="CidUssd" c:type="MbimCidUssd"/>
        </parameter>
      </parameters>
    </function>
    <function name="compression_get_string"
              c:identifier="mbim_compression_get_string"
              moved-to="Compression.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1351">Gets the nickname string for the #MbimCompression specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1361"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1357">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1353">a MbimCompression.</doc>
          <type name="Compression" c:type="MbimCompression"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_ip_type_get_string"
              c:identifier="mbim_context_ip_type_get_string"
              moved-to="ContextIpType.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1419">Gets the nickname string for the #MbimContextIpType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1429"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1425">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1421">a MbimContextIpType.</doc>
          <type name="ContextIpType" c:type="MbimContextIpType"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_source_get_string"
              c:identifier="mbim_context_source_get_string"
              moved-to="ContextSource.get_string"
              version="1.18">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2337">Gets the nickname string for the #MbimContextSource specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2347"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2343">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2339">a MbimContextSource.</doc>
          <type name="ContextSource" c:type="MbimContextSource"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_type_get_string"
              c:identifier="mbim_context_type_get_string"
              moved-to="ContextType.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2511">Gets the nickname string for the #MbimContextType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2521"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2517">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2513">a MbimContextType.</doc>
          <type name="ContextType" c:type="MbimContextType"/>
        </parameter>
      </parameters>
    </function>
    <function name="core_error_get_string"
              c:identifier="mbim_core_error_get_string"
              moved-to="CoreError.get_string">
      <doc xml:space="preserve"
           filename="generated/mbim-error-types.c"
           line="39">Gets the nickname string for the #MbimCoreError specified at @val.</doc>
      <source-position filename="generated/mbim-error-types.h" line="17"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-error-types.c"
             line="45">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-error-types.c"
               line="41">a MbimCoreError.</doc>
          <type name="CoreError" c:type="MbimCoreError"/>
        </parameter>
      </parameters>
    </function>
    <function name="core_error_quark"
              c:identifier="mbim_core_error_quark"
              moved-to="CoreError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="ctrl_caps_build_string_from_mask"
              c:identifier="mbim_ctrl_caps_build_string_from_mask"
              moved-to="CtrlCaps.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="719">Builds a string containing a comma-separated list of nicknames for
each #MbimCtrlCaps in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="730"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="726">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="721">bitmask of MbimCtrlCaps values.</doc>
          <type name="CtrlCaps" c:type="MbimCtrlCaps"/>
        </parameter>
      </parameters>
    </function>
    <function name="data_class_build_string_from_mask"
              c:identifier="mbim_data_class_build_string_from_mask"
              moved-to="DataClass.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="651">Builds a string containing a comma-separated list of nicknames for
each #MbimDataClass in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="662"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="658">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="653">bitmask of MbimDataClass values.</doc>
          <type name="DataClass" c:type="MbimDataClass"/>
        </parameter>
      </parameters>
    </function>
    <function name="device_service_element_array_free"
              c:identifier="mbim_device_service_element_array_free"
              moved-to="DeviceServiceElement.array_free"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="261">Frees the memory allocated for the array of #MbimDeviceServiceElements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="269"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="263">a #NULL terminated array of #MbimDeviceServiceElement structs.</doc>
          <type name="DeviceServiceElementArray"
                c:type="MbimDeviceServiceElementArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="device_type_get_string"
              c:identifier="mbim_device_type_get_string"
              moved-to="DeviceType.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="501">Gets the nickname string for the #MbimDeviceType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="511"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="507">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="503">a MbimDeviceType.</doc>
          <type name="DeviceType" c:type="MbimDeviceType"/>
        </parameter>
      </parameters>
    </function>
    <function name="dss_link_state_get_string"
              c:identifier="mbim_dss_link_state_get_string"
              moved-to="DssLinkState.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2133">Gets the nickname string for the #MbimDssLinkState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2143"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2139">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2135">a MbimDssLinkState.</doc>
          <type name="DssLinkState" c:type="MbimDssLinkState"/>
        </parameter>
      </parameters>
    </function>
    <function name="emergency_mode_state_get_string"
              c:identifier="mbim_emergency_mode_state_get_string"
              moved-to="EmergencyModeState.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2099">Gets the nickname string for the #MbimEmergencyModeState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2109"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2105">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2101">a MbimEmergencyModeState.</doc>
          <type name="EmergencyModeState" c:type="MbimEmergencyModeState"/>
        </parameter>
      </parameters>
    </function>
    <function name="event_entry_array_free"
              c:identifier="mbim_event_entry_array_free"
              moved-to="EventEntry.array_free"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="297">Frees the memory allocated for the array of #MbimEventEntrys.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="305"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="299">a #NULL terminated array of #MbimEventEntry structs.</doc>
          <type name="EventEntryArray" c:type="MbimEventEntryArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="ip_configuration_available_flag_build_string_from_mask"
              c:identifier="mbim_ip_configuration_available_flag_build_string_from_mask"
              moved-to="IPConfigurationAvailableFlag.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1535">Builds a string containing a comma-separated list of nicknames for
each #MbimIPConfigurationAvailableFlag in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1546"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1542">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1537">bitmask of MbimIPConfigurationAvailableFlag values.</doc>
          <type name="IPConfigurationAvailableFlag"
                c:type="MbimIPConfigurationAvailableFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="ipv4_element_array_free"
              c:identifier="mbim_ipv4_element_array_free"
              moved-to="IPv4Element.array_free"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="187">Frees the memory allocated for the array of #MbimIPv4Elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="195"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="189">a #NULL terminated array of #MbimIPv4Element structs.</doc>
          <type name="IPv4ElementArray" c:type="MbimIPv4ElementArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="ipv6_element_array_free"
              c:identifier="mbim_ipv6_element_array_free"
              moved-to="IPv6Element.array_free"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="221">Frees the memory allocated for the array of #MbimIPv6Elements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="229"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="223">a #NULL terminated array of #MbimIPv6Element structs.</doc>
          <type name="IPv6ElementArray" c:type="MbimIPv6ElementArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="lte_attach_configuration_array_free"
              c:identifier="mbim_lte_attach_configuration_array_free"
              moved-to="LteAttachConfiguration.array_free"
              version="1.18">
      <doc xml:space="preserve"
           filename="generated/mbim-ms-basic-connect-extensions.h"
           line="102">Frees the memory allocated for the array of #MbimLteAttachConfigurations.</doc>
      <source-position filename="generated/mbim-ms-basic-connect-extensions.h"
                       line="110"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-ms-basic-connect-extensions.h"
               line="104">a #NULL terminated array of #MbimLteAttachConfiguration structs.</doc>
          <type name="LteAttachConfigurationArray"
                c:type="MbimLteAttachConfigurationArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="lte_attach_context_operation_get_string"
              c:identifier="mbim_lte_attach_context_operation_get_string"
              moved-to="LteAttachContextOperation.get_string"
              version="1.18">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2269">Gets the nickname string for the #MbimLteAttachContextOperation specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2279"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2275">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2271">a MbimLteAttachContextOperation.</doc>
          <type name="LteAttachContextOperation"
                c:type="MbimLteAttachContextOperation"/>
        </parameter>
      </parameters>
    </function>
    <function name="lte_attach_context_roaming_control_get_string"
              c:identifier="mbim_lte_attach_context_roaming_control_get_string"
              moved-to="LteAttachContextRoamingControl.get_string"
              version="1.18">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2303">Gets the nickname string for the #MbimLteAttachContextRoamingControl specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2313"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2309">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2305">a MbimLteAttachContextRoamingControl.</doc>
          <type name="LteAttachContextRoamingControl"
                c:type="MbimLteAttachContextRoamingControl"/>
        </parameter>
      </parameters>
    </function>
    <function name="lte_attach_state_get_string"
              c:identifier="mbim_lte_attach_state_get_string"
              moved-to="LteAttachState.get_string"
              version="1.18">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2371">Gets the nickname string for the #MbimLteAttachState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2381"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2377">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2373">a MbimLteAttachState.</doc>
          <type name="LteAttachState" c:type="MbimLteAttachState"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="mbimcid">
      <doc xml:space="preserve"
           filename="mbim-cid.h"
           line="37">This section defines the interface of the known command IDs.</doc>
    </docsection>
    <docsection name="mbimcompat">
      <doc xml:space="preserve"
           filename="mbim-compat.h"
           line="35">This section defines types and functions that have been deprecated.</doc>
    </docsection>
    <docsection name="mbimenums">
      <doc xml:space="preserve"
           filename="mbim-enums.h"
           line="33">This section defines common enum and flag types used in the interface.</doc>
    </docsection>
    <docsection name="mbimerrors">
      <doc xml:space="preserve"
           filename="mbim-errors.h"
           line="30">This section defines common error types used in the interface.</doc>
    </docsection>
    <docsection name="mbimversion">
      <doc xml:space="preserve"
           filename="mbim-version.h"
           line="25">This section defines types that are used to identify the libmbim-glib version.</doc>
    </docsection>
    <function name="message_command_type_get_string"
              c:identifier="mbim_message_command_type_get_string"
              moved-to="MessageCommandType.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2441">Gets the nickname string for the #MbimMessageCommandType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2451"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2447">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2443">a MbimMessageCommandType.</doc>
          <type name="MessageCommandType" c:type="MbimMessageCommandType"/>
        </parameter>
      </parameters>
    </function>
    <function name="message_type_get_string"
              c:identifier="mbim_message_type_get_string"
              moved-to="MessageType.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2407">Gets the nickname string for the #MbimMessageType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2417"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2413">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2409">a MbimMessageType.</doc>
          <type name="MessageType" c:type="MbimMessageType"/>
        </parameter>
      </parameters>
    </function>
    <function name="network_idle_hint_state_get_string"
              c:identifier="mbim_network_idle_hint_state_get_string"
              moved-to="NetworkIdleHintState.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2065">Gets the nickname string for the #MbimNetworkIdleHintState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2075"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2071">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2067">a MbimNetworkIdleHintState.</doc>
          <type name="NetworkIdleHintState" c:type="MbimNetworkIdleHintState"/>
        </parameter>
      </parameters>
    </function>
    <function name="nw_error_get_string"
              c:identifier="mbim_nw_error_get_string"
              moved-to="NwError.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1079">Gets the nickname string for the #MbimNwError specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1089"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1085">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1081">a MbimNwError.</doc>
          <type name="NwError" c:type="MbimNwError"/>
        </parameter>
      </parameters>
    </function>
    <function name="packet_filter_array_free"
              c:identifier="mbim_packet_filter_array_free"
              moved-to="PacketFilter.array_free"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="333">Frees the memory allocated for the array of #MbimPacketFilters.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="341"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="335">a #NULL terminated array of #MbimPacketFilter structs.</doc>
          <type name="PacketFilterArray" c:type="MbimPacketFilterArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="packet_service_action_get_string"
              c:identifier="mbim_packet_service_action_get_string"
              moved-to="PacketServiceAction.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1249">Gets the nickname string for the #MbimPacketServiceAction specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1259"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1255">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1251">a MbimPacketServiceAction.</doc>
          <type name="PacketServiceAction" c:type="MbimPacketServiceAction"/>
        </parameter>
      </parameters>
    </function>
    <function name="packet_service_state_get_string"
              c:identifier="mbim_packet_service_state_get_string"
              moved-to="PacketServiceState.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1283">Gets the nickname string for the #MbimPacketServiceState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1293"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1289">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1285">a MbimPacketServiceState.</doc>
          <type name="PacketServiceState" c:type="MbimPacketServiceState"/>
        </parameter>
      </parameters>
    </function>
    <function name="pco_type_get_string"
              c:identifier="mbim_pco_type_get_string"
              moved-to="PcoType.get_string"
              version="1.18">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2235">Gets the nickname string for the #MbimPcoType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2245"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2241">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2237">a MbimPcoType.</doc>
          <type name="PcoType" c:type="MbimPcoType"/>
        </parameter>
      </parameters>
    </function>
    <function name="phonebook_entry_array_free"
              c:identifier="mbim_phonebook_entry_array_free"
              moved-to="PhonebookEntry.array_free"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-phonebook.h"
           line="62">Frees the memory allocated for the array of #MbimPhonebookEntrys.</doc>
      <source-position filename="generated/mbim-phonebook.h" line="70"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-phonebook.h"
               line="64">a #NULL terminated array of #MbimPhonebookEntry structs.</doc>
          <type name="PhonebookEntryArray" c:type="MbimPhonebookEntryArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="phonebook_flag_get_string"
              c:identifier="mbim_phonebook_flag_get_string"
              moved-to="PhonebookFlag.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1929">Gets the nickname string for the #MbimPhonebookFlag specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1939"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1935">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1931">a MbimPhonebookFlag.</doc>
          <type name="PhonebookFlag" c:type="MbimPhonebookFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="phonebook_state_get_string"
              c:identifier="mbim_phonebook_state_get_string"
              moved-to="PhonebookState.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1895">Gets the nickname string for the #MbimPhonebookState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1905"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1901">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1897">a MbimPhonebookState.</doc>
          <type name="PhonebookState" c:type="MbimPhonebookState"/>
        </parameter>
      </parameters>
    </function>
    <function name="phonebook_write_flag_get_string"
              c:identifier="mbim_phonebook_write_flag_get_string"
              moved-to="PhonebookWriteFlag.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1963">Gets the nickname string for the #MbimPhonebookWriteFlag specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1973"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1969">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1965">a MbimPhonebookWriteFlag.</doc>
          <type name="PhonebookWriteFlag" c:type="MbimPhonebookWriteFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="pin_format_get_string"
              c:identifier="mbim_pin_format_get_string"
              moved-to="PinFormat.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="977">Gets the nickname string for the #MbimPinFormat specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="987"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="983">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="979">a MbimPinFormat.</doc>
          <type name="PinFormat" c:type="MbimPinFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="pin_mode_get_string"
              c:identifier="mbim_pin_mode_get_string"
              moved-to="PinMode.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="943">Gets the nickname string for the #MbimPinMode specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="953"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="949">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="945">a MbimPinMode.</doc>
          <type name="PinMode" c:type="MbimPinMode"/>
        </parameter>
      </parameters>
    </function>
    <function name="pin_operation_get_string"
              c:identifier="mbim_pin_operation_get_string"
              moved-to="PinOperation.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="909">Gets the nickname string for the #MbimPinOperation specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="919"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="915">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="911">a MbimPinOperation.</doc>
          <type name="PinOperation" c:type="MbimPinOperation"/>
        </parameter>
      </parameters>
    </function>
    <function name="pin_state_get_string"
              c:identifier="mbim_pin_state_get_string"
              moved-to="PinState.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="875">Gets the nickname string for the #MbimPinState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="885"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="881">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="877">a MbimPinState.</doc>
          <type name="PinState" c:type="MbimPinState"/>
        </parameter>
      </parameters>
    </function>
    <function name="pin_type_get_string"
              c:identifier="mbim_pin_type_get_string"
              moved-to="PinType.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="841">Gets the nickname string for the #MbimPinType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="851"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="847">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="843">a MbimPinType.</doc>
          <type name="PinType" c:type="MbimPinType"/>
        </parameter>
      </parameters>
    </function>
    <function name="protocol_error_get_string"
              c:identifier="mbim_protocol_error_get_string"
              moved-to="ProtocolError.get_string">
      <doc xml:space="preserve"
           filename="generated/mbim-error-types.c"
           line="92">Gets the nickname string for the #MbimProtocolError specified at @val.</doc>
      <source-position filename="generated/mbim-error-types.h" line="22"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-error-types.c"
             line="98">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-error-types.c"
               line="94">a MbimProtocolError.</doc>
          <type name="ProtocolError" c:type="MbimProtocolError"/>
        </parameter>
      </parameters>
    </function>
    <function name="protocol_error_quark"
              c:identifier="mbim_protocol_error_quark"
              moved-to="ProtocolError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="provider_array_free"
              c:identifier="mbim_provider_array_free"
              moved-to="Provider.array_free"
              version="1.2">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="109">Frees the memory allocated for the array of #MbimProviders.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="117"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="111">a #NULL terminated array of #MbimProvider structs.</doc>
          <type name="ProviderArray" c:type="MbimProviderArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="provider_state_build_string_from_mask"
              c:identifier="mbim_provider_state_build_string_from_mask"
              moved-to="ProviderState.build_string_from_mask"
              version="1.2">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1025">Builds a string containing a comma-separated list of nicknames for
each #MbimProviderState in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1036"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1032">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1027">bitmask of MbimProviderState values.</doc>
          <type name="ProviderState" c:type="MbimProviderState"/>
        </parameter>
      </parameters>
    </function>
    <function name="provisioned_context_element_array_free"
              c:identifier="mbim_provisioned_context_element_array_free"
              moved-to="ProvisionedContextElement.array_free"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-basic-connect.h"
           line="153">Frees the memory allocated for the array of #MbimProvisionedContextElements.</doc>
      <source-position filename="generated/mbim-basic-connect.h" line="161"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-basic-connect.h"
               line="155">a #NULL terminated array of #MbimProvisionedContextElement structs.</doc>
          <type name="ProvisionedContextElementArray"
                c:type="MbimProvisionedContextElementArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="radio_switch_state_get_string"
              c:identifier="mbim_radio_switch_state_get_string"
              moved-to="RadioSwitchState.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="807">Gets the nickname string for the #MbimRadioSwitchState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="817"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="813">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="809">a MbimRadioSwitchState.</doc>
          <type name="RadioSwitchState" c:type="MbimRadioSwitchState"/>
        </parameter>
      </parameters>
    </function>
    <function name="ready_info_flag_build_string_from_mask"
              c:identifier="mbim_ready_info_flag_build_string_from_mask"
              moved-to="ReadyInfoFlag.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="787">Builds a string containing a comma-separated list of nicknames for
each #MbimReadyInfoFlag in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="798"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="794">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="789">bitmask of MbimReadyInfoFlag values.</doc>
          <type name="ReadyInfoFlag" c:type="MbimReadyInfoFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="register_action_get_string"
              c:identifier="mbim_register_action_get_string"
              moved-to="RegisterAction.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1113">Gets the nickname string for the #MbimRegisterAction specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1123"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1119">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1115">a MbimRegisterAction.</doc>
          <type name="RegisterAction" c:type="MbimRegisterAction"/>
        </parameter>
      </parameters>
    </function>
    <function name="register_custom_service"
              c:identifier="mbim_register_custom_service"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="332">Register a custom service</doc>
      <source-position filename="mbim-uuid.h" line="343"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="339">TRUE if service has been registered, FALSE otherwise.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="uuid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="334">MbimUuid structure corresponding to service</doc>
          <type name="Uuid" c:type="const MbimUuid*"/>
        </parameter>
        <parameter name="nickname" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="335">a printable name for service</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="register_mode_get_string"
              c:identifier="mbim_register_mode_get_string"
              moved-to="RegisterMode.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1181">Gets the nickname string for the #MbimRegisterMode specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1191"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1187">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1183">a MbimRegisterMode.</doc>
          <type name="RegisterMode" c:type="MbimRegisterMode"/>
        </parameter>
      </parameters>
    </function>
    <function name="register_state_get_string"
              c:identifier="mbim_register_state_get_string"
              moved-to="RegisterState.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1147">Gets the nickname string for the #MbimRegisterState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1157"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1153">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1149">a MbimRegisterState.</doc>
          <type name="RegisterState" c:type="MbimRegisterState"/>
        </parameter>
      </parameters>
    </function>
    <function name="registration_flag_build_string_from_mask"
              c:identifier="mbim_registration_flag_build_string_from_mask"
              moved-to="RegistrationFlag.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1229">Builds a string containing a comma-separated list of nicknames for
each #MbimRegistrationFlag in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1240"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1236">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1231">bitmask of MbimRegistrationFlag values.</doc>
          <type name="RegistrationFlag" c:type="MbimRegistrationFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="service_get_string"
              c:identifier="mbim_service_get_string"
              moved-to="Service.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2477">Gets the nickname string for the #MbimService specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2487"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2483">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2479">a MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </parameter>
      </parameters>
    </function>
    <function name="service_id_is_custom"
              c:identifier="mbim_service_id_is_custom"
              moved-to="Service.id_is_custom"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="358">Checks whether @id is a custom or standard service.</doc>
      <source-position filename="mbim-uuid.h" line="368"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="364">TRUE if service is custom, FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="360">ID of the service</doc>
          <type name="guint" c:type="const guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="service_lookup_name"
              c:identifier="mbim_service_lookup_name"
              moved-to="Service.lookup_name"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="317">Gets the nickname string for the @service.

As opposed to mbim_service_get_string(), this methods takes into account
custom services that may have been registered by the user.</doc>
      <source-position filename="mbim-uuid.h" line="330"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="326">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="319">a MbimService or custom service.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="sim_class_build_string_from_mask"
              c:identifier="mbim_sim_class_build_string_from_mask"
              moved-to="SimClass.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="617">Builds a string containing a comma-separated list of nicknames for
each #MbimSimClass in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="628"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="624">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="619">bitmask of MbimSimClass values.</doc>
          <type name="SimClass" c:type="MbimSimClass"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_caps_build_string_from_mask"
              c:identifier="mbim_sms_caps_build_string_from_mask"
              moved-to="SmsCaps.build_string_from_mask"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="685">Builds a string containing a comma-separated list of nicknames for
each #MbimSmsCaps in @mask.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="696"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="692">a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="687">bitmask of MbimSmsCaps values.</doc>
          <type name="SmsCaps" c:type="MbimSmsCaps"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_cdma_encoding_get_string"
              c:identifier="mbim_sms_cdma_encoding_get_string"
              moved-to="SmsCdmaEncoding.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1691">Gets the nickname string for the #MbimSmsCdmaEncoding specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1701"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1697">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1693">a MbimSmsCdmaEncoding.</doc>
          <type name="SmsCdmaEncoding" c:type="MbimSmsCdmaEncoding"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_cdma_lang_get_string"
              c:identifier="mbim_sms_cdma_lang_get_string"
              moved-to="SmsCdmaLang.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1657">Gets the nickname string for the #MbimSmsCdmaLang specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1667"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1663">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1659">a MbimSmsCdmaLang.</doc>
          <type name="SmsCdmaLang" c:type="MbimSmsCdmaLang"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_cdma_read_record_array_free"
              c:identifier="mbim_sms_cdma_read_record_array_free"
              moved-to="SmsCdmaReadRecord.array_free"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-sms.h"
           line="112">Frees the memory allocated for the array of #MbimSmsCdmaReadRecords.</doc>
      <source-position filename="generated/mbim-sms.h" line="120"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="114">a #NULL terminated array of #MbimSmsCdmaReadRecord structs.</doc>
          <type name="SmsCdmaReadRecordArray"
                c:type="MbimSmsCdmaReadRecordArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_flag_get_string"
              c:identifier="mbim_sms_flag_get_string"
              moved-to="SmsFlag.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1623">Gets the nickname string for the #MbimSmsFlag specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1633"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1629">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1625">a MbimSmsFlag.</doc>
          <type name="SmsFlag" c:type="MbimSmsFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_format_get_string"
              c:identifier="mbim_sms_format_get_string"
              moved-to="SmsFormat.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1589">Gets the nickname string for the #MbimSmsFormat specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1599"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1595">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1591">a MbimSmsFormat.</doc>
          <type name="SmsFormat" c:type="MbimSmsFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_pdu_read_record_array_free"
              c:identifier="mbim_sms_pdu_read_record_array_free"
              moved-to="SmsPduReadRecord.array_free"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-sms.h"
           line="64">Frees the memory allocated for the array of #MbimSmsPduReadRecords.</doc>
      <source-position filename="generated/mbim-sms.h" line="72"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="array" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-sms.h"
               line="66">a #NULL terminated array of #MbimSmsPduReadRecord structs.</doc>
          <type name="SmsPduReadRecordArray"
                c:type="MbimSmsPduReadRecordArray*"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_status_flag_get_string"
              c:identifier="mbim_sms_status_flag_get_string"
              moved-to="SmsStatusFlag.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1759">Gets the nickname string for the #MbimSmsStatusFlag specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1769"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1765">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1761">a MbimSmsStatusFlag.</doc>
          <type name="SmsStatusFlag" c:type="MbimSmsStatusFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_status_get_string"
              c:identifier="mbim_sms_status_get_string"
              moved-to="SmsStatus.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1725">Gets the nickname string for the #MbimSmsStatus specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1735"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1731">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1727">a MbimSmsStatus.</doc>
          <type name="SmsStatus" c:type="MbimSmsStatus"/>
        </parameter>
      </parameters>
    </function>
    <function name="sms_storage_state_get_string"
              c:identifier="mbim_sms_storage_state_get_string"
              moved-to="SmsStorageState.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1555">Gets the nickname string for the #MbimSmsStorageState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1565"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1561">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1557">a MbimSmsStorageState.</doc>
          <type name="SmsStorageState" c:type="MbimSmsStorageState"/>
        </parameter>
      </parameters>
    </function>
    <function name="status_error_get_string"
              c:identifier="mbim_status_error_get_string"
              moved-to="StatusError.get_string">
      <doc xml:space="preserve"
           filename="generated/mbim-error-types.c"
           line="179">Gets the nickname string for the #MbimStatusError specified at @val.</doc>
      <source-position filename="generated/mbim-error-types.h" line="27"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-error-types.c"
             line="185">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-error-types.c"
               line="181">a MbimStatusError.</doc>
          <type name="StatusError" c:type="MbimStatusError"/>
        </parameter>
      </parameters>
    </function>
    <function name="status_error_quark"
              c:identifier="mbim_status_error_quark"
              moved-to="StatusError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="stk_pac_profile_get_string"
              c:identifier="mbim_stk_pac_profile_get_string"
              moved-to="StkPacProfile.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1997">Gets the nickname string for the #MbimStkPacProfile specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2007"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2003">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1999">a MbimStkPacProfile.</doc>
          <type name="StkPacProfile" c:type="MbimStkPacProfile"/>
        </parameter>
      </parameters>
    </function>
    <function name="stk_pac_type_get_string"
              c:identifier="mbim_stk_pac_type_get_string"
              moved-to="StkPacType.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="2031">Gets the nickname string for the #MbimStkPacType specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="2041"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="2037">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="2033">a MbimStkPacType.</doc>
          <type name="StkPacType" c:type="MbimStkPacType"/>
        </parameter>
      </parameters>
    </function>
    <function name="subscriber_ready_state_get_string"
              c:identifier="mbim_subscriber_ready_state_get_string"
              moved-to="SubscriberReadyState.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="739">Gets the nickname string for the #MbimSubscriberReadyState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="749"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="745">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="741">a MbimSubscriberReadyState.</doc>
          <type name="SubscriberReadyState" c:type="MbimSubscriberReadyState"/>
        </parameter>
      </parameters>
    </function>
    <function name="unregister_custom_service"
              c:identifier="mbim_unregister_custom_service"
              version="1.10">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="346">Unregister a custom service.</doc>
      <source-position filename="mbim-uuid.h" line="356"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="352">TRUE if service has been unregistered, FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="348">ID of the service to unregister.MbimUuid structure corresponding to service</doc>
          <type name="guint" c:type="const guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="ussd_action_get_string"
              c:identifier="mbim_ussd_action_get_string"
              moved-to="UssdAction.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1793">Gets the nickname string for the #MbimUssdAction specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1803"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1799">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1795">a MbimUssdAction.</doc>
          <type name="UssdAction" c:type="MbimUssdAction"/>
        </parameter>
      </parameters>
    </function>
    <function name="ussd_response_get_string"
              c:identifier="mbim_ussd_response_get_string"
              moved-to="UssdResponse.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1827">Gets the nickname string for the #MbimUssdResponse specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1837"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1833">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1829">a MbimUssdResponse.</doc>
          <type name="UssdResponse" c:type="MbimUssdResponse"/>
        </parameter>
      </parameters>
    </function>
    <function name="ussd_session_state_get_string"
              c:identifier="mbim_ussd_session_state_get_string"
              moved-to="UssdSessionState.get_string"
              version="1.4">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1861">Gets the nickname string for the #MbimUssdSessionState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1871"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1867">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1863">a MbimUssdSessionState.</doc>
          <type name="UssdSessionState" c:type="MbimUssdSessionState"/>
        </parameter>
      </parameters>
    </function>
    <function name="utils_get_traces_enabled"
              c:identifier="mbim_utils_get_traces_enabled"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-utils.h"
           line="37">Checks whether MBIM message traces are currently enabled.</doc>
      <source-position filename="mbim-utils.h" line="46"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-utils.h"
             line="42">%TRUE if traces are enabled, %FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="utils_set_traces_enabled"
              c:identifier="mbim_utils_set_traces_enabled"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-utils.h"
           line="48">Sets whether MBIM message traces are enabled or disabled.</doc>
      <source-position filename="mbim-utils.h" line="56"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="enabled" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-utils.h"
               line="50">%TRUE to enable traces, %FALSE to disable them.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="uuid_from_context_type"
              c:identifier="mbim_uuid_from_context_type"
              moved-to="Uuid.from_context_type"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="429">Get the UUID corresponding to @context_type.</doc>
      <source-position filename="mbim-uuid.h" line="439"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="435">a #MbimUuid.</doc>
        <type name="Uuid" c:type="const MbimUuid*"/>
      </return-value>
      <parameters>
        <parameter name="context_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="431">a #MbimContextType.</doc>
          <type name="ContextType" c:type="MbimContextType"/>
        </parameter>
      </parameters>
    </function>
    <function name="uuid_from_printable"
              c:identifier="mbim_uuid_from_printable"
              moved-to="Uuid.from_printable"
              version="1.8">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="89">Fills in @uuid from the printable representation give in @str.

Only ccepts @str written with dashes separating items, e.g.:
 a289cc33-bcbb-8b4f-b6b0-133ec2aae6df</doc>
      <source-position filename="mbim-uuid.h" line="103"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="99">%TRUE if @uuid was correctly set, %FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="91">a MBIM UUID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="uuid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="92">pointer to the target #MbimUuid.</doc>
          <type name="Uuid" c:type="MbimUuid*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uuid_from_service"
              c:identifier="mbim_uuid_from_service"
              moved-to="Uuid.from_service"
              version="1.0">
      <doc xml:space="preserve"
           filename="mbim-uuid.h"
           line="370">Get the UUID corresponding to @service.

The @service needs to be either a generic one (including #MBIM_SERVICE_INVALID)
or a custom registered one.</doc>
      <source-position filename="mbim-uuid.h" line="383"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="mbim-uuid.h"
             line="379">a #MbimUuid.</doc>
        <type name="Uuid" c:type="const MbimUuid*"/>
      </return-value>
      <parameters>
        <parameter name="service" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="mbim-uuid.h"
               line="372">a #MbimService.</doc>
          <type name="Service" c:type="MbimService"/>
        </parameter>
      </parameters>
    </function>
    <function name="visible_providers_action_get_string"
              c:identifier="mbim_visible_providers_action_get_string"
              moved-to="VisibleProvidersAction.get_string"
              version="1.2">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1045">Gets the nickname string for the #MbimVisibleProvidersAction specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1055"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1051">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1047">a MbimVisibleProvidersAction.</doc>
          <type name="VisibleProvidersAction"
                c:type="MbimVisibleProvidersAction"/>
        </parameter>
      </parameters>
    </function>
    <function name="voice_call_state_get_string"
              c:identifier="mbim_voice_call_state_get_string"
              moved-to="VoiceCallState.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="1487">Gets the nickname string for the #MbimVoiceCallState specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="1497"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="1493">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="1489">a MbimVoiceCallState.</doc>
          <type name="VoiceCallState" c:type="MbimVoiceCallState"/>
        </parameter>
      </parameters>
    </function>
    <function name="voice_class_get_string"
              c:identifier="mbim_voice_class_get_string"
              moved-to="VoiceClass.get_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="generated/mbim-enum-types.h"
           line="569">Gets the nickname string for the #MbimVoiceClass specified at @val.</doc>
      <source-position filename="generated/mbim-enum-types.h" line="579"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="generated/mbim-enum-types.h"
             line="575">a string with the nickname, or %NULL if not found. Do not free the returned value.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="generated/mbim-enum-types.h"
               line="571">a MbimVoiceClass.</doc>
          <type name="VoiceClass" c:type="MbimVoiceClass"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>

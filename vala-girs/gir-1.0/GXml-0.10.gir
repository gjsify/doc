<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="Gee" version="0.8"/>
<include name="Gio" version="2.0"/>
<include name="GObject" version="2.0"/>
<include name="GLib" version="2.0"/>
<include name="libxml2" version="2.0"/>
<package name="gxml-0.10"/>
<c:include name="gxml/gxml.h"/>
<namespace name="GXml" version="0.10" c:prefix="GXml">
	<annotation key="ccode.gir-version" value="0.10"/>
	<annotation key="ccode.gir-namespace" value="GXml"/>
	<enumeration name="DomException" c:type="GXmlDomException" glib:type-name="GXmlDomException" glib:get-type="gxml_dom_exception_get_type">
		<member name="none" c:identifier="GXML_DOM_EXCEPTION_NONE" value="0"/>
		<member name="index_size" c:identifier="GXML_DOM_EXCEPTION_INDEX_SIZE" value="1"/>
		<member name="domstring_size" c:identifier="GXML_DOM_EXCEPTION_DOMSTRING_SIZE" value="2"/>
		<member name="hierarchy_request" c:identifier="GXML_DOM_EXCEPTION_HIERARCHY_REQUEST" value="3"/>
		<member name="wrong_document" c:identifier="GXML_DOM_EXCEPTION_WRONG_DOCUMENT" value="4"/>
		<member name="invalid_character" c:identifier="GXML_DOM_EXCEPTION_INVALID_CHARACTER" value="5"/>
		<member name="no_data_allowed" c:identifier="GXML_DOM_EXCEPTION_NO_DATA_ALLOWED" value="6"/>
		<member name="no_modification_allowed" c:identifier="GXML_DOM_EXCEPTION_NO_MODIFICATION_ALLOWED" value="7"/>
		<member name="not_found" c:identifier="GXML_DOM_EXCEPTION_NOT_FOUND" value="8"/>
		<member name="not_supported" c:identifier="GXML_DOM_EXCEPTION_NOT_SUPPORTED" value="9"/>
		<member name="inuse_attribute" c:identifier="GXML_DOM_EXCEPTION_INUSE_ATTRIBUTE" value="10"/>
		<member name="dom" c:identifier="GXML_DOM_EXCEPTION_DOM" value="11"/>
		<member name="invalid_doc" c:identifier="GXML_DOM_EXCEPTION_INVALID_DOC" value="12"/>
		<member name="invalid_root" c:identifier="GXML_DOM_EXCEPTION_INVALID_ROOT" value="13"/>
		<member name="namespace" c:identifier="GXML_DOM_EXCEPTION_NAMESPACE" value="14"/>
		<member name="x_other" c:identifier="GXML_DOM_EXCEPTION_X_OTHER" value="15"/>
	</enumeration>
	<enumeration name="NodeType" c:type="GXmlNodeType" glib:type-name="GXmlNodeType" glib:get-type="gxml_node_type_get_type">
		<member name="x_unknown" c:identifier="GXML_NODE_TYPE_X_UNKNOWN" value="0"/>
		<member name="element" c:identifier="GXML_NODE_TYPE_ELEMENT" value="1"/>
		<member name="attribute" c:identifier="GXML_NODE_TYPE_ATTRIBUTE" value="0"/>
		<member name="text" c:identifier="GXML_NODE_TYPE_TEXT" value="1"/>
		<member name="cdata_section" c:identifier="GXML_NODE_TYPE_CDATA_SECTION" value="2"/>
		<member name="entity_reference" c:identifier="GXML_NODE_TYPE_ENTITY_REFERENCE" value="3"/>
		<member name="entity" c:identifier="GXML_NODE_TYPE_ENTITY" value="4"/>
		<member name="processing_instruction" c:identifier="GXML_NODE_TYPE_PROCESSING_INSTRUCTION" value="5"/>
		<member name="comment" c:identifier="GXML_NODE_TYPE_COMMENT" value="6"/>
		<member name="document" c:identifier="GXML_NODE_TYPE_DOCUMENT" value="7"/>
		<member name="document_type" c:identifier="GXML_NODE_TYPE_DOCUMENT_TYPE" value="8"/>
		<member name="document_fragment" c:identifier="GXML_NODE_TYPE_DOCUMENT_FRAGMENT" value="9"/>
		<member name="notation" c:identifier="GXML_NODE_TYPE_NOTATION" value="10"/>
	</enumeration>
	<enumeration name="DocumentError" c:type="GXmlDocumentError" glib:error-domain="gxml_document_error-quark">
		<member name="invalid_document_error" c:identifier="GXML_DOCUMENT_ERROR_INVALID_DOCUMENT_ERROR" value="0"/>
		<member name="invalid_file" c:identifier="GXML_DOCUMENT_ERROR_INVALID_FILE" value="1"/>
	</enumeration>
	<enumeration name="Error" c:type="GXmlError" glib:error-domain="gxml_error-quark">
		<member name="not_supported" c:identifier="GXML_ERROR_NOT_SUPPORTED" value="0"/>
		<member name="parser" c:identifier="GXML_ERROR_PARSER" value="1"/>
		<member name="writer" c:identifier="GXML_ERROR_WRITER" value="2"/>
	</enumeration>
	<enumeration name="SerializableError" c:type="GXmlSerializableError" glib:error-domain="gxml_serializable_error-quark">
		<member name="unsupported_type_error" c:identifier="GXML_SERIALIZABLE_ERROR_UNSUPPORTED_TYPE_ERROR" value="0"/>
		<member name="str_to_value_error" c:identifier="GXML_SERIALIZABLE_ERROR_STR_TO_VALUE_ERROR" value="1"/>
	</enumeration>
	<enumeration name="SerializableEnumError" c:type="GXmlSerializableEnumError" glib:error-domain="gxml_serializable_enum_error-quark">
		<member name="invalid_value_error" c:identifier="GXML_SERIALIZABLE_ENUM_ERROR_INVALID_VALUE_ERROR" value="0"/>
		<member name="parse_error" c:identifier="GXML_SERIALIZABLE_ENUM_ERROR_PARSE_ERROR" value="1"/>
	</enumeration>
	<enumeration name="EnumerationError" c:type="GXmlEnumerationError" glib:error-domain="gxml_enumeration_error-quark">
		<member name="invalid_value" c:identifier="GXML_ENUMERATION_ERROR_INVALID_VALUE" value="0"/>
		<member name="invalid_text" c:identifier="GXML_ENUMERATION_ERROR_INVALID_TEXT" value="1"/>
	</enumeration>
	<class name="ElementList" c:type="GXmlElementList" glib:type-name="GXmlElementList" glib:get-type="gxml_element_list_get_type" glib:type-struct="ElementListClass" parent="Gee.ArrayList">
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="ElementListPrivate" c:type="GXmlElementListPrivate*"/>
		</field>
		<method name="get" c:identifier="gxml_element_list_get">
			<return-value transfer-ownership="full">
				<type name="GXml.Element" c:type="GXmlElement*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_array" c:identifier="gxml_element_list_to_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_element_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ElementListClass" c:type="GXmlElementListClass" glib:is-gtype-struct-for="ElementList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="ElementListPrivate" c:type="GXmlElementListPrivate" disguised="1"/>
	<class name="NodeList" c:type="GXmlNodeList" glib:type-name="GXmlNodeList" glib:get-type="gxml_node_list_get_type" glib:type-struct="NodeListClass" parent="Gee.ArrayList">
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="NodeListPrivate" c:type="GXmlNodeListPrivate*"/>
		</field>
		<method name="get" c:identifier="gxml_node_list_get">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_array" c:identifier="gxml_node_list_to_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_node_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.NodeList" c:type="GXmlNodeList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="NodeListClass" c:type="GXmlNodeListClass" glib:is-gtype-struct-for="NodeList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
	</record>
	<record name="NodeListPrivate" c:type="GXmlNodeListPrivate" disguised="1"/>
	<class name="xAttr" c:type="GXmlxAttr" glib:type-name="GXmlxAttr" glib:get-type="gxml_xattr_get_type" glib:type-struct="xAttrClass" parent="GXml.BackedNode">
		<implements name="GXml.Attribute"/>
		<field name="parent_instance">
			<type name="GXml.BackedNode" c:type="GXmlBackedNode"/>
		</field>
		<field name="priv">
			<type name="xAttrPrivate" c:type="GXmlxAttrPrivate*"/>
		</field>
		<property name="specified" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_specified" c:identifier="gxml_xattr_get_specified">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
	</class>
	<record name="xAttrClass" c:type="GXmlxAttrClass" glib:is-gtype-struct-for="xAttr">
		<field name="parent_class">
			<type name="GXml.BackedNodeClass" c:type="GXmlBackedNodeClass"/>
		</field>
	</record>
	<record name="xAttrPrivate" c:type="GXmlxAttrPrivate" disguised="1"/>
	<class name="BackedNode" c:type="GXmlBackedNode" glib:type-name="GXmlBackedNode" glib:get-type="gxml_backed_node_get_type" glib:type-struct="BackedNodeClass" parent="GXml.xNode">
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="BackedNodePrivate" c:type="GXmlBackedNodePrivate*"/>
		</field>
	</class>
	<record name="BackedNodeClass" c:type="GXmlBackedNodeClass" glib:is-gtype-struct-for="BackedNode">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="BackedNodePrivate" c:type="GXmlBackedNodePrivate" disguised="1"/>
	<class name="xCDATASection" c:type="GXmlxCDATASection" glib:type-name="GXmlxCDATASection" glib:get-type="gxml_xcdata_section_get_type" glib:type-struct="xCDATASectionClass" parent="GXml.xText">
		<implements name="GXml.CDATA"/>
		<field name="parent_instance">
			<type name="GXml.xText" c:type="GXmlxText"/>
		</field>
		<field name="priv">
			<type name="xCDATASectionPrivate" c:type="GXmlxCDATASectionPrivate*"/>
		</field>
	</class>
	<record name="xCDATASectionClass" c:type="GXmlxCDATASectionClass" glib:is-gtype-struct-for="xCDATASection">
		<field name="parent_class">
			<type name="GXml.xTextClass" c:type="GXmlxTextClass"/>
		</field>
	</record>
	<record name="xCDATASectionPrivate" c:type="GXmlxCDATASectionPrivate" disguised="1"/>
	<class name="xCharacterData" c:type="GXmlxCharacterData" glib:type-name="GXmlxCharacterData" glib:get-type="gxml_xcharacter_data_get_type" glib:type-struct="xCharacterDataClass" parent="GXml.BackedNode">
		<field name="parent_instance">
			<type name="GXml.BackedNode" c:type="GXmlBackedNode"/>
		</field>
		<field name="priv">
			<type name="xCharacterDataPrivate" c:type="GXmlxCharacterDataPrivate*"/>
		</field>
		<method name="substring_data" c:identifier="gxml_xcharacter_data_substring_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_data" c:identifier="gxml_xcharacter_data_append_data">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="new_segment" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="insert_data" c:identifier="gxml_xcharacter_data_insert_data">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
				<parameter name="new_segment" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="delete_data" c:identifier="gxml_xcharacter_data_delete_data">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</method>
		<method name="replace_data" c:identifier="gxml_xcharacter_data_replace_data">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
				<parameter name="new_segment" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="data" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_data" c:identifier="gxml_xcharacter_data_get_data">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_data" c:identifier="gxml_xcharacter_data_set_data">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="length" writable="1">
			<type name="gulong" c:type="gulong"/>
		</property>
		<method name="get_length" c:identifier="gxml_xcharacter_data_get_length">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gulong"/>
			</return-value>
		</method>
	</class>
	<record name="xCharacterDataClass" c:type="GXmlxCharacterDataClass" glib:is-gtype-struct-for="xCharacterData">
		<field name="parent_class">
			<type name="GXml.BackedNodeClass" c:type="GXmlBackedNodeClass"/>
		</field>
	</record>
	<record name="xCharacterDataPrivate" c:type="GXmlxCharacterDataPrivate" disguised="1"/>
	<class name="xComment" c:type="GXmlxComment" glib:type-name="GXmlxComment" glib:get-type="gxml_xcomment_get_type" glib:type-struct="xCommentClass" parent="GXml.xCharacterData">
		<implements name="GXml.Comment"/>
		<field name="parent_instance">
			<type name="GXml.xCharacterData" c:type="GXmlxCharacterData"/>
		</field>
		<field name="priv">
			<type name="xCommentPrivate" c:type="GXmlxCommentPrivate*"/>
		</field>
	</class>
	<record name="xCommentClass" c:type="GXmlxCommentClass" glib:is-gtype-struct-for="xComment">
		<field name="parent_class">
			<type name="GXml.xCharacterDataClass" c:type="GXmlxCharacterDataClass"/>
		</field>
	</record>
	<record name="xCommentPrivate" c:type="GXmlxCommentPrivate" disguised="1"/>
	<class name="DocumentFragment" c:type="GXmlDocumentFragment" glib:type-name="GXmlDocumentFragment" glib:get-type="gxml_document_fragment_get_type" glib:type-struct="DocumentFragmentClass" parent="GXml.BackedNode">
		<field name="parent_instance">
			<type name="GXml.BackedNode" c:type="GXmlBackedNode"/>
		</field>
		<field name="priv">
			<type name="DocumentFragmentPrivate" c:type="GXmlDocumentFragmentPrivate*"/>
		</field>
	</class>
	<record name="DocumentFragmentClass" c:type="GXmlDocumentFragmentClass" glib:is-gtype-struct-for="DocumentFragment">
		<field name="parent_class">
			<type name="GXml.BackedNodeClass" c:type="GXmlBackedNodeClass"/>
		</field>
	</record>
	<record name="DocumentFragmentPrivate" c:type="GXmlDocumentFragmentPrivate" disguised="1"/>
	<class name="xDocumentType" c:type="GXmlxDocumentType" glib:type-name="GXmlxDocumentType" glib:get-type="gxml_xdocument_type_get_type" glib:type-struct="xDocumentTypeClass" parent="GXml.xNode">
		<implements name="GXml.DocumentType"/>
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="xDocumentTypePrivate" c:type="GXmlxDocumentTypePrivate*"/>
		</field>
		<property name="entities" writable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Entity" c:type="GXmlEntity*"/>
			</type>
		</property>
		<method name="get_entities" c:identifier="gxml_xdocument_type_get_entities">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Entity" c:type="GXmlEntity*"/>
				</type>
			</return-value>
		</method>
		<property name="notations" writable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.xNotation" c:type="GXmlxNotation*"/>
			</type>
		</property>
		<method name="get_notations" c:identifier="gxml_xdocument_type_get_notations">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.xNotation" c:type="GXmlxNotation*"/>
				</type>
			</return-value>
		</method>
	</class>
	<record name="xDocumentTypeClass" c:type="GXmlxDocumentTypeClass" glib:is-gtype-struct-for="xDocumentType">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="xDocumentTypePrivate" c:type="GXmlxDocumentTypePrivate" disguised="1"/>
	<class name="xDocument" c:type="GXmlxDocument" glib:type-name="GXmlxDocument" glib:get-type="gxml_xdocument_get_type" glib:type-struct="xDocumentClass" parent="GXml.xNode">
		<implements name="GXml.Document"/>
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="xDocumentPrivate" c:type="GXmlxDocumentPrivate*"/>
		</field>
		<constructor name="from_libxml2" c:identifier="gxml_xdocument_new_from_libxml2">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlDoc*"/>
				</parameter>
				<parameter name="require_root" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_xdocument_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_gfile" c:identifier="gxml_xdocument_new_from_gfile" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
			<parameters>
				<parameter name="fin" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="can" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream" c:identifier="gxml_xdocument_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
			<parameters>
				<parameter name="instream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="can" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_xdocument_new_from_string">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
			<parameters>
				<parameter name="xml" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string_with_options" c:identifier="gxml_xdocument_new_from_string_with_options" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
			<parameters>
				<parameter name="xml" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="url" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="encoding" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="gxml_xdocument_new">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
		</constructor>
		<method name="save_to_path" c:identifier="gxml_xdocument_save_to_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="save_to_stream" c:identifier="gxml_xdocument_save_to_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="outstream" transfer-ownership="none">
					<type name="Gio.OutputStream" c:type="GOutputStream*"/>
				</parameter>
				<parameter name="can" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_document_fragment" c:identifier="gxml_xdocument_create_document_fragment">
			<return-value transfer-ownership="none">
				<type name="GXml.DocumentFragment" c:type="GXmlDocumentFragment*"/>
			</return-value>
		</method>
		<method name="create_text_node" c:identifier="gxml_xdocument_create_text_node">
			<return-value transfer-ownership="none">
				<type name="GXml.xText" c:type="GXmlxText*"/>
			</return-value>
			<parameters>
				<parameter name="text_data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_managed_comment" c:identifier="gxml_xdocument_create_managed_comment">
			<return-value transfer-ownership="none">
				<type name="GXml.xComment" c:type="GXmlxComment*"/>
			</return-value>
			<parameters>
				<parameter name="comment_data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_cdata_section" c:identifier="gxml_xdocument_create_cdata_section">
			<return-value transfer-ownership="none">
				<type name="GXml.xCDATASection" c:type="GXmlxCDATASection*"/>
			</return-value>
			<parameters>
				<parameter name="cdata_data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_processing_instruction" c:identifier="gxml_xdocument_create_processing_instruction">
			<return-value transfer-ownership="full">
				<type name="GXml.xProcessingInstruction" c:type="GXmlxProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_attribute" c:identifier="gxml_xdocument_create_attribute">
			<return-value transfer-ownership="full">
				<type name="GXml.xAttr" c:type="GXmlxAttr*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_entity_reference" c:identifier="gxml_xdocument_create_entity_reference">
			<return-value transfer-ownership="full">
				<type name="GXml.EntityReference" c:type="GXmlEntityReference*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_elements_by_tag_name" c:identifier="gxml_xdocument_get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
			</return-value>
			<parameters>
				<parameter name="tag_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="copy_node" c:identifier="gxml_xdocument_copy_node">
			<return-value transfer-ownership="none">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="foreign_node" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="doctype" writable="1">
			<type name="GXml.xDocumentType" c:type="GXmlxDocumentType*"/>
		</property>
		<method name="get_doctype" c:identifier="gxml_xdocument_get_doctype">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xDocumentType" c:type="GXmlxDocumentType*"/>
			</return-value>
		</method>
		<property name="implementation" writable="1">
			<type name="GXml.Implementation" c:type="GXmlImplementation*"/>
		</property>
		<method name="get_implementation" c:identifier="gxml_xdocument_get_implementation">
			<return-value transfer-ownership="none">
				<type name="GXml.Implementation" c:type="GXmlImplementation*"/>
			</return-value>
		</method>
		<property name="document-element" writable="1">
			<type name="GXml.xElement" c:type="GXmlxElement*"/>
		</property>
		<method name="get_document_element" c:identifier="gxml_xdocument_get_document_element">
			<return-value transfer-ownership="none">
				<type name="GXml.xElement" c:type="GXmlxElement*"/>
			</return-value>
		</method>
		<property name="root">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_xdocument_get_root">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_root" invoker="get_root">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
	</class>
	<record name="xDocumentClass" c:type="GXmlxDocumentClass" glib:is-gtype-struct-for="xDocument">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="xDocumentPrivate" c:type="GXmlxDocumentPrivate" disguised="1"/>
	<class name="xElement" c:type="GXmlxElement" glib:type-name="GXmlxElement" glib:get-type="gxml_xelement_get_type" glib:type-struct="xElementClass" parent="GXml.BackedNode">
		<implements name="GXml.Element"/>
		<field name="parent_instance">
			<type name="GXml.BackedNode" c:type="GXmlBackedNode"/>
		</field>
		<field name="priv">
			<type name="xElementPrivate" c:type="GXmlxElementPrivate*"/>
		</field>
		<method name="get_attribute" c:identifier="gxml_xelement_get_attribute">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_attribute" c:identifier="gxml_xelement_set_attribute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_attribute" c:identifier="gxml_xelement_remove_attribute">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_attribute_node" c:identifier="gxml_xelement_get_attribute_node">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.xAttr" c:type="GXmlxAttr*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_attribute_node" c:identifier="gxml_xelement_set_attribute_node">
			<return-value transfer-ownership="full">
				<type name="GXml.xAttr" c:type="GXmlxAttr*"/>
			</return-value>
			<parameters>
				<parameter name="new_attr" transfer-ownership="none">
					<type name="GXml.xAttr" c:type="GXmlxAttr*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_attribute_node" c:identifier="gxml_xelement_remove_attribute_node">
			<return-value transfer-ownership="full">
				<type name="GXml.xAttr" c:type="GXmlxAttr*"/>
			</return-value>
			<parameters>
				<parameter name="old_attr" transfer-ownership="none">
					<type name="GXml.xAttr" c:type="GXmlxAttr*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_elements_by_tag_name" c:identifier="gxml_xelement_get_elements_by_tag_name">
			<return-value transfer-ownership="full">
				<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
			</return-value>
			<parameters>
				<parameter name="tag_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="xElementClass" c:type="GXmlxElementClass" glib:is-gtype-struct-for="xElement">
		<field name="parent_class">
			<type name="GXml.BackedNodeClass" c:type="GXmlBackedNodeClass"/>
		</field>
	</record>
	<record name="xElementPrivate" c:type="GXmlxElementPrivate" disguised="1"/>
	<class name="Entity" c:type="GXmlEntity" glib:type-name="GXmlEntity" glib:get-type="gxml_entity_get_type" glib:type-struct="EntityClass" parent="GXml.xNode">
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="EntityPrivate" c:type="GXmlEntityPrivate*"/>
		</field>
		<property name="public-id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_public_id" c:identifier="gxml_entity_get_public_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="system-id" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_system_id" c:identifier="gxml_entity_get_system_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="notation-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_notation_name" c:identifier="gxml_entity_get_notation_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
	</class>
	<record name="EntityClass" c:type="GXmlEntityClass" glib:is-gtype-struct-for="Entity">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="EntityPrivate" c:type="GXmlEntityPrivate" disguised="1"/>
	<class name="EntityReference" c:type="GXmlEntityReference" glib:type-name="GXmlEntityReference" glib:get-type="gxml_entity_reference_get_type" glib:type-struct="EntityReferenceClass" parent="GXml.xNode">
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="EntityReferencePrivate" c:type="GXmlEntityReferencePrivate*"/>
		</field>
	</class>
	<record name="EntityReferenceClass" c:type="GXmlEntityReferenceClass" glib:is-gtype-struct-for="EntityReference">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="EntityReferencePrivate" c:type="GXmlEntityReferencePrivate" disguised="1"/>
	<class name="Implementation" c:type="GXmlImplementation" glib:type-name="GXmlImplementation" glib:get-type="gxml_implementation_get_type" glib:type-struct="ImplementationClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="ImplementationPrivate" c:type="GXmlImplementationPrivate*"/>
		</field>
		<method name="create_document" c:identifier="gxml_implementation_create_document">
			<return-value transfer-ownership="full">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
			<parameters>
				<parameter name="namespace_uri" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="qualified_name" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="doctype" transfer-ownership="none" allow-none="1">
					<type name="GXml.xDocumentType" c:type="GXmlxDocumentType*"/>
				</parameter>
			</parameters>
		</method>
		<method name="has_feature" c:identifier="gxml_implementation_has_feature">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="feature" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="version" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ImplementationClass" c:type="GXmlImplementationClass" glib:is-gtype-struct-for="Implementation">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ImplementationPrivate" c:type="GXmlImplementationPrivate" disguised="1"/>
	<class name="AbstractNamedAttrMap" c:type="GXmlAbstractNamedAttrMap" glib:type-name="GXmlAbstractNamedAttrMap" glib:get-type="gxml_abstract_named_attr_map_get_type" glib:type-struct="AbstractNamedAttrMapClass" parent="GObject.Object" abstract="1">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterable"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="AbstractNamedAttrMapPrivate" c:type="GXmlAbstractNamedAttrMapPrivate*"/>
		</field>
		<field name="elem">
			<type name="GXml.xElement" c:type="GXmlxElement*"/>
		</field>
	</class>
	<record name="AbstractNamedAttrMapClass" c:type="GXmlAbstractNamedAttrMapClass" glib:is-gtype-struct-for="AbstractNamedAttrMap">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AbstractNamedAttrMapPrivate" c:type="GXmlAbstractNamedAttrMapPrivate" disguised="1"/>
	<class name="AbstractNamedAttrMapEntry" c:type="GXmlAbstractNamedAttrMapEntry" glib:type-name="GXmlAbstractNamedAttrMapEntry" glib:get-type="gxml_abstract_named_attr_map_entry_get_type" glib:type-struct="AbstractNamedAttrMapEntryClass" parent="Gee.MapEntry">
		<field name="parent_instance">
			<type name="Gee.MapEntry" c:type="GeeMapEntry"/>
		</field>
		<field name="priv">
			<type name="AbstractNamedAttrMapEntryPrivate" c:type="GXmlAbstractNamedAttrMapEntryPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_abstract_named_attr_map_entry_new">
			<return-value transfer-ownership="full">
				<type name="GXml.AbstractNamedAttrMapEntry" c:type="GXmlAbstractNamedAttrMapEntry*"/>
			</return-value>
			<parameters>
				<parameter name="k" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="v" transfer-ownership="none">
					<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="AbstractNamedAttrMapEntryClass" c:type="GXmlAbstractNamedAttrMapEntryClass" glib:is-gtype-struct-for="Entry">
		<field name="parent_class">
			<type name="Gee.MapEntryClass" c:type="GeeMapEntryClass"/>
		</field>
	</record>
	<record name="AbstractNamedAttrMapEntryPrivate" c:type="GXmlAbstractNamedAttrMapEntryPrivate" disguised="1"/>
	<class name="AbstractNamedAttrMapIterator" c:type="GXmlAbstractNamedAttrMapIterator" glib:type-name="GXmlAbstractNamedAttrMapIterator" glib:get-type="gxml_abstract_named_attr_map_iterator_get_type" glib:type-struct="AbstractNamedAttrMapIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="AbstractNamedAttrMapIteratorPrivate" c:type="GXmlAbstractNamedAttrMapIteratorPrivate*"/>
		</field>
		<field name="nm">
			<type name="GXml.AbstractNamedAttrMap" c:type="GXmlAbstractNamedAttrMap*"/>
		</field>
		<field name="cur" allow-none="1">
			<type name="gpointer" c:type="xmlAttr*"/>
		</field>
		<constructor name="new" c:identifier="gxml_abstract_named_attr_map_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.AbstractNamedAttrMapIterator" c:type="GXmlAbstractNamedAttrMapIterator*"/>
			</return-value>
			<parameters>
				<parameter name="nm" transfer-ownership="none">
					<type name="GXml.AbstractNamedAttrMap" c:type="GXmlAbstractNamedAttrMap*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="AbstractNamedAttrMapIteratorClass" c:type="GXmlAbstractNamedAttrMapIteratorClass" glib:is-gtype-struct-for="Iterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AbstractNamedAttrMapIteratorPrivate" c:type="GXmlAbstractNamedAttrMapIteratorPrivate" disguised="1"/>
	<class name="NamedAttrMap" c:type="GXmlNamedAttrMap" glib:type-name="GXmlNamedAttrMap" glib:get-type="gxml_named_attr_map_get_type" glib:type-struct="NamedAttrMapClass" parent="GXml.AbstractNamedAttrMap">
		<implements name="Gee.Map"/>
		<implements name="GXml.NamedNodeMap"/>
		<field name="parent_instance">
			<type name="GXml.AbstractNamedAttrMap" c:type="GXmlAbstractNamedAttrMap"/>
		</field>
		<field name="priv">
			<type name="NamedAttrMapPrivate" c:type="GXmlNamedAttrMapPrivate*"/>
		</field>
		<method name="contains" c:identifier="gxml_named_attr_map_contains">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="contains_all" c:identifier="gxml_named_attr_map_contains_all">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="map" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="remove" c:identifier="gxml_named_attr_map_remove">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" direction="out" transfer-ownership="full">
					<type name="GXml.Attribute" c:type="GXmlAttribute**"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_all" c:identifier="gxml_named_attr_map_remove_all">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="map" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="NamedAttrMapClass" c:type="GXmlNamedAttrMapClass" glib:is-gtype-struct-for="NamedAttrMap">
		<field name="parent_class">
			<type name="GXml.AbstractNamedAttrMapClass" c:type="GXmlAbstractNamedAttrMapClass"/>
		</field>
	</record>
	<record name="NamedAttrMapPrivate" c:type="GXmlNamedAttrMapPrivate" disguised="1"/>
	<class name="NamespaceAttr" c:type="GXmlNamespaceAttr" glib:type-name="GXmlNamespaceAttr" glib:get-type="gxml_namespace_attr_get_type" glib:type-struct="NamespaceAttrClass" parent="GXml.xNode">
		<implements name="GXml.Namespace"/>
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="NamespaceAttrPrivate" c:type="GXmlNamespaceAttrPrivate*"/>
		</field>
		<property name="defined-prefix" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_defined_prefix" c:identifier="gxml_namespace_attr_get_defined_prefix">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="defined-namespace-uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_defined_namespace_uri" c:identifier="gxml_namespace_attr_get_defined_namespace_uri">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
	</class>
	<record name="NamespaceAttrClass" c:type="GXmlNamespaceAttrClass" glib:is-gtype-struct-for="NamespaceAttr">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="NamespaceAttrPrivate" c:type="GXmlNamespaceAttrPrivate" disguised="1"/>
	<class name="xNode" c:type="GXmlxNode" glib:type-name="GXmlxNode" glib:get-type="gxml_xnode_get_type" glib:type-struct="xNodeClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.Node"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="xNodePrivate" c:type="GXmlxNodePrivate*"/>
		</field>
		<field name="_child_nodes">
			<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
		</field>
		<field name="_attributes">
			<type name="GXml.NamedAttrMap" c:type="GXmlNamedAttrMap*"/>
		</field>
		<method name="add_namespace_attr" c:identifier="gxml_xnode_add_namespace_attr">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.NamespaceAttr" c:type="GXmlNamespaceAttr*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="namespace_prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_namespace_attr" invoker="add_namespace_attr">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.NamespaceAttr" c:type="GXmlNamespaceAttr*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="namespace_prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_namespace" c:identifier="gxml_xnode_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="namespace_prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="namespace_prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="insert_before" c:identifier="gxml_xnode_insert_before">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="ref_child" transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_before" invoker="insert_before">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="ref_child" transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_child" c:identifier="gxml_xnode_replace_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_child" invoker="replace_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_child" c:identifier="gxml_xnode_remove_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_child" invoker="remove_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append_child" c:identifier="gxml_xnode_append_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append_child" invoker="append_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="has_child_nodes" c:identifier="gxml_xnode_has_child_nodes">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="has_child_nodes" invoker="has_child_nodes">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="clone_node" c:identifier="gxml_xnode_clone_node">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="clone_node" invoker="clone_node">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="stringify" c:identifier="gxml_xnode_stringify">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="format" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="level" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="stringify" invoker="stringify">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="format" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="level" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_xnode_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="namespace-definitions" writable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespace_definitions" c:identifier="gxml_xnode_get_namespace_definitions">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespace_definitions" invoker="get_namespace_definitions">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="namespace-uri" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_namespace_uri" c:identifier="gxml_xnode_get_namespace_uri">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_namespace_uri" invoker="get_namespace_uri">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="namespace-prefix" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_namespace_prefix" c:identifier="gxml_xnode_get_namespace_prefix">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_namespace_prefix" invoker="get_namespace_prefix">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="local-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_local_name" c:identifier="gxml_xnode_get_local_name">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_local_name" invoker="get_local_name">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="node-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_node_name" c:identifier="gxml_xnode_get_node_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_node_name" invoker="get_node_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="node-value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_node_value" c:identifier="gxml_xnode_get_node_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_node_value" invoker="get_node_value">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="node-type" writable="1">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_node_type" c:identifier="gxml_xnode_get_node_type">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_node_type" invoker="get_node_type">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</virtual-method>
		<property name="parent-node" writable="1">
			<type name="GXml.xNode" c:type="GXmlxNode*"/>
		</property>
		<method name="get_parent_node" c:identifier="gxml_xnode_get_parent_node">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent_node" invoker="get_parent_node">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</virtual-method>
		<property name="child-nodes" writable="1">
			<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
		</property>
		<method name="get_child_nodes" c:identifier="gxml_xnode_get_child_nodes">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
			</return-value>
		</method>
		<virtual-method name="get_child_nodes" invoker="get_child_nodes">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
			</return-value>
		</virtual-method>
		<property name="first-child" writable="1">
			<type name="GXml.xNode" c:type="GXmlxNode*"/>
		</property>
		<method name="get_first_child" c:identifier="gxml_xnode_get_first_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_first_child" invoker="get_first_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</virtual-method>
		<property name="last-child" writable="1">
			<type name="GXml.xNode" c:type="GXmlxNode*"/>
		</property>
		<method name="get_last_child" c:identifier="gxml_xnode_get_last_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_last_child" invoker="get_last_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</virtual-method>
		<property name="previous-sibling" writable="1">
			<type name="GXml.xNode" c:type="GXmlxNode*"/>
		</property>
		<method name="get_previous_sibling" c:identifier="gxml_xnode_get_previous_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_previous_sibling" invoker="get_previous_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</virtual-method>
		<property name="next-sibling" writable="1">
			<type name="GXml.xNode" c:type="GXmlxNode*"/>
		</property>
		<method name="get_next_sibling" c:identifier="gxml_xnode_get_next_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_next_sibling" invoker="get_next_sibling">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</virtual-method>
		<property name="attributes" writable="1">
			<type name="GXml.NamedAttrMap" c:type="GXmlNamedAttrMap*"/>
		</property>
		<method name="get_attributes" c:identifier="gxml_xnode_get_attributes">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.NamedAttrMap" c:type="GXmlNamedAttrMap*"/>
			</return-value>
		</method>
		<virtual-method name="get_attributes" invoker="get_attributes">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.NamedAttrMap" c:type="GXmlNamedAttrMap*"/>
			</return-value>
		</virtual-method>
		<property name="owner-document" writable="1">
			<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
		</property>
		<method name="get_owner_document" c:identifier="gxml_xnode_get_owner_document">
			<return-value transfer-ownership="none">
				<type name="GXml.xDocument" c:type="GXmlxDocument*"/>
			</return-value>
		</method>
		<property name="namespaces">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespaces" c:identifier="gxml_xnode_get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespaces" invoker="get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="children">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_children" c:identifier="gxml_xnode_get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_children" invoker="get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_xnode_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_xnode_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_xnode_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_xnode_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_xnode_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
	</class>
	<record name="xNodeClass" c:type="GXmlxNodeClass" glib:is-gtype-struct-for="xNode">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="add_namespace_attr">
			<callback name="add_namespace_attr" c:type="add_namespace_attr">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.NamespaceAttr" c:type="GXmlNamespaceAttr*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="namespace_prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="namespace_prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="insert_before">
			<callback name="insert_before" c:type="insert_before">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="new_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="ref_child" transfer-ownership="none" allow-none="1">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="replace_child">
			<callback name="replace_child" c:type="replace_child">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="new_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="old_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="remove_child">
			<callback name="remove_child" c:type="remove_child">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="old_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="append_child">
			<callback name="append_child" c:type="append_child">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="new_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="has_child_nodes">
			<callback name="has_child_nodes" c:type="has_child_nodes">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="clone_node">
			<callback name="clone_node" c:type="clone_node">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="deep" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="stringify">
			<callback name="stringify" c:type="stringify">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="format" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
					<parameter name="level" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="xNodePrivate" c:type="GXmlxNodePrivate" disguised="1"/>
	<class name="xNotation" c:type="GXmlxNotation" glib:type-name="GXmlxNotation" glib:get-type="gxml_xnotation_get_type" glib:type-struct="xNotationClass" parent="GXml.xNode">
		<implements name="GXml.Notation"/>
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="xNotationPrivate" c:type="GXmlxNotationPrivate*"/>
		</field>
	</class>
	<record name="xNotationClass" c:type="GXmlxNotationClass" glib:is-gtype-struct-for="xNotation">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="xNotationPrivate" c:type="GXmlxNotationPrivate" disguised="1"/>
	<class name="xProcessingInstruction" c:type="GXmlxProcessingInstruction" glib:type-name="GXmlxProcessingInstruction" glib:get-type="gxml_xprocessing_instruction_get_type" glib:type-struct="xProcessingInstructionClass" parent="GXml.xNode">
		<implements name="GXml.ProcessingInstruction"/>
		<field name="parent_instance">
			<type name="GXml.xNode" c:type="GXmlxNode"/>
		</field>
		<field name="priv">
			<type name="xProcessingInstructionPrivate" c:type="GXmlxProcessingInstructionPrivate*"/>
		</field>
	</class>
	<record name="xProcessingInstructionClass" c:type="GXmlxProcessingInstructionClass" glib:is-gtype-struct-for="xProcessingInstruction">
		<field name="parent_class">
			<type name="GXml.xNodeClass" c:type="GXmlxNodeClass"/>
		</field>
	</record>
	<record name="xProcessingInstructionPrivate" c:type="GXmlxProcessingInstructionPrivate" disguised="1"/>
	<class name="xText" c:type="GXmlxText" glib:type-name="GXmlxText" glib:get-type="gxml_xtext_get_type" glib:type-struct="xTextClass" parent="GXml.xCharacterData">
		<implements name="GXml.Text"/>
		<field name="parent_instance">
			<type name="GXml.xCharacterData" c:type="GXmlxCharacterData"/>
		</field>
		<field name="priv">
			<type name="xTextPrivate" c:type="GXmlxTextPrivate*"/>
		</field>
		<method name="split_text" c:identifier="gxml_xtext_split_text">
			<return-value transfer-ownership="full">
				<type name="GXml.xText" c:type="GXmlxText*"/>
			</return-value>
			<parameters>
				<parameter name="offset" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="xTextClass" c:type="GXmlxTextClass" glib:is-gtype-struct-for="xText">
		<field name="parent_class">
			<type name="GXml.xCharacterDataClass" c:type="GXmlxCharacterDataClass"/>
		</field>
	</record>
	<record name="xTextPrivate" c:type="GXmlxTextPrivate" disguised="1"/>
	<class name="SerializableBool" c:type="GXmlSerializableBool" glib:type-name="GXmlSerializableBool" glib:get-type="gxml_serializable_bool_get_type" glib:type-struct="SerializableBoolClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableBoolPrivate" c:type="GXmlSerializableBoolPrivate*"/>
		</field>
		<method name="get_value" c:identifier="gxml_serializable_bool_get_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_bool_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_bool_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_bool_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableBool" c:type="GXmlSerializableBool*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableBoolClass" c:type="GXmlSerializableBoolClass" glib:is-gtype-struct-for="SerializableBool">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SerializableBoolPrivate" c:type="GXmlSerializableBoolPrivate" disguised="1"/>
	<class name="SerializableDouble" c:type="GXmlSerializableDouble" glib:type-name="GXmlSerializableDouble" glib:get-type="gxml_serializable_double_get_type" glib:type-struct="SerializableDoubleClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableDoublePrivate" c:type="GXmlSerializableDoublePrivate*"/>
		</field>
		<field name="_val">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_fraction">
			<type name="gint" c:type="gint"/>
		</field>
		<method name="get_fraction" c:identifier="gxml_serializable_double_get_fraction">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_fraction" c:identifier="gxml_serializable_double_set_fraction">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="fraction" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_value" c:identifier="gxml_serializable_double_get_value">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_double_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_double_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="format" c:identifier="gxml_serializable_double_format">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_double_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableDouble" c:type="GXmlSerializableDouble*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableDoubleClass" c:type="GXmlSerializableDoubleClass" glib:is-gtype-struct-for="SerializableDouble">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SerializableDoublePrivate" c:type="GXmlSerializableDoublePrivate" disguised="1"/>
	<class name="SerializableFloat" c:type="GXmlSerializableFloat" glib:type-name="GXmlSerializableFloat" glib:get-type="gxml_serializable_float_get_type" glib:type-struct="SerializableFloatClass" parent="GXml.SerializableDouble">
		<field name="parent_instance">
			<type name="GXml.SerializableDouble" c:type="GXmlSerializableDouble"/>
		</field>
		<field name="priv">
			<type name="SerializableFloatPrivate" c:type="GXmlSerializableFloatPrivate*"/>
		</field>
		<method name="get_value" c:identifier="gxml_serializable_float_get_value">
			<return-value transfer-ownership="full">
				<type name="gfloat" c:type="gfloat"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_float_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_float_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableFloat" c:type="GXmlSerializableFloat*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableFloatClass" c:type="GXmlSerializableFloatClass" glib:is-gtype-struct-for="SerializableFloat">
		<field name="parent_class">
			<type name="GXml.SerializableDoubleClass" c:type="GXmlSerializableDoubleClass"/>
		</field>
	</record>
	<record name="SerializableFloatPrivate" c:type="GXmlSerializableFloatPrivate" disguised="1"/>
	<class name="SerializableEnum" c:type="GXmlSerializableEnum" glib:type-name="GXmlSerializableEnum" glib:get-type="gxml_serializable_enum_get_type" glib:type-struct="SerializableEnumClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableEnumPrivate" c:type="GXmlSerializableEnumPrivate*"/>
		</field>
		<field name="_val">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_enumtype">
			<type name="GObject.Type" c:type="GType"/>
		</field>
		<constructor name="with_enum" c:identifier="gxml_serializable_enum_new_with_enum">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableEnum" c:type="GXmlSerializableEnum*"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="set_enum_type" c:identifier="gxml_serializable_enum_set_enum_type">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="type" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_enum_type" c:identifier="gxml_serializable_enum_get_enum_type">
			<return-value transfer-ownership="full">
				<type name="GObject.Type" c:type="GType"/>
			</return-value>
		</method>
		<method name="parse" c:identifier="gxml_serializable_enum_parse" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_integer" c:identifier="gxml_serializable_enum_parse_integer" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="v" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_integer" c:identifier="gxml_serializable_enum_to_integer" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_enum_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_enum_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableEnum" c:type="GXmlSerializableEnum*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableEnumClass" c:type="GXmlSerializableEnumClass" glib:is-gtype-struct-for="SerializableEnum">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SerializableEnumPrivate" c:type="GXmlSerializableEnumPrivate" disguised="1"/>
	<class name="SerializableInt" c:type="GXmlSerializableInt" glib:type-name="GXmlSerializableInt" glib:get-type="gxml_serializable_int_get_type" glib:type-struct="SerializableIntClass" parent="GXml.SerializableDouble">
		<field name="parent_instance">
			<type name="GXml.SerializableDouble" c:type="GXmlSerializableDouble"/>
		</field>
		<field name="priv">
			<type name="SerializableIntPrivate" c:type="GXmlSerializableIntPrivate*"/>
		</field>
		<method name="get_value" c:identifier="gxml_serializable_int_get_value">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gxml_serializable_int_set_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_int_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableInt" c:type="GXmlSerializableInt*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableIntClass" c:type="GXmlSerializableIntClass" glib:is-gtype-struct-for="SerializableInt">
		<field name="parent_class">
			<type name="GXml.SerializableDoubleClass" c:type="GXmlSerializableDoubleClass"/>
		</field>
	</record>
	<record name="SerializableIntPrivate" c:type="GXmlSerializableIntPrivate" disguised="1"/>
	<class name="SerializableValueList" c:type="GXmlSerializableValueList" glib:type-name="GXmlSerializableValueList" glib:get-type="gxml_serializable_value_list_get_type" glib:type-struct="SerializableValueListClass" parent="GObject.Object">
		<implements name="GXml.SerializableProperty"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableValueListPrivate" c:type="GXmlSerializableValueListPrivate*"/>
		</field>
		<field name="_vals">
			<array>
				<type name="utf8" c:type="gchar*"/>
			</array>
		</field>
		<field name="extra">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</field>
		<method name="get_values" c:identifier="gxml_serializable_value_list_get_values">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_values" invoker="get_values">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="add_values" c:identifier="gxml_serializable_value_list_add_values">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="vals" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="vals_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_values" invoker="add_values">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="vals" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="vals_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_value_at" c:identifier="gxml_serializable_value_list_get_value_at">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_value_at" invoker="get_value_at">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="select_value_at" c:identifier="gxml_serializable_value_list_select_value_at">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="select_value_at" invoker="select_value_at">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_values_array" c:identifier="gxml_serializable_value_list_get_values_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_values_array" invoker="get_values_array">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="is_value" c:identifier="gxml_serializable_value_list_is_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="is_value" invoker="is_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_serializable_value_list_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_value_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SerializableValueListClass" c:type="GXmlSerializableValueListClass" glib:is-gtype-struct-for="SerializableValueList">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="get_values">
			<callback name="get_values" c:type="get_values">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="add_values">
			<callback name="add_values" c:type="add_values">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="vals" transfer-ownership="none">
						<array length="2">
							<type name="utf8" c:type="gchar*"/>
						</array>
					</parameter>
					<parameter name="vals_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_value_at">
			<callback name="get_value_at" c:type="get_value_at">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="select_value_at">
			<callback name="select_value_at" c:type="select_value_at">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_values_array">
			<callback name="get_values_array" c:type="get_values_array">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="is_value">
			<callback name="is_value" c:type="is_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableValueList" c:type="GXmlSerializableValueList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableValueListPrivate" c:type="GXmlSerializableValueListPrivate" disguised="1"/>
	<record name="Enumeration">
		<function name="get_nick" c:identifier="gxml_enumeration_get_nick" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_nick_camelcase" c:identifier="gxml_enumeration_get_nick_camelcase" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_string" c:identifier="gxml_enumeration_get_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="use_nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="camelcase" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<function name="parse" c:identifier="gxml_enumeration_parse" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.EnumValue" c:type="GEnumValue*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="to_array" c:identifier="gxml_enumeration_to_array">
			<return-value transfer-ownership="none">
				<array length="1">
					<type name="GObject.EnumValue" c:type="GEnumValue"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<function name="parse_integer" c:identifier="gxml_enumeration_parse_integer">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.EnumValue" c:type="GEnumValue*"/>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</function>
		<function name="to_string_array" c:identifier="gxml_enumeration_to_string_array" throws="1">
			<return-value transfer-ownership="full">
				<array length="1">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="enumeration" transfer-ownership="none">
					<type name="GObject.Type" c:type="GType"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="gxml_enumeration_new">
			<return-value transfer-ownership="full">
				<type name="GXml.Enumeration" c:type="GXmlEnumeration*"/>
			</return-value>
		</constructor>
	</record>
	<class name="SerializableObjectModel" c:type="GXmlSerializableObjectModel" glib:type-name="GXmlSerializableObjectModel" glib:get-type="gxml_serializable_object_model_get_type" glib:type-struct="SerializableObjectModelClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.Serializable"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableObjectModelPrivate" c:type="GXmlSerializableObjectModelPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_object_model_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_object_model_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_object_model_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_object_model_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_object_model_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="default_node_name" c:identifier="gxml_serializable_object_model_default_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="find_property_spec" c:identifier="gxml_serializable_object_model_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_object_model_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_object_model_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_object_model_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_object_model_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_object_model_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Element" c:type="GXmlElement*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_object_model_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_object_model_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_object_model_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_object_model_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="to_string" c:identifier="gxml_serializable_object_model_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_object_model_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_object_model_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_object_model_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_object_model_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableObjectModelClass" c:type="GXmlSerializableObjectModelClass" glib:is-gtype-struct-for="SerializableObjectModel">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableObjectModelPrivate" c:type="GXmlSerializableObjectModelPrivate" disguised="1"/>
	<class name="SerializableTreeMap" c:type="GXmlSerializableTreeMap" glib:type-name="GXmlSerializableTreeMap" glib:get-type="gxml_serializable_tree_map_get_type" glib:type-struct="SerializableTreeMapClass" parent="Gee.TreeMap">
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="Gee.TreeMap" c:type="GeeTreeMap"/>
		</field>
		<field name="priv">
			<type name="SerializableTreeMapPrivate" c:type="GXmlSerializableTreeMapPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_tree_map_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_tree_map_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_tree_map_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_tree_map_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_tree_map_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_tree_map_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_tree_map_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_tree_map_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_tree_map_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_tree_map_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_tree_map_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_tree_map_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_tree_map_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_tree_map_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_tree_map_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_tree_map_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_tree_map_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_tree_map_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_tree_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
			</return-value>
		</constructor>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_tree_map_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_tree_map_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_tree_map_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_tree_map_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableTreeMapClass" c:type="GXmlSerializableTreeMapClass" glib:is-gtype-struct-for="SerializableTreeMap">
		<field name="parent_class">
			<type name="Gee.TreeMapClass" c:type="GeeTreeMapClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableTreeMap" c:type="GXmlSerializableTreeMap*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableTreeMapPrivate" c:type="GXmlSerializableTreeMapPrivate" disguised="1"/>
	<class name="SerializableHashMap" c:type="GXmlSerializableHashMap" glib:type-name="GXmlSerializableHashMap" glib:get-type="gxml_serializable_hash_map_get_type" glib:type-struct="SerializableHashMapClass" parent="Gee.HashMap">
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="Gee.HashMap" c:type="GeeHashMap"/>
		</field>
		<field name="priv">
			<type name="SerializableHashMapPrivate" c:type="GXmlSerializableHashMapPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_hash_map_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_hash_map_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_hash_map_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_hash_map_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_hash_map_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_hash_map_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_hash_map_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_hash_map_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_hash_map_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_hash_map_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_hash_map_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_hash_map_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_hash_map_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_hash_map_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_hash_map_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_hash_map_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_hash_map_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_hash_map_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_hash_map_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_hash_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
			</return-value>
		</constructor>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_hash_map_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_hash_map_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_hash_map_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_hash_map_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableHashMapClass" c:type="GXmlSerializableHashMapClass" glib:is-gtype-struct-for="SerializableHashMap">
		<field name="parent_class">
			<type name="Gee.HashMapClass" c:type="GeeHashMapClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableHashMap" c:type="GXmlSerializableHashMap*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableHashMapPrivate" c:type="GXmlSerializableHashMapPrivate" disguised="1"/>
	<class name="SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap" glib:type-name="GXmlSerializableDualKeyMap" glib:get-type="gxml_serializable_dual_key_map_get_type" glib:type-struct="SerializableDualKeyMapClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SerializableDualKeyMapPrivate" c:type="GXmlSerializableDualKeyMapPrivate*"/>
		</field>
		<field name="storage">
			<type name="Gee.HashMultiMap" c:type="GeeHashMultiMap*">
				<type name="gpointer" c:type="gpointer"/>
				<type name="Gee.HashMap" c:type="GeeHashMap*">
					<type name="gpointer" c:type="gpointer"/>
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_dual_key_map_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_dual_key_map_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_dual_key_map_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_dual_key_map_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="secondary_keys" c:identifier="gxml_serializable_dual_key_map_secondary_keys">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="values_for_key" c:identifier="gxml_serializable_dual_key_map_values_for_key">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
			<parameters>
				<parameter name="primary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="values" c:identifier="gxml_serializable_dual_key_map_values">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<method name="set" c:identifier="gxml_serializable_dual_key_map_set">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="primary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="secundary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="val" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="gxml_serializable_dual_key_map_get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="primary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="secondary_key" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_dual_key_map_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_dual_key_map_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_dual_key_map_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_dual_key_map_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_dual_key_map_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_dual_key_map_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_dual_key_map_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_dual_key_map_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_dual_key_map_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_dual_key_map_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_dual_key_map_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_dual_key_map_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_dual_key_map_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_dual_key_map_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_dual_key_map_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_dual_key_map_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
			</return-value>
		</constructor>
		<property name="value-type">
			<type name="GObject.Type" c:type="GType"/>
		</property>
		<method name="get_value_type" c:identifier="gxml_serializable_dual_key_map_get_value_type">
			<return-value transfer-ownership="none">
				<type name="GObject.Type" c:type="GType"/>
			</return-value>
		</method>
		<property name="primary-key-type">
			<type name="GObject.Type" c:type="GType"/>
		</property>
		<method name="get_primary_key_type" c:identifier="gxml_serializable_dual_key_map_get_primary_key_type">
			<return-value transfer-ownership="none">
				<type name="GObject.Type" c:type="GType"/>
			</return-value>
		</method>
		<property name="secondary-key-type">
			<type name="GObject.Type" c:type="GType"/>
		</property>
		<method name="get_secondary_key_type" c:identifier="gxml_serializable_dual_key_map_get_secondary_key_type">
			<return-value transfer-ownership="none">
				<type name="GObject.Type" c:type="GType"/>
			</return-value>
		</method>
		<property name="primary-keys">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<method name="get_primary_keys" c:identifier="gxml_serializable_dual_key_map_get_primary_keys">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<property name="size">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_size" c:identifier="gxml_serializable_dual_key_map_get_size">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_dual_key_map_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_dual_key_map_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_dual_key_map_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_dual_key_map_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableDualKeyMapClass" c:type="GXmlSerializableDualKeyMapClass" glib:is-gtype-struct-for="SerializableDualKeyMap">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableDualKeyMap" c:type="GXmlSerializableDualKeyMap*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableDualKeyMapPrivate" c:type="GXmlSerializableDualKeyMapPrivate" disguised="1"/>
	<class name="SerializableArrayList" c:type="GXmlSerializableArrayList" glib:type-name="GXmlSerializableArrayList" glib:get-type="gxml_serializable_array_list_get_type" glib:type-struct="SerializableArrayListClass" parent="Gee.ArrayList">
		<implements name="GXml.Serializable"/>
		<implements name="GXml.SerializableCollection"/>
		<field name="parent_instance">
			<type name="Gee.ArrayList" c:type="GeeArrayList"/>
		</field>
		<field name="priv">
			<type name="SerializableArrayListPrivate" c:type="GXmlSerializableArrayListPrivate*"/>
		</field>
		<field name="_node">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<field name="_deserialized">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_array_list_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_array_list_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_array_list_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_array_list_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_array_list_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_array_list_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_array_list_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_array_list_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_array_list_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_array_list_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_array_list_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize" c:identifier="gxml_serializable_array_list_default_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="serialize_property" c:identifier="gxml_serializable_array_list_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serialize_property" c:identifier="gxml_serializable_array_list_default_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize" c:identifier="gxml_serializable_array_list_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize" c:identifier="gxml_serializable_array_list_default_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<method name="deserialize_property" c:identifier="gxml_serializable_array_list_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_deserialize_property" c:identifier="gxml_serializable_array_list_default_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_serializable_array_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
			</return-value>
		</constructor>
		<property name="properties" writable="1">
			<array>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</array>
		</property>
		<method name="get_properties" c:identifier="gxml_serializable_array_list_get_properties">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_properties" c:identifier="gxml_serializable_array_list_set_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="ignored-serializable-properties" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</type>
		</property>
		<method name="get_ignored_serializable_properties" c:identifier="gxml_serializable_array_list_get_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</type>
			</return-value>
		</method>
		<method name="set_ignored_serializable_properties" c:identifier="gxml_serializable_array_list_set_ignored_serializable_properties">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SerializableArrayListClass" c:type="GXmlSerializableArrayListClass" glib:is-gtype-struct-for="SerializableArrayList">
		<field name="parent_class">
			<type name="Gee.ArrayListClass" c:type="GeeArrayListClass"/>
		</field>
				<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableArrayList" c:type="GXmlSerializableArrayList*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableArrayListPrivate" c:type="GXmlSerializableArrayListPrivate" disguised="1"/>
	<class name="SerializableContainer" c:type="GXmlSerializableContainer" glib:type-name="GXmlSerializableContainer" glib:get-type="gxml_serializable_container_get_type" glib:type-struct="SerializableContainerClass" parent="GXml.SerializableObjectModel" abstract="1">
		<field name="parent_instance">
			<type name="GXml.SerializableObjectModel" c:type="GXmlSerializableObjectModel"/>
		</field>
		<field name="priv">
			<type name="SerializableContainerPrivate" c:type="GXmlSerializableContainerPrivate*"/>
		</field>
		<method name="init_containers" c:identifier="gxml_serializable_container_init_containers">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="init_containers" invoker="init_containers">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
	</class>
	<record name="SerializableContainerClass" c:type="GXmlSerializableContainerClass" glib:is-gtype-struct-for="SerializableContainer">
		<field name="parent_class">
			<type name="GXml.SerializableObjectModelClass" c:type="GXmlSerializableObjectModelClass"/>
		</field>
				<field name="init_containers">
			<callback name="init_containers" c:type="init_containers">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableContainer" c:type="GXmlSerializableContainer*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SerializableContainerPrivate" c:type="GXmlSerializableContainerPrivate" disguised="1"/>
	<class name="TAttribute" c:type="GXmlTAttribute" glib:type-name="GXmlTAttribute" glib:get-type="gxml_tattribute_get_type" glib:type-struct="TAttributeClass" parent="GXml.TNode">
		<implements name="GXml.Attribute"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TAttributePrivate" c:type="GXmlTAttributePrivate*"/>
		</field>
		<field name="_namespaces">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="gxml_tattribute_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TAttribute" c:type="GXmlTAttribute*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TAttributeClass" c:type="GXmlTAttributeClass" glib:is-gtype-struct-for="TAttribute">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TAttributePrivate" c:type="GXmlTAttributePrivate" disguised="1"/>
	<class name="TComment" c:type="GXmlTComment" glib:type-name="GXmlTComment" glib:get-type="gxml_tcomment_get_type" glib:type-struct="TCommentClass" parent="GXml.TNode">
		<implements name="GXml.Comment"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TCommentPrivate" c:type="GXmlTCommentPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tcomment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TComment" c:type="GXmlTComment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TCommentClass" c:type="GXmlTCommentClass" glib:is-gtype-struct-for="TComment">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TCommentPrivate" c:type="GXmlTCommentPrivate" disguised="1"/>
	<class name="TCDATA" c:type="GXmlTCDATA" glib:type-name="GXmlTCDATA" glib:get-type="gxml_tcdata_get_type" glib:type-struct="TCDATAClass" parent="GXml.TNode">
		<implements name="GXml.CDATA"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TCDATAPrivate" c:type="GXmlTCDATAPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tcdata_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TCDATA" c:type="GXmlTCDATA*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TCDATAClass" c:type="GXmlTCDATAClass" glib:is-gtype-struct-for="TCDATA">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TCDATAPrivate" c:type="GXmlTCDATAPrivate" disguised="1"/>
	<class name="TDocument" c:type="GXmlTDocument" glib:type-name="GXmlTDocument" glib:get-type="gxml_tdocument_get_type" glib:type-struct="TDocumentClass" parent="GXml.TNode">
		<implements name="GXml.Document"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TDocumentPrivate" c:type="GXmlTDocumentPrivate*"/>
		</field>
		<field name="_namespaces">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<field name="_children">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="gxml_tdocument_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_tdocument_new_from_path">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_tdocument_new_from_uri">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_tdocument_new_from_file">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream" c:identifier="gxml_tdocument_new_from_stream">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_tdocument_new_from_string">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_path_with_readtype_func" c:identifier="gxml_tdocument_new_from_path_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri_with_readtype_func" c:identifier="gxml_tdocument_new_from_uri_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file_with_readtype_func" c:identifier="gxml_tdocument_new_from_file_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream_with_readtype_func" c:identifier="gxml_tdocument_new_from_stream_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string_with_readtype_func" c:identifier="gxml_tdocument_new_from_string_with_readtype_func">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocument" c:type="GXmlTDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="func_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="save_to" c:identifier="gxml_tdocument_save_to" throws="1" deprecated="Use save_as" deprecated-version="0.8.1">
			<annotation key="deprecated.replacement" value="save_as"/>
			<annotation key="deprecated.since" value="0.8.1"/>
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<function name="tw_save_as" c:identifier="gxml_tdocument_tw_save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</function>
		<function name="write_document" c:identifier="gxml_tdocument_write_document" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="tw" transfer-ownership="none">
					<type name="libxml2.TextWriter" c:type="xmlTextWriter*"/>
				</parameter>
			</parameters>
		</function>
		<function name="start_node" c:identifier="gxml_tdocument_start_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="tw" transfer-ownership="none">
					<type name="libxml2.TextWriter" c:type="xmlTextWriter*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="root" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="declared_ns" direction="inout" transfer-ownership="full">
					<type name="Gee.ArrayList" c:type="GeeArrayList**">
						<type name="utf8" c:type="gchar*"/>
					</type>
				</parameter>
			</parameters>
		</function>
		<function name="read_doc" c:identifier="gxml_tdocument_read_doc" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="rtfunc" transfer-ownership="none" allow-none="1" closure="3" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="rtfunc_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="read_doc_stream" c:identifier="gxml_tdocument_read_doc_stream">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="rtfunc" transfer-ownership="none" allow-none="1" closure="3" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="rtfunc_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="read_node" c:identifier="gxml_tdocument_read_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocumentReadType" c:type="GXmlTDocumentReadType"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="tr" transfer-ownership="none">
					<type name="libxml2.TextReader" c:type="xmlTextReader*"/>
				</parameter>
				<parameter name="rntfunc" transfer-ownership="none" allow-none="1" closure="3" scope="call">
					<type name="GXml.TDocumentReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc"/>
				</parameter>
				<parameter name="rntfunc_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<callback name="ReadTypeFunc" c:type="GXmlTDocumentReadTypeFunc">
			<return-value transfer-ownership="full">
				<type name="GXml.TDocumentReadType" c:type="GXmlTDocumentReadType"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="tr" transfer-ownership="none">
					<type name="libxml2.TextReader" c:type="xmlTextReader*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="2">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="TDocumentClass" c:type="GXmlTDocumentClass" glib:is-gtype-struct-for="TDocument">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TDocumentPrivate" c:type="GXmlTDocumentPrivate" disguised="1"/>
	<enumeration name="TDocumentReadType" c:type="GXmlTDocumentReadType" glib:type-name="GXmlTDocumentReadType" glib:get-type="gxml_tdocument_read_type_get_type">
		<member name="next" c:identifier="GXML_TDOCUMENT_READ_TYPE_NEXT" value="0"/>
		<member name="continue" c:identifier="GXML_TDOCUMENT_READ_TYPE_CONTINUE" value="1"/>
		<member name="stop" c:identifier="GXML_TDOCUMENT_READ_TYPE_STOP" value="2"/>
	</enumeration>
	<class name="TElement" c:type="GXmlTElement" glib:type-name="GXmlTElement" glib:get-type="gxml_telement_get_type" glib:type-struct="TElementClass" parent="GXml.TNode">
		<implements name="GXml.Element"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TElementPrivate" c:type="GXmlTElementPrivate*"/>
		</field>
		<field name="_attrs">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<field name="_children">
			<type name="GXml.TNodeTChildrenList" c:type="GXmlTNodeTChildrenList*"/>
		</field>
		<field name="_namespaces">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="gxml_telement_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TElement" c:type="GXmlTElement*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TElementClass" c:type="GXmlTElementClass" glib:is-gtype-struct-for="TElement">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TElementPrivate" c:type="GXmlTElementPrivate" disguised="1"/>
	<class name="TNamespace" c:type="GXmlTNamespace" glib:type-name="GXmlTNamespace" glib:get-type="gxml_tnamespace_get_type" glib:type-struct="TNamespaceClass" parent="GXml.TNode">
		<implements name="GXml.Namespace"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TNamespacePrivate" c:type="GXmlTNamespacePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tnamespace_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TNamespace" c:type="GXmlTNamespace*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TNamespaceClass" c:type="GXmlTNamespaceClass" glib:is-gtype-struct-for="TNamespace">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TNamespacePrivate" c:type="GXmlTNamespacePrivate" disguised="1"/>
	<class name="TNode" c:type="GXmlTNode" glib:type-name="GXmlTNode" glib:get-type="gxml_tnode_get_type" glib:type-struct="TNodeClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.Node"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TNodePrivate" c:type="GXmlTNodePrivate*"/>
		</field>
		<field name="_name">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_value">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="_doc">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</field>
		<field name="_parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</field>
		<method name="set_namespace" c:identifier="gxml_tnode_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_tnode_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_parent" c:identifier="gxml_tnode_set_parent">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_parent" invoker="set_parent">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_tnode_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="children">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_children" c:identifier="gxml_tnode_get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_children" invoker="get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="document">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</property>
		<method name="get_document" c:identifier="gxml_tnode_get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</method>
		<virtual-method name="get_document" invoker="get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_tnode_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="namespaces">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespaces" c:identifier="gxml_tnode_get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespaces" invoker="get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="type-node">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_type_node" c:identifier="gxml_tnode_get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_type_node" invoker="get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_tnode_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_tnode_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_tnode_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
	</class>
	<record name="TNodeClass" c:type="GXmlTNodeClass" glib:is-gtype-struct-for="TNode">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.TNode" c:type="GXmlTNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.TNode" c:type="GXmlTNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_parent">
			<callback name="set_parent" c:type="set_parent">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.TNode" c:type="GXmlTNode*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TNodePrivate" c:type="GXmlTNodePrivate" disguised="1"/>
	<class name="TNodeTChildrenList" c:type="GXmlTNodeTChildrenList" glib:type-name="GXmlTNodeTChildrenList" glib:get-type="gxml_tnode_tchildren_list_get_type" glib:type-struct="TNodeTChildrenListClass" parent="Gee.AbstractBidirList">
		<field name="parent_instance">
			<type name="Gee.AbstractBidirList" c:type="GeeAbstractBidirList"/>
		</field>
		<field name="priv">
			<type name="TNodeTChildrenListPrivate" c:type="GXmlTNodeTChildrenListPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tnode_tchildren_list_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TNodeTChildrenList" c:type="GXmlTNodeTChildrenList*"/>
			</return-value>
			<parameters>
				<parameter name="e" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TNodeTChildrenListClass" c:type="GXmlTNodeTChildrenListClass" glib:is-gtype-struct-for="TChildrenList">
		<field name="parent_class">
			<type name="Gee.AbstractBidirListClass" c:type="GeeAbstractBidirListClass"/>
		</field>
	</record>
	<record name="TNodeTChildrenListPrivate" c:type="GXmlTNodeTChildrenListPrivate" disguised="1"/>
	<class name="TProcessingInstruction" c:type="GXmlTProcessingInstruction" glib:type-name="GXmlTProcessingInstruction" glib:get-type="gxml_tprocessing_instruction_get_type" glib:type-struct="TProcessingInstructionClass" parent="GXml.TNode">
		<implements name="GXml.ProcessingInstruction"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TProcessingInstructionPrivate" c:type="GXmlTProcessingInstructionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_tprocessing_instruction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TProcessingInstruction" c:type="GXmlTProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TProcessingInstructionClass" c:type="GXmlTProcessingInstructionClass" glib:is-gtype-struct-for="TProcessingInstruction">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TProcessingInstructionPrivate" c:type="GXmlTProcessingInstructionPrivate" disguised="1"/>
	<class name="TText" c:type="GXmlTText" glib:type-name="GXmlTText" glib:get-type="gxml_ttext_get_type" glib:type-struct="TTextClass" parent="GXml.TNode">
		<implements name="GXml.Text"/>
		<field name="parent_instance">
			<type name="GXml.TNode" c:type="GXmlTNode"/>
		</field>
		<field name="priv">
			<type name="TTextPrivate" c:type="GXmlTTextPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ttext_new">
			<return-value transfer-ownership="full">
				<type name="GXml.TText" c:type="GXmlTText*"/>
			</return-value>
			<parameters>
				<parameter name="d" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="TTextClass" c:type="GXmlTTextClass" glib:is-gtype-struct-for="TText">
		<field name="parent_class">
			<type name="GXml.TNodeClass" c:type="GXmlTNodeClass"/>
		</field>
	</record>
	<record name="TTextPrivate" c:type="GXmlTTextPrivate" disguised="1"/>
	<class name="HtmlDocument" c:type="GXmlHtmlDocument" glib:type-name="GXmlHtmlDocument" glib:get-type="gxml_html_document_get_type" glib:type-struct="HtmlDocumentClass" parent="GXml.xDocument">
		<field name="parent_instance">
			<type name="GXml.xDocument" c:type="GXmlxDocument"/>
		</field>
		<field name="priv">
			<type name="HtmlDocumentPrivate" c:type="GXmlHtmlDocumentPrivate*"/>
		</field>
		<constructor name="from_path" c:identifier="gxml_html_document_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_html_document_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_html_document_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancel" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_html_document_new_from_string">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="html" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_elements_by_class_name" c:identifier="gxml_html_document_get_elements_by_class_name">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="klass" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_element_by_id" c:identifier="gxml_html_document_get_element_by_id">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Element" c:type="GXmlElement*"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="gxml_html_document_new">
			<return-value transfer-ownership="full">
				<type name="GXml.HtmlDocument" c:type="GXmlHtmlDocument*"/>
			</return-value>
		</constructor>
		<property name="default-options">
			<type name="gint" c:type="gint"/>
		</property>
		<function name="get_default_options" c:identifier="gxml_html_document_get_default_options">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</function>
	</class>
	<record name="HtmlDocumentClass" c:type="GXmlHtmlDocumentClass" glib:is-gtype-struct-for="HtmlDocument">
		<field name="parent_class">
			<type name="GXml.xDocumentClass" c:type="GXmlxDocumentClass"/>
		</field>
	</record>
	<record name="HtmlDocumentPrivate" c:type="GXmlHtmlDocumentPrivate" disguised="1"/>
	<class name="GAttribute" c:type="GXmlGAttribute" glib:type-name="GXmlGAttribute" glib:get-type="gxml_gattribute_get_type" glib:type-struct="GAttributeClass" parent="GXml.GNode">
		<implements name="GXml.Attribute"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GAttributePrivate" c:type="GXmlGAttributePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gattribute_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GAttribute" c:type="GXmlGAttribute*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlAttr*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GAttributeClass" c:type="GXmlGAttributeClass" glib:is-gtype-struct-for="GAttribute">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GAttributePrivate" c:type="GXmlGAttributePrivate" disguised="1"/>
	<class name="GComment" c:type="GXmlGComment" glib:type-name="GXmlGComment" glib:get-type="gxml_gcomment_get_type" glib:type-struct="GCommentClass" parent="GXml.GNode">
		<implements name="GXml.Comment"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GCommentPrivate" c:type="GXmlGCommentPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gcomment_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GComment" c:type="GXmlGComment*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GCommentClass" c:type="GXmlGCommentClass" glib:is-gtype-struct-for="GComment">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GCommentPrivate" c:type="GXmlGCommentPrivate" disguised="1"/>
	<class name="GCDATA" c:type="GXmlGCDATA" glib:type-name="GXmlGCDATA" glib:get-type="gxml_gcdata_get_type" glib:type-struct="GCDATAClass" parent="GXml.GNode">
		<implements name="GXml.CDATA"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GCDATAPrivate" c:type="GXmlGCDATAPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gcdata_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GCDATA" c:type="GXmlGCDATA*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GCDATAClass" c:type="GXmlGCDATAClass" glib:is-gtype-struct-for="GCDATA">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GCDATAPrivate" c:type="GXmlGCDATAPrivate" disguised="1"/>
	<class name="GDocument" c:type="GXmlGDocument" glib:type-name="GXmlGDocument" glib:get-type="gxml_gdocument_get_type" glib:type-struct="GDocumentClass" parent="GXml.GNode">
		<implements name="GXml.Document"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GDocumentPrivate" c:type="GXmlGDocumentPrivate*"/>
		</field>
		<field name="doc" allow-none="1">
			<type name="gpointer" c:type="xmlDoc*"/>
		</field>
		<field name="_buffer">
			<type name="libxml2.Buffer" c:type="xmlBuffer*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gdocument_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
		</constructor>
		<constructor name="from_path" c:identifier="gxml_gdocument_new_from_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_uri" c:identifier="gxml_gdocument_new_from_uri" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_file" c:identifier="gxml_gdocument_new_from_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancel" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_string" c:identifier="gxml_gdocument_new_from_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_stream" c:identifier="gxml_gdocument_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="from_doc" c:identifier="gxml_gdocument_new_from_doc">
			<return-value transfer-ownership="full">
				<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="libxml2.Doc" c:type="xmlDoc*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="libxml_to_string" c:identifier="gxml_gdocument_libxml_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="save" c:identifier="gxml_gdocument_save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save" invoker="save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="save_as" c:identifier="gxml_gdocument_save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save_as" invoker="save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="GDocumentClass" c:type="GXmlGDocumentClass" glib:is-gtype-struct-for="GDocument">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
				<field name="save">
			<callback name="save" c:type="save" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="save_as">
			<callback name="save_as" c:type="save_as" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GDocumentPrivate" c:type="GXmlGDocumentPrivate" disguised="1"/>
	<class name="GElement" c:type="GXmlGElement" glib:type-name="GXmlGElement" glib:get-type="gxml_gelement_get_type" glib:type-struct="GElementClass" parent="GXml.GNode">
		<implements name="GXml.Element"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GElementPrivate" c:type="GXmlGElementPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gelement_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GElement" c:type="GXmlGElement*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GElementClass" c:type="GXmlGElementClass" glib:is-gtype-struct-for="GElement">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GElementPrivate" c:type="GXmlGElementPrivate" disguised="1"/>
	<class name="GNamespace" c:type="GXmlGNamespace" glib:type-name="GXmlGNamespace" glib:get-type="gxml_gnamespace_get_type" glib:type-struct="GNamespaceClass" parent="GXml.GNode">
		<implements name="GXml.Namespace"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GNamespacePrivate" c:type="GXmlGNamespacePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gnamespace_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GNamespace" c:type="GXmlGNamespace*"/>
			</return-value>
			<parameters>
				<parameter name="ns" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNs*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_internal_ns" c:identifier="gxml_gnamespace_get_internal_ns">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="xmlNs*"/>
			</return-value>
		</method>
	</class>
	<record name="GNamespaceClass" c:type="GXmlGNamespaceClass" glib:is-gtype-struct-for="GNamespace">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GNamespacePrivate" c:type="GXmlGNamespacePrivate" disguised="1"/>
	<class name="GNode" c:type="GXmlGNode" glib:type-name="GXmlGNode" glib:get-type="gxml_gnode_get_type" glib:type-struct="GNodeClass" parent="GObject.Object" abstract="1">
		<implements name="GXml.Node"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GNodePrivate" c:type="GXmlGNodePrivate*"/>
		</field>
		<field name="_doc">
			<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
		</field>
		<field name="_node" allow-none="1">
			<type name="gpointer" c:type="xmlNode*"/>
		</field>
		<method name="set_namespace" c:identifier="gxml_gnode_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_gnode_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="get_internal_node" c:identifier="gxml_gnode_get_internal_node">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="xmlNode*"/>
			</return-value>
		</method>
		<function name="to_gnode" c:identifier="gxml_gnode_to_gnode">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</function>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_gnode_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="children">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_children" c:identifier="gxml_gnode_get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_children" invoker="get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="namespaces">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespaces" c:identifier="gxml_gnode_get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespaces" invoker="get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="document">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</property>
		<method name="get_document" c:identifier="gxml_gnode_get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</method>
		<virtual-method name="get_document" invoker="get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</virtual-method>
		<property name="parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_gnode_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
		<property name="type-node">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_type_node" c:identifier="gxml_gnode_get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_type_node" invoker="get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_gnode_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_gnode_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_gnode_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="GNodeClass" c:type="GXmlGNodeClass" glib:is-gtype-struct-for="GNode">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GNode" c:type="GXmlGNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.GNode" c:type="GXmlGNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GNodePrivate" c:type="GXmlGNodePrivate" disguised="1"/>
	<class name="GProcessingInstruction" c:type="GXmlGProcessingInstruction" glib:type-name="GXmlGProcessingInstruction" glib:get-type="gxml_gprocessing_instruction_get_type" glib:type-struct="GProcessingInstructionClass" parent="GXml.GNode">
		<implements name="GXml.ProcessingInstruction"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GProcessingInstructionPrivate" c:type="GXmlGProcessingInstructionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gprocessing_instruction_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GProcessingInstruction" c:type="GXmlGProcessingInstruction*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GProcessingInstructionClass" c:type="GXmlGProcessingInstructionClass" glib:is-gtype-struct-for="GProcessingInstruction">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GProcessingInstructionPrivate" c:type="GXmlGProcessingInstructionPrivate" disguised="1"/>
	<class name="GText" c:type="GXmlGText" glib:type-name="GXmlGText" glib:get-type="gxml_gtext_get_type" glib:type-struct="GTextClass" parent="GXml.GNode">
		<implements name="GXml.Text"/>
		<field name="parent_instance">
			<type name="GXml.GNode" c:type="GXmlGNode"/>
		</field>
		<field name="priv">
			<type name="GTextPrivate" c:type="GXmlGTextPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_gtext_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GText" c:type="GXmlGText*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GTextClass" c:type="GXmlGTextClass" glib:is-gtype-struct-for="GText">
		<field name="parent_class">
			<type name="GXml.GNodeClass" c:type="GXmlGNodeClass"/>
		</field>
	</record>
	<record name="GTextPrivate" c:type="GXmlGTextPrivate" disguised="1"/>
	<class name="GHashMapAttr" c:type="GXmlGHashMapAttr" glib:type-name="GXmlGHashMapAttr" glib:get-type="gxml_ghash_map_attr_get_type" glib:type-struct="GHashMapAttrClass" parent="Gee.AbstractMap">
		<field name="parent_instance">
			<type name="Gee.AbstractMap" c:type="GeeAbstractMap"/>
		</field>
		<field name="priv">
			<type name="GHashMapAttrPrivate" c:type="GXmlGHashMapAttrPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ghash_map_attr_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GHashMapAttr" c:type="GXmlGHashMapAttr*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GHashMapAttrClass" c:type="GXmlGHashMapAttrClass" glib:is-gtype-struct-for="GHashMapAttr">
		<field name="parent_class">
			<type name="Gee.AbstractMapClass" c:type="GeeAbstractMapClass"/>
		</field>
	</record>
	<record name="GHashMapAttrPrivate" c:type="GXmlGHashMapAttrPrivate" disguised="1"/>
	<class name="GHashMapAttrEntry" c:type="GXmlGHashMapAttrEntry" glib:type-name="GXmlGHashMapAttrEntry" glib:get-type="gxml_ghash_map_attr_entry_get_type" glib:type-struct="GHashMapAttrEntryClass" parent="Gee.MapEntry">
		<field name="parent_instance">
			<type name="Gee.MapEntry" c:type="GeeMapEntry"/>
		</field>
		<field name="priv">
			<type name="GHashMapAttrEntryPrivate" c:type="GXmlGHashMapAttrEntryPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ghash_map_attr_entry_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GHashMapAttrEntry" c:type="GXmlGHashMapAttrEntry*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlAttr*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GHashMapAttrEntryClass" c:type="GXmlGHashMapAttrEntryClass" glib:is-gtype-struct-for="Entry">
		<field name="parent_class">
			<type name="Gee.MapEntryClass" c:type="GeeMapEntryClass"/>
		</field>
	</record>
	<record name="GHashMapAttrEntryPrivate" c:type="GXmlGHashMapAttrEntryPrivate" disguised="1"/>
	<class name="GHashMapAttrIterator" c:type="GXmlGHashMapAttrIterator" glib:type-name="GXmlGHashMapAttrIterator" glib:get-type="gxml_ghash_map_attr_iterator_get_type" glib:type-struct="GHashMapAttrIteratorClass" parent="GObject.Object">
		<implements name="Gee.MapIterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GHashMapAttrIteratorPrivate" c:type="GXmlGHashMapAttrIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_ghash_map_attr_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GHashMapAttrIterator" c:type="GXmlGHashMapAttrIterator*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GHashMapAttrIteratorClass" c:type="GXmlGHashMapAttrIteratorClass" glib:is-gtype-struct-for="Iterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GHashMapAttrIteratorPrivate" c:type="GXmlGHashMapAttrIteratorPrivate" disguised="1"/>
	<class name="GListChildren" c:type="GXmlGListChildren" glib:type-name="GXmlGListChildren" glib:get-type="gxml_glist_children_get_type" glib:type-struct="GListChildrenClass" parent="Gee.AbstractBidirList">
		<field name="parent_instance">
			<type name="Gee.AbstractBidirList" c:type="GeeAbstractBidirList"/>
		</field>
		<field name="priv">
			<type name="GListChildrenPrivate" c:type="GXmlGListChildrenPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_children_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListChildren" c:type="GXmlGListChildren*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListChildrenClass" c:type="GXmlGListChildrenClass" glib:is-gtype-struct-for="GListChildren">
		<field name="parent_class">
			<type name="Gee.AbstractBidirListClass" c:type="GeeAbstractBidirListClass"/>
		</field>
	</record>
	<record name="GListChildrenPrivate" c:type="GXmlGListChildrenPrivate" disguised="1"/>
	<class name="GListChildrenIterator" c:type="GXmlGListChildrenIterator" glib:type-name="GXmlGListChildrenIterator" glib:get-type="gxml_glist_children_iterator_get_type" glib:type-struct="GListChildrenIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<implements name="Gee.BidirIterator"/>
		<implements name="Gee.ListIterator"/>
		<implements name="Gee.BidirListIterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GListChildrenIteratorPrivate" c:type="GXmlGListChildrenIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_children_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListChildrenIterator" c:type="GXmlGListChildrenIterator*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListChildrenIteratorClass" c:type="GXmlGListChildrenIteratorClass" glib:is-gtype-struct-for="Iterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GListChildrenIteratorPrivate" c:type="GXmlGListChildrenIteratorPrivate" disguised="1"/>
	<class name="GListNamespaces" c:type="GXmlGListNamespaces" glib:type-name="GXmlGListNamespaces" glib:get-type="gxml_glist_namespaces_get_type" glib:type-struct="GListNamespacesClass" parent="Gee.AbstractList">
		<field name="parent_instance">
			<type name="Gee.AbstractList" c:type="GeeAbstractList"/>
		</field>
		<field name="priv">
			<type name="GListNamespacesPrivate" c:type="GXmlGListNamespacesPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_namespaces_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListNamespaces" c:type="GXmlGListNamespaces*"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.GDocument" c:type="GXmlGDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListNamespacesClass" c:type="GXmlGListNamespacesClass" glib:is-gtype-struct-for="GListNamespaces">
		<field name="parent_class">
			<type name="Gee.AbstractListClass" c:type="GeeAbstractListClass"/>
		</field>
	</record>
	<record name="GListNamespacesPrivate" c:type="GXmlGListNamespacesPrivate" disguised="1"/>
	<class name="GListNamespacesIterator" c:type="GXmlGListNamespacesIterator" glib:type-name="GXmlGListNamespacesIterator" glib:get-type="gxml_glist_namespaces_iterator_get_type" glib:type-struct="GListNamespacesIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<implements name="Gee.ListIterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GListNamespacesIteratorPrivate" c:type="GXmlGListNamespacesIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gxml_glist_namespaces_iterator_new">
			<return-value transfer-ownership="full">
				<type name="GXml.GListNamespacesIterator" c:type="GXmlGListNamespacesIterator*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="xmlNode*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GListNamespacesIteratorClass" c:type="GXmlGListNamespacesIteratorClass" glib:is-gtype-struct-for="Iterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GListNamespacesIteratorPrivate" c:type="GXmlGListNamespacesIteratorPrivate" disguised="1"/>
	<interface name="Attribute" c:type="GXmlAttribute" glib:type-name="GXmlAttribute" glib:get-type="gxml_attribute_get_type" glib:type-struct="AttributeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="namespace" writable="1">
			<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
		</property>
		<method name="get_namespace" c:identifier="gxml_attribute_get_namespace">
			<return-value transfer-ownership="full">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</return-value>
		</method>
		<virtual-method name="get_namespace" invoker="get_namespace">
			<return-value transfer-ownership="full">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</return-value>
		</virtual-method>
		<method name="set_namespace" c:identifier="gxml_attribute_set_namespace">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_attribute_get_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="AttributeIface" c:type="GXmlAttributeIface" glib:is-gtype-struct-for="Attribute">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_namespace">
			<callback name="get_namespace" c:type="get_namespace">
				<return-value transfer-ownership="full">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Comment" c:type="GXmlComment" glib:type-name="GXmlComment" glib:get-type="gxml_comment_get_type" glib:type-struct="CommentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="str">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_comment_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_str" invoker="get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="CommentIface" c:type="GXmlCommentIface" glib:is-gtype-struct-for="Comment">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_str">
			<callback name="get_str" c:type="get_str">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Comment" c:type="GXmlComment*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="CDATA" c:type="GXmlCDATA" glib:type-name="GXmlCDATA" glib:get-type="gxml_cdata_get_type" glib:type-struct="CDATAIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="str">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_cdata_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_str" invoker="get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="CDATAIface" c:type="GXmlCDATAIface" glib:is-gtype-struct-for="CDATA">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_str">
			<callback name="get_str" c:type="get_str">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.CDATA" c:type="GXmlCDATA*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Document" c:type="GXmlDocument" glib:type-name="GXmlDocument" glib:get-type="gxml_document_get_type" glib:type-struct="DocumentIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<method name="create_element" c:identifier="gxml_document_create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_element" invoker="create_element" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_text" c:identifier="gxml_document_create_text">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_text" invoker="create_text">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_comment" c:identifier="gxml_document_create_comment">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_comment" invoker="create_comment">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_cdata" c:identifier="gxml_document_create_cdata">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_cdata" invoker="create_cdata">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="text" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_pi" c:identifier="gxml_document_create_pi">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_pi" invoker="create_pi">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="save" c:identifier="gxml_document_save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save" invoker="save" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="save_as" c:identifier="gxml_document_save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="save_as" invoker="save_as" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" allow-none="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<function name="new_default" c:identifier="gxml_document_new_default">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</function>
		<function name="new_default_for_path" c:identifier="gxml_document_new_default_for_path" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="new_default_for_file" c:identifier="gxml_document_new_default_for_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
			<parameters>
				<parameter name="f" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</function>
		<property name="indent" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_indent" c:identifier="gxml_document_get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_indent" invoker="get_indent">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_indent" c:identifier="gxml_document_set_indent">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_indent" invoker="set_indent">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="ns-top" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_ns_top" c:identifier="gxml_document_get_ns_top">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_ns_top" invoker="get_ns_top">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_ns_top" c:identifier="gxml_document_set_ns_top">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_ns_top" invoker="set_ns_top">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="prefix-default-ns" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_prefix_default_ns" c:identifier="gxml_document_get_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix_default_ns" invoker="get_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_prefix_default_ns" c:identifier="gxml_document_set_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_prefix_default_ns" invoker="set_prefix_default_ns">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="backup" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_backup" c:identifier="gxml_document_get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_backup" invoker="get_backup">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_backup" c:identifier="gxml_document_set_backup">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_backup" invoker="set_backup">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="root">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_root" c:identifier="gxml_document_get_root">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_root" invoker="get_root">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
		<property name="file" writable="1">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_file" c:identifier="gxml_document_get_file">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</method>
		<virtual-method name="get_file" invoker="get_file">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</virtual-method>
		<method name="set_file" c:identifier="gxml_document_set_file">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_file" invoker="set_file">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="DocumentIface" c:type="GXmlDocumentIface" glib:is-gtype-struct-for="Document">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create_element">
			<callback name="create_element" c:type="create_element" throws="1">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_text">
			<callback name="create_text" c:type="create_text">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="text" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_comment">
			<callback name="create_comment" c:type="create_comment">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="text" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_cdata">
			<callback name="create_cdata" c:type="create_cdata">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="text" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_pi">
			<callback name="create_pi" c:type="create_pi">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="target" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="save">
			<callback name="save" c:type="save" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="save_as">
			<callback name="save_as" c:type="save_as" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="f" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" allow-none="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_indent">
			<callback name="get_indent" c:type="get_indent">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_indent">
			<callback name="set_indent" c:type="set_indent">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_ns_top">
			<callback name="get_ns_top" c:type="get_ns_top">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_ns_top">
			<callback name="set_ns_top" c:type="set_ns_top">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix_default_ns">
			<callback name="get_prefix_default_ns" c:type="get_prefix_default_ns">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_prefix_default_ns">
			<callback name="set_prefix_default_ns" c:type="set_prefix_default_ns">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_backup">
			<callback name="get_backup" c:type="get_backup">
				<return-value transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_backup">
			<callback name="set_backup" c:type="set_backup">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_root">
			<callback name="get_root" c:type="get_root">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_file">
			<callback name="get_file" c:type="get_file">
				<return-value transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_file">
			<callback name="set_file" c:type="set_file">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Document" c:type="GXmlDocument*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Gio.File" c:type="GFile*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="DocumentType" c:type="GXmlDocumentType" glib:type-name="GXmlDocumentType" glib:get-type="gxml_document_type_get_type" glib:type-struct="DocumentTypeIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
	</interface>
	<record name="DocumentTypeIface" c:type="GXmlDocumentTypeIface" glib:is-gtype-struct-for="DocumentType">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="Element" c:type="GXmlElement" glib:type-name="GXmlElement" glib:get-type="gxml_element_get_type" glib:type-struct="ElementIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<method name="normalize" c:identifier="gxml_element_normalize">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="normalize" invoker="normalize">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="set_attr" c:identifier="gxml_element_set_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_attr" invoker="set_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_attr" c:identifier="gxml_element_get_attr">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_attr" invoker="get_attr">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_attr" c:identifier="gxml_element_remove_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_attr" invoker="remove_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_ns_attr" c:identifier="gxml_element_set_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="ns" transfer-ownership="none">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_ns_attr" invoker="set_ns_attr">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="ns" transfer-ownership="none">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_ns_attr" c:identifier="gxml_element_get_ns_attr">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_ns_attr" invoker="get_ns_attr">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="tag-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_tag_name" c:identifier="gxml_element_get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_tag_name" invoker="get_tag_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="content" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_content" c:identifier="gxml_element_get_content">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_content" invoker="get_content">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_content" c:identifier="gxml_element_set_content">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_content" invoker="set_content">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="ElementIface" c:type="GXmlElementIface" glib:is-gtype-struct-for="Element">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="normalize">
			<callback name="normalize" c:type="normalize">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_attr">
			<callback name="set_attr" c:type="set_attr">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attr">
			<callback name="get_attr" c:type="get_attr">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_attr">
			<callback name="remove_attr" c:type="remove_attr">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_ns_attr">
			<callback name="set_ns_attr" c:type="set_ns_attr">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="ns" transfer-ownership="none">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_ns_attr">
			<callback name="get_ns_attr" c:type="get_ns_attr">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_tag_name">
			<callback name="get_tag_name" c:type="get_tag_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_content">
			<callback name="get_content" c:type="get_content">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_content">
			<callback name="set_content" c:type="set_content">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Element" c:type="GXmlElement*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Namespace" c:type="GXmlNamespace" glib:type-name="GXmlNamespace" glib:get-type="gxml_namespace_get_type" glib:type-struct="NamespaceIface">
		<prerequisite name="GObject.Object"/>
		<property name="uri">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_uri" c:identifier="gxml_namespace_get_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_uri" invoker="get_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="prefix">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_prefix" c:identifier="gxml_namespace_get_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_prefix" invoker="get_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="NamespaceIface" c:type="GXmlNamespaceIface" glib:is-gtype-struct-for="Namespace">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_uri">
			<callback name="get_uri" c:type="get_uri">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_prefix">
			<callback name="get_prefix" c:type="get_prefix">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Node" c:type="GXmlNode" glib:type-name="GXmlNode" glib:get-type="gxml_node_get_type" glib:type-struct="NodeIface">
		<prerequisite name="GObject.Object"/>
		<method name="get" c:identifier="gxml_node_get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get" invoker="get">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="key" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_elements_by_property_value" c:identifier="gxml_node_get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_elements_by_property_value" invoker="get_elements_by_property_value">
			<return-value transfer-ownership="full">
				<type name="GXml.ElementList" c:type="GXmlElementList*"/>
			</return-value>
			<parameters>
				<parameter name="property" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_node_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_namespace" c:identifier="gxml_node_set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_namespace" invoker="set_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="uri" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="prefix" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="ns_prefix" c:identifier="gxml_node_ns_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="ns_prefix" invoker="ns_prefix">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="ns_uri" c:identifier="gxml_node_ns_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="ns_uri" invoker="ns_uri">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<function name="copy" c:identifier="gxml_node_copy">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="doc" transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</parameter>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="deep" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</function>
		<property name="namespaces">
			<type name="Gee.List" c:type="GeeList*">
				<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
			</type>
		</property>
		<method name="get_namespaces" c:identifier="gxml_node_get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_namespaces" invoker="get_namespaces">
			<return-value transfer-ownership="full">
				<type name="Gee.List" c:type="GeeList*">
					<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="childs" deprecated="" deprecated-version="0.10.0">
			<annotation key="deprecated.replace" value="children"/>
			<annotation key="deprecated.since" value="0.10.0"/>
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_childs" c:identifier="gxml_node_get_childs">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_childs" invoker="get_childs">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="children">
			<type name="Gee.BidirList" c:type="GeeBidirList*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_children" c:identifier="gxml_node_get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_children" invoker="get_children">
			<return-value transfer-ownership="full">
				<type name="Gee.BidirList" c:type="GeeBidirList*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="attrs">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_attrs" c:identifier="gxml_node_get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_attrs" invoker="get_attrs">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="gxml_node_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="gxml_node_get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_value" c:identifier="gxml_node_set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_value" invoker="set_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="type-node">
			<type name="GXml.NodeType" c:type="GXmlNodeType"/>
		</property>
		<method name="get_type_node" c:identifier="gxml_node_get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</method>
		<virtual-method name="get_type_node" invoker="get_type_node">
			<return-value transfer-ownership="none">
				<type name="GXml.NodeType" c:type="GXmlNodeType"/>
			</return-value>
		</virtual-method>
		<property name="document">
			<type name="GXml.Document" c:type="GXmlDocument*"/>
		</property>
		<method name="get_document" c:identifier="gxml_node_get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</method>
		<virtual-method name="get_document" invoker="get_document">
			<return-value transfer-ownership="none">
				<type name="GXml.Document" c:type="GXmlDocument*"/>
			</return-value>
		</virtual-method>
		<property name="parent">
			<type name="GXml.Node" c:type="GXmlNode*"/>
		</property>
		<method name="get_parent" c:identifier="gxml_node_get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</method>
		<virtual-method name="get_parent" invoker="get_parent">
			<return-value transfer-ownership="full">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="NodeIface" c:type="GXmlNodeIface" glib:is-gtype-struct-for="Node">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get">
			<callback name="get" c:type="get">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="key" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_elements_by_property_value">
			<callback name="get_elements_by_property_value" c:type="get_elements_by_property_value">
				<return-value transfer-ownership="full">
					<type name="GXml.ElementList" c:type="GXmlElementList*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="property" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_namespace">
			<callback name="set_namespace" c:type="set_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="uri" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="prefix" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="ns_prefix">
			<callback name="ns_prefix" c:type="ns_prefix">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="ns_uri">
			<callback name="ns_uri" c:type="ns_uri">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_namespaces">
			<callback name="get_namespaces" c:type="get_namespaces">
				<return-value transfer-ownership="full">
					<type name="Gee.List" c:type="GeeList*">
						<type name="GXml.Namespace" c:type="GXmlNamespace*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_childs">
			<callback name="get_childs" c:type="get_childs">
				<return-value transfer-ownership="full">
					<type name="Gee.BidirList" c:type="GeeBidirList*">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_children">
			<callback name="get_children" c:type="get_children">
				<return-value transfer-ownership="full">
					<type name="Gee.BidirList" c:type="GeeBidirList*">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_attrs">
			<callback name="get_attrs" c:type="get_attrs">
				<return-value transfer-ownership="full">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_value">
			<callback name="set_value" c:type="set_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_type_node">
			<callback name="get_type_node" c:type="get_type_node">
				<return-value transfer-ownership="none">
					<type name="GXml.NodeType" c:type="GXmlNodeType"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_document">
			<callback name="get_document" c:type="get_document">
				<return-value transfer-ownership="none">
					<type name="GXml.Document" c:type="GXmlDocument*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_parent">
			<callback name="get_parent" c:type="get_parent">
				<return-value transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Notation" c:type="GXmlNotation" glib:type-name="GXmlNotation" glib:get-type="gxml_notation_get_type" glib:type-struct="NotationIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="public-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_public_id" c:identifier="gxml_notation_get_public_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_public_id" invoker="get_public_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<property name="external-id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_external_id" c:identifier="gxml_notation_get_external_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_external_id" invoker="get_external_id">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="NotationIface" c:type="GXmlNotationIface" glib:is-gtype-struct-for="Notation">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_public_id">
			<callback name="get_public_id" c:type="get_public_id">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Notation" c:type="GXmlNotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_external_id">
			<callback name="get_external_id" c:type="get_external_id">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Notation" c:type="GXmlNotation*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="ProcessingInstruction" c:type="GXmlProcessingInstruction" glib:type-name="GXmlProcessingInstruction" glib:get-type="gxml_processing_instruction_get_type" glib:type-struct="ProcessingInstructionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="target">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_target" c:identifier="gxml_processing_instruction_get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_target" invoker="get_target">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="data">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_data" c:identifier="gxml_processing_instruction_get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_data" invoker="get_data">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="ProcessingInstructionIface" c:type="GXmlProcessingInstructionIface" glib:is-gtype-struct-for="ProcessingInstruction">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_target">
			<callback name="get_target" c:type="get_target">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ProcessingInstruction" c:type="GXmlProcessingInstruction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_data">
			<callback name="get_data" c:type="get_data">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.ProcessingInstruction" c:type="GXmlProcessingInstruction*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Text" c:type="GXmlText" glib:type-name="GXmlText" glib:get-type="gxml_text_get_type" glib:type-struct="TextIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GXml.Node"/>
		<property name="str">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_str" c:identifier="gxml_text_get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_str" invoker="get_str">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="TextIface" c:type="GXmlTextIface" glib:is-gtype-struct-for="Text">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_str">
			<callback name="get_str" c:type="get_str">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Text" c:type="GXmlText*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="NamedNodeMap" c:type="GXmlNamedNodeMap" glib:type-name="GXmlNamedNodeMap" glib:get-type="gxml_named_node_map_get_type" glib:type-struct="NamedNodeMapIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_named_item" c:identifier="gxml_named_node_map_get_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_named_item" invoker="get_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set_named_item" c:identifier="gxml_named_node_map_set_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="item" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_named_item" invoker="set_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="item" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_named_item" c:identifier="gxml_named_node_map_remove_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_named_item" invoker="remove_named_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="item" c:identifier="gxml_named_node_map_item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length">
			<type name="gulong" c:type="gulong"/>
		</property>
		<method name="get_length" c:identifier="gxml_named_node_map_get_length">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gulong"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gulong"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="NamedNodeMapIface" c:type="GXmlNamedNodeMapIface" glib:is-gtype-struct-for="NamedNodeMap">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_named_item">
			<callback name="get_named_item" c:type="get_named_item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.NamedNodeMap" c:type="GXmlNamedNodeMap*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_named_item">
			<callback name="set_named_item" c:type="set_named_item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.NamedNodeMap" c:type="GXmlNamedNodeMap*"/>
					</parameter>
					<parameter name="item" transfer-ownership="none" allow-none="1">
						<type name="gpointer" c:type="gpointer"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_named_item">
			<callback name="remove_named_item" c:type="remove_named_item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.NamedNodeMap" c:type="GXmlNamedNodeMap*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.NamedNodeMap" c:type="GXmlNamedNodeMap*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gulong" c:type="gulong"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.NamedNodeMap" c:type="GXmlNamedNodeMap*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="xNodeList" c:type="GXmlxNodeList" glib:type-name="GXmlxNodeList" glib:get-type="gxml_xnode_list_get_type" glib:type-struct="xNodeListIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.Iterable"/>
		<prerequisite name="Gee.Collection"/>
		<method name="item" c:identifier="gxml_xnode_list_item">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="idx" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="item" invoker="item">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="idx" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="insert_before" c:identifier="gxml_xnode_list_insert_before">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="ref_child" transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="insert_before" invoker="insert_before">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="ref_child" transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="replace_child" c:identifier="gxml_xnode_list_replace_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="replace_child" invoker="replace_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="remove_child" c:identifier="gxml_xnode_list_remove_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="remove_child" invoker="remove_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="old_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="append_child" c:identifier="gxml_xnode_list_append_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="append_child" invoker="append_child">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="new_child" transfer-ownership="none">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="to_string" c:identifier="gxml_xnode_list_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="in_line" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="in_line" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="first" c:identifier="gxml_xnode_list_first">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</method>
		<virtual-method name="first" invoker="first">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</virtual-method>
		<method name="last" c:identifier="gxml_xnode_list_last">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</method>
		<virtual-method name="last" invoker="last">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
		</virtual-method>
		<method name="get" c:identifier="gxml_xnode_list_get">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get" invoker="get">
			<return-value transfer-ownership="full">
				<type name="GXml.xNode" c:type="GXmlxNode*"/>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="length" writable="1">
			<type name="gulong" c:type="gulong"/>
		</property>
		<method name="get_length" c:identifier="gxml_xnode_list_get_length">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gulong"/>
			</return-value>
		</method>
		<virtual-method name="get_length" invoker="get_length">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gulong"/>
			</return-value>
		</virtual-method>
		<method name="set_length" c:identifier="gxml_xnode_list_set_length">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_length" invoker="set_length">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="xNodeListIface" c:type="GXmlxNodeListIface" glib:is-gtype-struct-for="xNodeList">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="item">
			<callback name="item" c:type="item">
				<return-value transfer-ownership="full">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="idx" transfer-ownership="none">
						<type name="gulong" c:type="gulong"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="insert_before">
			<callback name="insert_before" c:type="insert_before">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="new_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="ref_child" transfer-ownership="none" allow-none="1">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="replace_child">
			<callback name="replace_child" c:type="replace_child">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="new_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
					<parameter name="old_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="remove_child">
			<callback name="remove_child" c:type="remove_child">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="old_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="append_child">
			<callback name="append_child" c:type="append_child">
				<return-value transfer-ownership="none" allow-none="1">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="new_child" transfer-ownership="none">
						<type name="GXml.xNode" c:type="GXmlxNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="in_line" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="first">
			<callback name="first" c:type="first">
				<return-value transfer-ownership="full">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="last">
			<callback name="last" c:type="last">
				<return-value transfer-ownership="full">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get">
			<callback name="get" c:type="get">
				<return-value transfer-ownership="full">
					<type name="GXml.xNode" c:type="GXmlxNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="n" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_length">
			<callback name="get_length" c:type="get_length">
				<return-value transfer-ownership="none">
					<type name="gulong" c:type="gulong"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_length">
			<callback name="set_length" c:type="set_length">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.xNodeList" c:type="GXmlxNodeList*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gulong" c:type="gulong"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Serializable" c:type="GXmlSerializable" glib:type-name="GXmlSerializable" glib:get-type="gxml_serializable_get_type" glib:type-struct="SerializableIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_enable_unknown_serializable_property" c:identifier="gxml_serializable_get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="get_enable_unknown_serializable_property" invoker="get_enable_unknown_serializable_property">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="set_default_namespace" c:identifier="gxml_serializable_set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_default_namespace" invoker="set_default_namespace">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_use_xml_node_value" c:identifier="gxml_serializable_serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="serialize_use_xml_node_value" invoker="serialize_use_xml_node_value">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="node_name" c:identifier="gxml_serializable_node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="node_name" invoker="node_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="property_use_nick" c:identifier="gxml_serializable_property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="property_use_nick" invoker="property_use_nick">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="serialize" c:identifier="gxml_serializable_serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize" invoker="serialize" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_property" c:identifier="gxml_serializable_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize" c:identifier="gxml_serializable_deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize" invoker="deserialize" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_property" c:identifier="gxml_serializable_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="find_property_spec" c:identifier="gxml_serializable_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="find_property_spec" invoker="find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_find_property_spec" c:identifier="gxml_serializable_default_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="default_find_property_spec" invoker="default_find_property_spec">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
			</return-value>
			<parameters>
				<parameter name="property_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="list_serializable_properties" c:identifier="gxml_serializable_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="list_serializable_properties" invoker="list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_list_serializable_properties" c:identifier="gxml_serializable_default_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="default_list_serializable_properties" invoker="default_list_serializable_properties">
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<function name="string_to_gvalue" c:identifier="gxml_serializable_string_to_gvalue" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="dest" direction="inout" transfer-ownership="full">
					<type name="GObject.Value" c:type="GValue*"/>
				</parameter>
			</parameters>
		</function>
		<function name="gvalue_to_string" c:identifier="gxml_serializable_gvalue_to_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none">
					<type name="GObject.Value" c:type="GValue"/>
				</parameter>
			</parameters>
		</function>
		<property name="unknown-serializable-properties">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
			</type>
		</property>
		<method name="get_unknown_serializable_properties" c:identifier="gxml_serializable_get_unknown_serializable_properties">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_unknown_serializable_properties" invoker="get_unknown_serializable_properties">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="unknown-serializable-nodes">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</type>
		</property>
		<method name="get_unknown_serializable_nodes" c:identifier="gxml_serializable_get_unknown_serializable_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_unknown_serializable_nodes" invoker="get_unknown_serializable_nodes">
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="serialized-xml-node-value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_serialized_xml_node_value" c:identifier="gxml_serializable_get_serialized_xml_node_value">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_serialized_xml_node_value" invoker="get_serialized_xml_node_value">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_serialized_xml_node_value" c:identifier="gxml_serializable_set_serialized_xml_node_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_serialized_xml_node_value" invoker="set_serialized_xml_node_value">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="serialize_unknown_property">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="node" direction="out" transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode**"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="serialize_unknown_property_type">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="node" direction="out" transfer-ownership="full">
					<type name="GXml.Node" c:type="GXmlNode**"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="deserialize_unknown_property">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="deserialize_unknown_property_type">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="SerializableIface" c:type="GXmlSerializableIface" glib:is-gtype-struct-for="Serializable">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_enable_unknown_serializable_property">
			<callback name="get_enable_unknown_serializable_property" c:type="get_enable_unknown_serializable_property">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_default_namespace">
			<callback name="set_default_namespace" c:type="set_default_namespace">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize_use_xml_node_value">
			<callback name="serialize_use_xml_node_value" c:type="serialize_use_xml_node_value">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="node_name">
			<callback name="node_name" c:type="node_name">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="property_use_nick">
			<callback name="property_use_nick" c:type="property_use_nick">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize">
			<callback name="serialize" c:type="serialize" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="element" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize">
			<callback name="deserialize" c:type="deserialize" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="find_property_spec">
			<callback name="find_property_spec" c:type="find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="default_find_property_spec">
			<callback name="default_find_property_spec" c:type="default_find_property_spec">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="property_name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="list_serializable_properties">
			<callback name="list_serializable_properties" c:type="list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="default_list_serializable_properties">
			<callback name="default_list_serializable_properties" c:type="default_list_serializable_properties">
				<return-value transfer-ownership="full">
					<array length="1">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_unknown_serializable_properties">
			<callback name="get_unknown_serializable_properties" c:type="get_unknown_serializable_properties">
				<return-value transfer-ownership="full">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GXml.Attribute" c:type="GXmlAttribute*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_unknown_serializable_nodes">
			<callback name="get_unknown_serializable_nodes" c:type="get_unknown_serializable_nodes">
				<return-value transfer-ownership="full">
					<type name="Gee.Collection" c:type="GeeCollection*">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_serialized_xml_node_value">
			<callback name="get_serialized_xml_node_value" c:type="get_serialized_xml_node_value">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_serialized_xml_node_value">
			<callback name="set_serialized_xml_node_value" c:type="set_serialized_xml_node_value">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.Serializable" c:type="GXmlSerializable*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableProperty" c:type="GXmlSerializableProperty" glib:type-name="GXmlSerializableProperty" glib:get-type="gxml_serializable_property_get_type" glib:type-struct="SerializablePropertyIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_serializable_property_value" c:identifier="gxml_serializable_property_get_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_serializable_property_value" invoker="get_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_serializable_property_value" c:identifier="gxml_serializable_property_set_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_serializable_property_value" invoker="set_serializable_property_value">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="val" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_property" c:identifier="gxml_serializable_property_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_property" invoker="deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="serialize_property" c:identifier="gxml_serializable_property_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="serialize_property" invoker="serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="default_serializable_property_serialize_property" c:identifier="gxml_serializable_property_default_serializable_property_serialize_property" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="GXml.Node" c:type="GXmlNode*"/>
			</return-value>
			<parameters>
				<parameter name="element" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<method name="default_serializable_property_deserialize_property" c:identifier="gxml_serializable_property_default_serializable_property_deserialize_property" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="property_node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
				<parameter name="prop" transfer-ownership="none">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
				<parameter name="nick" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</interface>
	<record name="SerializablePropertyIface" c:type="GXmlSerializablePropertyIface" glib:is-gtype-struct-for="SerializableProperty">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_serializable_property_value">
			<callback name="get_serializable_property_value" c:type="get_serializable_property_value">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_serializable_property_value">
			<callback name="set_serializable_property_value" c:type="set_serializable_property_value">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none" allow-none="1">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_property">
			<callback name="deserialize_property" c:type="deserialize_property" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
					<parameter name="nick" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="serialize_property">
			<callback name="serialize_property" c:type="serialize_property" throws="1">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableProperty" c:type="GXmlSerializableProperty*"/>
					</parameter>
					<parameter name="property_node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
					<parameter name="prop" transfer-ownership="none">
						<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
					</parameter>
					<parameter name="nick" transfer-ownership="none">
						<type name="gboolean" c:type="gboolean"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableMapKey" c:type="GXmlSerializableMapKey" glib:type-name="GXmlSerializableMapKey" glib:get-type="gxml_serializable_map_key_get_type" glib:type-struct="SerializableMapKeyIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_map_key" c:identifier="gxml_serializable_map_key_get_map_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_map_key" invoker="get_map_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="SerializableMapKeyIface" c:type="GXmlSerializableMapKeyIface" glib:is-gtype-struct-for="SerializableMapKey">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_map_key">
			<callback name="get_map_key" c:type="get_map_key">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableMapKey" c:type="GXmlSerializableMapKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableMapDualKey" c:type="GXmlSerializableMapDualKey" glib:type-name="GXmlSerializableMapDualKey" glib:get-type="gxml_serializable_map_dual_key_get_type" glib:type-struct="SerializableMapDualKeyIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_map_primary_key" c:identifier="gxml_serializable_map_dual_key_get_map_primary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_map_primary_key" invoker="get_map_primary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="get_map_secondary_key" c:identifier="gxml_serializable_map_dual_key_get_map_secondary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_map_secondary_key" invoker="get_map_secondary_key">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="SerializableMapDualKeyIface" c:type="GXmlSerializableMapDualKeyIface" glib:is-gtype-struct-for="SerializableMapDualKey">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_map_primary_key">
			<callback name="get_map_primary_key" c:type="get_map_primary_key">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableMapDualKey" c:type="GXmlSerializableMapDualKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_map_secondary_key">
			<callback name="get_map_secondary_key" c:type="get_map_secondary_key">
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableMapDualKey" c:type="GXmlSerializableMapDualKey*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="SerializableCollection" c:type="GXmlSerializableCollection" glib:type-name="GXmlSerializableCollection" glib:get-type="gxml_serializable_collection_get_type" glib:type-struct="SerializableCollectionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.Traversable"/>
		<prerequisite name="GXml.Serializable"/>
		<method name="deserialize_proceed" c:identifier="gxml_serializable_collection_deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_proceed" invoker="deserialize_proceed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialized" c:identifier="gxml_serializable_collection_deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialized" invoker="deserialized">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="deserialize_node" c:identifier="gxml_serializable_collection_deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="deserialize_node" invoker="deserialize_node" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="node" transfer-ownership="none">
					<type name="GXml.Node" c:type="GXmlNode*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="deserialize_children" c:identifier="gxml_serializable_collection_deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="deserialize_children" invoker="deserialize_children" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="is_collection" c:identifier="gxml_serializable_collection_is_collection">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="is_collection" invoker="is_collection">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="SerializableCollectionIface" c:type="GXmlSerializableCollectionIface" glib:is-gtype-struct-for="SerializableCollection">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="deserialize_proceed">
			<callback name="deserialize_proceed" c:type="deserialize_proceed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialized">
			<callback name="deserialized" c:type="deserialized">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_node">
			<callback name="deserialize_node" c:type="deserialize_node" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
					<parameter name="node" transfer-ownership="none">
						<type name="GXml.Node" c:type="GXmlNode*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="deserialize_children">
			<callback name="deserialize_children" c:type="deserialize_children" throws="1">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="is_collection">
			<callback name="is_collection" c:type="is_collection">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GXml.SerializableCollection" c:type="GXmlSerializableCollection*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<field name="gxml_last_error">
		<type name="GXml.DomException" c:type="GXmlDomException"/>
	</field>
	<function name="warning" c:identifier="gxml_warning" deprecated="Use exeption" deprecated-version="0.8.1">
		<annotation key="deprecated.replacement" value="exeption"/>
		<annotation key="deprecated.since" value="0.8.1"/>
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="ex" transfer-ownership="none">
				<type name="GXml.DomException" c:type="GXmlDomException"/>
			</parameter>
			<parameter name="message" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="exception" c:identifier="gxml_exception">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="ex" transfer-ownership="none">
				<type name="GXml.DomException" c:type="GXmlDomException"/>
			</parameter>
			<parameter name="message" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
</namespace>
</repository>

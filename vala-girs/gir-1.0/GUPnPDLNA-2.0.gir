<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <namespace name="GUPnPDLNA"
             version="2.0"
             shared-library="libgupnp-dlna-2.0.so.3"
             c:identifier-prefixes="GUPnPDLNA"
             c:symbol-prefixes="gupnp_dlna">
    <function-macro name="AUDIO_INFORMATION"
                    c:identifier="GUPNP_DLNA_AUDIO_INFORMATION"
                    introspectable="0">
      <source-position filename="gupnp-dlna-audio-information.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUDIO_INFORMATION_CLASS"
                    c:identifier="GUPNP_DLNA_AUDIO_INFORMATION_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-audio-information.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="AUDIO_INFORMATION_GET_CLASS"
                    c:identifier="GUPNP_DLNA_AUDIO_INFORMATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-audio-information.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="AudioInformation"
           c:symbol-prefix="audio_information"
           c:type="GUPnPDLNAAudioInformation"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GUPnPDLNAAudioInformation"
           glib:get-type="gupnp_dlna_audio_information_get_type"
           glib:type-struct="AudioInformationClass">
      <doc xml:space="preserve"
           filename="gupnp-dlna-audio-information.c"
           line="22">#GUPnPDLNAAudioInformation holds all audio metadatas important for
matching profiles. Note that it does not mean all data should be
provided for every audio file as in some cases it does not make
sense (e.g. WMA version does not make sense for MPEG audio files).

For metadata attributes that do not exist in current audio file an
unset value should be returned. For metadata attributes that do
exist a set value with proper underlying value should be
returned. In case metadata extractor has completely no clue how to
extract some metadata attribute at all, an unsupported value should
be returned. Note that unsupported values should be a temporary
mean before fixing the multimedia framework to be able to extract
such attribute.

Note that gupnp_dlna_audio_information_get_mime() should always
return a set value. Otherwise it is highly probably that the file
will not match against any DLNA profile.</doc>
      <source-position filename="gupnp-dlna-audio-information.h" line="134"/>
      <virtual-method name="get_bitrate"
                      invoker="get_bitrate"
                      introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="98"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="89">A bitrate.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="87">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_channels"
                      invoker="get_channels"
                      introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="101"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="114">A number of channels.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="112">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_depth" invoker="get_depth" introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="104"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="139">A depth.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="137">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_layer" invoker="get_layer" introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="107"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="164">A layer.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="162">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_level" invoker="get_level" introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="110"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="189">A level.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="187">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mime" invoker="get_mime" introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="131"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="365">A MIME type.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="363">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mpeg_audio_version"
                      invoker="get_mpeg_audio_version"
                      introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="113"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="214">An MPEG audio version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="212">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mpeg_version"
                      invoker="get_mpeg_version"
                      introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="116"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="240">An MPEG version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="238">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_profile"
                      invoker="get_profile"
                      introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="119"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="265">A profile.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="263">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_rate" invoker="get_rate" introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="122"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="290">A sample rate.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="288">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_stream_format"
                      invoker="get_stream_format"
                      introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="125"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="315">A stream format.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="313">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_wma_version"
                      invoker="get_wma_version"
                      introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="128"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="340">A WMA version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="338">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_bitrate"
              c:identifier="gupnp_dlna_audio_information_get_bitrate"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="140"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="89">A bitrate.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="87">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_channels"
              c:identifier="gupnp_dlna_audio_information_get_channels"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="143"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="114">A number of channels.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="112">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_depth"
              c:identifier="gupnp_dlna_audio_information_get_depth"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="146"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="139">A depth.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="137">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_layer"
              c:identifier="gupnp_dlna_audio_information_get_layer"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="149"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="164">A layer.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="162">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_level"
              c:identifier="gupnp_dlna_audio_information_get_level"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="152"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="189">A level.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="187">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime"
              c:identifier="gupnp_dlna_audio_information_get_mime"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="175"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="365">A MIME type.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="363">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mpeg_audio_version"
              c:identifier="gupnp_dlna_audio_information_get_mpeg_audio_version"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="155"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="214">An MPEG audio version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="212">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mpeg_version"
              c:identifier="gupnp_dlna_audio_information_get_mpeg_version"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="159"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="240">An MPEG version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="238">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_profile"
              c:identifier="gupnp_dlna_audio_information_get_profile"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="162"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="265">A profile.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="263">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_rate"
              c:identifier="gupnp_dlna_audio_information_get_rate"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="165"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="290">A sample rate.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="288">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stream_format"
              c:identifier="gupnp_dlna_audio_information_get_stream_format"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="168"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="315">A stream format.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="313">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_wma_version"
              c:identifier="gupnp_dlna_audio_information_get_wma_version"
              introspectable="0">
        <source-position filename="gupnp-dlna-audio-information.h" line="172"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-audio-information.c"
               line="340">A WMA version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="338">A #GUPnPDLNAAudioInformation object.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="AudioInformationPrivate"
              c:type="GUPnPDLNAAudioInformationPrivate*"/>
      </field>
    </class>
    <record name="AudioInformationClass"
            c:type="GUPnPDLNAAudioInformationClass"
            glib:is-gtype-struct-for="AudioInformation">
      <source-position filename="gupnp-dlna-audio-information.h" line="134"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="gupnp-dlna-audio-information.h"
             line="67">Parent class.</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_bitrate" introspectable="0">
        <callback name="get_bitrate" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="98"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="89">A bitrate.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="87">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_channels" introspectable="0">
        <callback name="get_channels" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="101"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="114">A number of channels.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="112">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_depth" introspectable="0">
        <callback name="get_depth" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="104"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="139">A depth.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="137">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_layer" introspectable="0">
        <callback name="get_layer" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="107"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="164">A layer.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="162">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_level" introspectable="0">
        <callback name="get_level" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="110"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="189">A level.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="187">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mpeg_audio_version" introspectable="0">
        <callback name="get_mpeg_audio_version" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="113"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="214">An MPEG audio version.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="212">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mpeg_version" introspectable="0">
        <callback name="get_mpeg_version" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="116"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="240">An MPEG version.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="238">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_profile" introspectable="0">
        <callback name="get_profile" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="119"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="265">A profile.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="263">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_rate" introspectable="0">
        <callback name="get_rate" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="122"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="290">A sample rate.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="288">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_stream_format" introspectable="0">
        <callback name="get_stream_format" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="125"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="315">A stream format.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="313">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_wma_version" introspectable="0">
        <callback name="get_wma_version" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="128"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="340">A WMA version.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="338">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mime" introspectable="0">
        <callback name="get_mime" introspectable="0">
          <source-position filename="gupnp-dlna-audio-information.h"
                           line="131"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-audio-information.c"
                 line="365">A MIME type.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-audio-information.c"
                   line="363">A #GUPnPDLNAAudioInformation object.</doc>
              <type name="AudioInformation"
                    c:type="GUPnPDLNAAudioInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved">
        <doc xml:space="preserve"
             filename="gupnp-dlna-audio-information.h"
             line="92">Padding. Ignore it.</doc>
        <array zero-terminated="0" fixed-size="12">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="AudioInformationPrivate"
            c:type="GUPnPDLNAAudioInformationPrivate"
            disguised="1">
      <source-position filename="gupnp-dlna-audio-information.h" line="57"/>
    </record>
    <record name="BoolValue" c:type="GUPnPDLNABoolValue">
      <doc xml:space="preserve"
           filename="gupnp-dlna-values.h"
           line="69">GUPnP DLNA Value representing a boolean value of some metadata attribute.</doc>
      <source-position filename="gupnp-dlna-values.h" line="79"/>
      <field name="value" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="71">The boolean value.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="state" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="72">The state of #GUPnPDLNABoolValue.</doc>
        <type name="ValueState" c:type="GUPnPDLNAValueState"/>
      </field>
    </record>
    <function-macro name="CONTAINER_INFORMATION"
                    c:identifier="GUPNP_DLNA_CONTAINER_INFORMATION"
                    introspectable="0">
      <source-position filename="gupnp-dlna-container-information.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONTAINER_INFORMATION_CLASS"
                    c:identifier="GUPNP_DLNA_CONTAINER_INFORMATION_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-container-information.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONTAINER_INFORMATION_GET_CLASS"
                    c:identifier="GUPNP_DLNA_CONTAINER_INFORMATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-container-information.h"
                       line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ContainerInformation"
           c:symbol-prefix="container_information"
           c:type="GUPnPDLNAContainerInformation"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GUPnPDLNAContainerInformation"
           glib:get-type="gupnp_dlna_container_information_get_type"
           glib:type-struct="ContainerInformationClass">
      <doc xml:space="preserve"
           filename="gupnp-dlna-container-information.c"
           line="22">#GUPnPDLNAContainerInformation holds all container metadatas
important for matching profiles. Note that it does not mean all
data should be provided for every media file as in some cases it
does not make sense (e.g. MPEG version does not make sense for WMA
media files).

For metadata attributes that do not exist in current media file an
unset value should be returned. For metadata attributes that do
exist a set value with proper underlying value should be
returned. In case metadata extractor has completely no clue how to
extract some metadata attribute at all, an unsupported value should
be returned. Note that unsupported values should be a temporary
mean before fixing the multimedia framework to be able to extract
such attribute.

Note that gupnp_dlna_container_information_get_mime() should always
return a set value. Otherwise it is highly probably that the file
will not match against any DLNA profile.</doc>
      <source-position filename="gupnp-dlna-container-information.h"
                       line="104"/>
      <virtual-method name="get_mime" invoker="get_mime" introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="101"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="214">A MIME type.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="212">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mpeg_version"
                      invoker="get_mpeg_version"
                      introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="86"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="84">An MPEG version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="82">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_packet_size"
                      invoker="get_packet_size"
                      introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="89"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="110">A packet size.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="108">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_profile"
                      invoker="get_profile"
                      introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="92"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="136">A profile.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="134">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_variant"
                      invoker="get_variant"
                      introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="98"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="188">A variant.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="186">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_system_stream"
                      invoker="is_system_stream"
                      introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="95"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="162">Whether it is system stream.</doc>
          <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="160">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_mime"
              c:identifier="gupnp_dlna_container_information_get_mime"
              introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="130"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="214">A MIME type.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="212">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mpeg_version"
              c:identifier="gupnp_dlna_container_information_get_mpeg_version"
              introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="110"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="84">An MPEG version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="82">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_packet_size"
              c:identifier="gupnp_dlna_container_information_get_packet_size"
              introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="114"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="110">A packet size.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="108">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_profile"
              c:identifier="gupnp_dlna_container_information_get_profile"
              introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="118"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="136">A profile.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="134">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_variant"
              c:identifier="gupnp_dlna_container_information_get_variant"
              introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="126"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="188">A variant.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="186">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_system_stream"
              c:identifier="gupnp_dlna_container_information_is_system_stream"
              introspectable="0">
        <source-position filename="gupnp-dlna-container-information.h"
                         line="122"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-container-information.c"
               line="162">Whether it is system stream.</doc>
          <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="160">A #GUPnPDLNAContainerInformation object.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ContainerInformationPrivate"
              c:type="GUPnPDLNAContainerInformationPrivate*"/>
      </field>
    </class>
    <record name="ContainerInformationClass"
            c:type="GUPnPDLNAContainerInformationClass"
            glib:is-gtype-struct-for="ContainerInformation">
      <source-position filename="gupnp-dlna-container-information.h"
                       line="104"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="gupnp-dlna-container-information.h"
             line="67">Parent class.</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_mpeg_version" introspectable="0">
        <callback name="get_mpeg_version" introspectable="0">
          <source-position filename="gupnp-dlna-container-information.h"
                           line="86"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="84">An MPEG version.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-container-information.c"
                   line="82">A #GUPnPDLNAContainerInformation object.</doc>
              <type name="ContainerInformation"
                    c:type="GUPnPDLNAContainerInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_packet_size" introspectable="0">
        <callback name="get_packet_size" introspectable="0">
          <source-position filename="gupnp-dlna-container-information.h"
                           line="89"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="110">A packet size.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-container-information.c"
                   line="108">A #GUPnPDLNAContainerInformation object.</doc>
              <type name="ContainerInformation"
                    c:type="GUPnPDLNAContainerInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_profile" introspectable="0">
        <callback name="get_profile" introspectable="0">
          <source-position filename="gupnp-dlna-container-information.h"
                           line="92"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="136">A profile.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-container-information.c"
                   line="134">A #GUPnPDLNAContainerInformation object.</doc>
              <type name="ContainerInformation"
                    c:type="GUPnPDLNAContainerInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_system_stream" introspectable="0">
        <callback name="is_system_stream" introspectable="0">
          <source-position filename="gupnp-dlna-container-information.h"
                           line="95"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="162">Whether it is system stream.</doc>
            <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-container-information.c"
                   line="160">A #GUPnPDLNAContainerInformation object.</doc>
              <type name="ContainerInformation"
                    c:type="GUPnPDLNAContainerInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_variant" introspectable="0">
        <callback name="get_variant" introspectable="0">
          <source-position filename="gupnp-dlna-container-information.h"
                           line="98"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="188">A variant.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-container-information.c"
                   line="186">A #GUPnPDLNAContainerInformation object.</doc>
              <type name="ContainerInformation"
                    c:type="GUPnPDLNAContainerInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mime" introspectable="0">
        <callback name="get_mime" introspectable="0">
          <source-position filename="gupnp-dlna-container-information.h"
                           line="101"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-container-information.c"
                 line="214">A MIME type.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-container-information.c"
                   line="212">A #GUPnPDLNAContainerInformation object.</doc>
              <type name="ContainerInformation"
                    c:type="GUPnPDLNAContainerInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved">
        <doc xml:space="preserve"
             filename="gupnp-dlna-container-information.h"
             line="80">Padding. Ignore it.</doc>
        <array zero-terminated="0" fixed-size="12">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="ContainerInformationPrivate"
            c:type="GUPnPDLNAContainerInformationPrivate"
            disguised="1">
      <source-position filename="gupnp-dlna-container-information.h"
                       line="57"/>
    </record>
    <function-macro name="FRACTION"
                    c:identifier="GUPNP_DLNA_FRACTION"
                    introspectable="0">
      <source-position filename="gupnp-dlna-g-values.h" line="34"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FRACTION_RANGE"
                    c:identifier="GUPNP_DLNA_FRACTION_RANGE"
                    introspectable="0">
      <source-position filename="gupnp-dlna-g-values.h" line="37"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <record name="Fraction"
            c:type="GUPnPDLNAFraction"
            glib:type-name="GUPnPDLNAFraction"
            glib:get-type="gupnp_dlna_fraction_get_type"
            c:symbol-prefix="fraction">
      <source-position filename="gupnp-dlna-g-values.h" line="30"/>
      <method name="copy" c:identifier="gupnp_dlna_fraction_copy">
        <source-position filename="gupnp-dlna-g-values.h" line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="74">A copy of @fraction.</doc>
          <type name="Fraction" c:type="GUPnPDLNAFraction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="fraction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="72">A fraction to copy.</doc>
            <type name="Fraction" c:type="GUPnPDLNAFraction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gupnp_dlna_fraction_free">
        <doc xml:space="preserve"
             filename="gupnp-dlna-g-values.c"
             line="91">Frees @fraction.</doc>
        <source-position filename="gupnp-dlna-g-values.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="fraction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="93">A fraction to free.</doc>
            <type name="Fraction" c:type="GUPnPDLNAFraction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_denominator"
              c:identifier="gupnp_dlna_fraction_get_denominator">
        <source-position filename="gupnp-dlna-g-values.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="124">@fraction's denominator.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="fraction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="122">A fraction.</doc>
            <type name="Fraction" c:type="GUPnPDLNAFraction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_numerator"
              c:identifier="gupnp_dlna_fraction_get_numerator">
        <source-position filename="gupnp-dlna-g-values.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="110">@fraction's numerator.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="fraction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="108">A fraction.</doc>
            <type name="Fraction" c:type="GUPnPDLNAFraction*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="FractionRange"
            c:type="GUPnPDLNAFractionRange"
            glib:type-name="GUPnPDLNAFractionRange"
            glib:get-type="gupnp_dlna_fraction_range_get_type"
            c:symbol-prefix="fraction_range">
      <source-position filename="gupnp-dlna-g-values.h" line="31"/>
      <method name="copy" c:identifier="gupnp_dlna_fraction_range_copy">
        <source-position filename="gupnp-dlna-g-values.h" line="86"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="138">A copy of @range.</doc>
          <type name="FractionRange" c:type="GUPnPDLNAFractionRange*"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="136">A range to copy.</doc>
            <type name="FractionRange" c:type="GUPnPDLNAFractionRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gupnp_dlna_fraction_range_free">
        <doc xml:space="preserve"
             filename="gupnp-dlna-g-values.c"
             line="151">Frees @range.</doc>
        <source-position filename="gupnp-dlna-g-values.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="153">A range to free.</doc>
            <type name="FractionRange" c:type="GUPnPDLNAFractionRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max" c:identifier="gupnp_dlna_fraction_range_get_max">
        <source-position filename="gupnp-dlna-g-values.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="186">Maximum value of @range.</doc>
          <type name="Fraction" c:type="GUPnPDLNAFraction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="184">A range.</doc>
            <type name="FractionRange" c:type="GUPnPDLNAFractionRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min" c:identifier="gupnp_dlna_fraction_range_get_min">
        <source-position filename="gupnp-dlna-g-values.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="172">Minimum value of @range.</doc>
          <type name="Fraction" c:type="GUPnPDLNAFraction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="170">A range.</doc>
            <type name="FractionRange" c:type="GUPnPDLNAFractionRange*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="FractionValue" c:type="GUPnPDLNAFractionValue">
      <doc xml:space="preserve"
           filename="gupnp-dlna-values.h"
           line="118">GUPnP DLNA Value representing a fraction value of some metadata attribute.</doc>
      <source-position filename="gupnp-dlna-values.h" line="130"/>
      <field name="numerator" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="120">The numerator of fraction.</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="denominator" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="121">The denominator of fraction.</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="state" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="122">The state of #GUPnPDLNAFractionValue.</doc>
        <type name="ValueState" c:type="GUPnPDLNAValueState"/>
      </field>
    </record>
    <function-macro name="IMAGE_INFORMATION"
                    c:identifier="GUPNP_DLNA_IMAGE_INFORMATION"
                    introspectable="0">
      <source-position filename="gupnp-dlna-image-information.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IMAGE_INFORMATION_CLASS"
                    c:identifier="GUPNP_DLNA_IMAGE_INFORMATION_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-image-information.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IMAGE_INFORMATION_GET_CLASS"
                    c:identifier="GUPNP_DLNA_IMAGE_INFORMATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-image-information.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INFORMATION"
                    c:identifier="GUPNP_DLNA_INFORMATION"
                    introspectable="0">
      <source-position filename="gupnp-dlna-information.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INFORMATION_CLASS"
                    c:identifier="GUPNP_DLNA_INFORMATION_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-information.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INFORMATION_GET_CLASS"
                    c:identifier="GUPNP_DLNA_INFORMATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-information.h" line="53"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INT_RANGE"
                    c:identifier="GUPNP_DLNA_INT_RANGE"
                    introspectable="0">
      <source-position filename="gupnp-dlna-g-values.h" line="40"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ImageInformation"
           c:symbol-prefix="image_information"
           c:type="GUPnPDLNAImageInformation"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GUPnPDLNAImageInformation"
           glib:get-type="gupnp_dlna_image_information_get_type"
           glib:type-struct="ImageInformationClass">
      <doc xml:space="preserve"
           filename="gupnp-dlna-image-information.c"
           line="22">#GUPnPDLNAImageInformation holds all image metadatas important for
matching profiles. Note that it does not mean all data should be
provided for every image file as in some cases it does not make
sense.

For metadata attributes that do not exist in current image file an
unset value should be returned. For metadata attributes that do
exist a set value with proper underlying value should be
returned. In case metadata extractor has completely no clue how to
extract some metadata attribute at all, an unsupported value should
be returned. Note that unsupported values should be a temporary
mean before fixing the multimedia framework to be able to extract
such attribute.

Note that gupnp_dlna_image_information_get_mime() should always
return a set value. Otherwise it is highly probably that the file
will not match against any DLNA profile.</doc>
      <source-position filename="gupnp-dlna-image-information.h" line="94"/>
      <virtual-method name="get_depth" invoker="get_depth" introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="82"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="81">A depth of an image.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="79">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_height"
                      invoker="get_height"
                      introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="85"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="106">A height of an image.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="104">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mime" invoker="get_mime" introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="91"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="156">A MIME type of an image.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="154">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_width" invoker="get_width" introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="88"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="131">A width of an image.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="129">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_depth"
              c:identifier="gupnp_dlna_image_information_get_depth"
              introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="100"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="81">A depth of an image.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="79">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gupnp_dlna_image_information_get_height"
              introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="103"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="106">A height of an image.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="104">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime"
              c:identifier="gupnp_dlna_image_information_get_mime"
              introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="109"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="156">A MIME type of an image.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="154">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gupnp_dlna_image_information_get_width"
              introspectable="0">
        <source-position filename="gupnp-dlna-image-information.h" line="106"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-image-information.c"
               line="131">A width of an image.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="129">A #GUPnPDLNAImageInformation object.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ImageInformationPrivate"
              c:type="GUPnPDLNAImageInformationPrivate*"/>
      </field>
    </class>
    <record name="ImageInformationClass"
            c:type="GUPnPDLNAImageInformationClass"
            glib:is-gtype-struct-for="ImageInformation">
      <source-position filename="gupnp-dlna-image-information.h" line="94"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="gupnp-dlna-image-information.h"
             line="67">Parent class.</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_depth" introspectable="0">
        <callback name="get_depth" introspectable="0">
          <source-position filename="gupnp-dlna-image-information.h"
                           line="82"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="81">A depth of an image.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-image-information.c"
                   line="79">A #GUPnPDLNAImageInformation object.</doc>
              <type name="ImageInformation"
                    c:type="GUPnPDLNAImageInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_height" introspectable="0">
        <callback name="get_height" introspectable="0">
          <source-position filename="gupnp-dlna-image-information.h"
                           line="85"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="106">A height of an image.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-image-information.c"
                   line="104">A #GUPnPDLNAImageInformation object.</doc>
              <type name="ImageInformation"
                    c:type="GUPnPDLNAImageInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_width" introspectable="0">
        <callback name="get_width" introspectable="0">
          <source-position filename="gupnp-dlna-image-information.h"
                           line="88"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="131">A width of an image.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-image-information.c"
                   line="129">A #GUPnPDLNAImageInformation object.</doc>
              <type name="ImageInformation"
                    c:type="GUPnPDLNAImageInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mime" introspectable="0">
        <callback name="get_mime" introspectable="0">
          <source-position filename="gupnp-dlna-image-information.h"
                           line="91"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-image-information.c"
                 line="156">A MIME type of an image.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-image-information.c"
                   line="154">A #GUPnPDLNAImageInformation object.</doc>
              <type name="ImageInformation"
                    c:type="GUPnPDLNAImageInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved">
        <doc xml:space="preserve"
             filename="gupnp-dlna-image-information.h"
             line="76">Padding. Ignore it.</doc>
        <array zero-terminated="0" fixed-size="12">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="ImageInformationPrivate"
            c:type="GUPnPDLNAImageInformationPrivate"
            disguised="1">
      <source-position filename="gupnp-dlna-image-information.h" line="57"/>
    </record>
    <class name="Information"
           c:symbol-prefix="information"
           c:type="GUPnPDLNAInformation"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GUPnPDLNAInformation"
           glib:get-type="gupnp_dlna_information_get_type"
           glib:type-struct="InformationClass">
      <doc xml:space="preserve"
           filename="gupnp-dlna-information.c"
           line="22">Subclasses of #GUPnPDLNAInformation should override all virtual
functions provided by this class. The overrides should return a
subclasses of specific information base classes.

When instantiating a subclass of #GUPnPDLNAInformation make sure
that "uri" with a URI to media file is passed to g_object_new().</doc>
      <source-position filename="gupnp-dlna-information.h" line="100"/>
      <virtual-method name="get_audio_information"
                      invoker="get_audio_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="256">Get an audio information of media file if applicable (e.g. for
video and audio files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="263">A #GUPnPDLNAAudioInformation object or %NULL.</doc>
          <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="258">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_container_information"
                      invoker="get_container_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="291">Get an container information of media file if applicable (e.g. for
video and audio files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="298">A #GUPnPDLNAContainerInformation object or %NULL.</doc>
          <type name="ContainerInformation"
                c:type="GUPnPDLNAContainerInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="293">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_image_information"
                      invoker="get_image_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="328">Get an container information of media file if applicable (e.g. for
image files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="335">A #GUPnPDLNAImageInformation object or %NULL.</doc>
          <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="330">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_profile_name" invoker="get_profile_name">
        <source-position filename="gupnp-dlna-information.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="402">The name of a DLNA profile or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="400">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_video_information"
                      invoker="get_video_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="363">Get an container information of media file if applicable (e.g. for
video files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="370">A #GUPnPDLNAVideoInformation object or %NULL.</doc>
          <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="365">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_audio_information"
              c:identifier="gupnp_dlna_information_get_audio_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="256">Get an audio information of media file if applicable (e.g. for
video and audio files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="263">A #GUPnPDLNAAudioInformation object or %NULL.</doc>
          <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="258">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_container_information"
              c:identifier="gupnp_dlna_information_get_container_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="291">Get an container information of media file if applicable (e.g. for
video and audio files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="298">A #GUPnPDLNAContainerInformation object or %NULL.</doc>
          <type name="ContainerInformation"
                c:type="GUPnPDLNAContainerInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="293">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_information"
              c:identifier="gupnp_dlna_information_get_image_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="328">Get an container information of media file if applicable (e.g. for
image files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="335">A #GUPnPDLNAImageInformation object or %NULL.</doc>
          <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="330">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_profile_name"
              c:identifier="gupnp_dlna_information_get_profile_name">
        <source-position filename="gupnp-dlna-information.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="402">The name of a DLNA profile or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="400">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri" c:identifier="gupnp_dlna_information_get_uri">
        <source-position filename="gupnp-dlna-information.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="417">An URI of a file.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="415">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_video_information"
              c:identifier="gupnp_dlna_information_get_video_information">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="363">Get an container information of media file if applicable (e.g. for
video files).</doc>
        <source-position filename="gupnp-dlna-information.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-information.c"
               line="370">A #GUPnPDLNAVideoInformation object or %NULL.</doc>
          <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="365">A #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="audio-information" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="187">Audio information of a file.</doc>
        <type name="AudioInformation"/>
      </property>
      <property name="container-information" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="199">Container information of a file.</doc>
        <type name="ContainerInformation"/>
      </property>
      <property name="image-information" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="213">Image information of a file.</doc>
        <type name="ImageInformation"/>
      </property>
      <property name="uri"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="173">URI of file which metadata this object stores.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="video-information" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.c"
             line="225">Video information of a file.</doc>
        <type name="VideoInformation"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="InformationPrivate" c:type="GUPnPDLNAInformationPrivate*"/>
      </field>
    </class>
    <record name="InformationClass"
            c:type="GUPnPDLNAInformationClass"
            glib:is-gtype-struct-for="Information">
      <source-position filename="gupnp-dlna-information.h" line="100"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.h"
             line="68">Parent class.</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_audio_information">
        <callback name="get_audio_information">
          <source-position filename="gupnp-dlna-information.h" line="85"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="263">A #GUPnPDLNAAudioInformation object or %NULL.</doc>
            <type name="AudioInformation" c:type="GUPnPDLNAAudioInformation*"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-information.c"
                   line="258">A #GUPnPDLNAInformation object.</doc>
              <type name="Information" c:type="GUPnPDLNAInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_container_information">
        <callback name="get_container_information">
          <source-position filename="gupnp-dlna-information.h" line="88"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="298">A #GUPnPDLNAContainerInformation object or %NULL.</doc>
            <type name="ContainerInformation"
                  c:type="GUPnPDLNAContainerInformation*"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-information.c"
                   line="293">A #GUPnPDLNAInformation object.</doc>
              <type name="Information" c:type="GUPnPDLNAInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_image_information">
        <callback name="get_image_information">
          <source-position filename="gupnp-dlna-information.h" line="91"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="335">A #GUPnPDLNAImageInformation object or %NULL.</doc>
            <type name="ImageInformation" c:type="GUPnPDLNAImageInformation*"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-information.c"
                   line="330">A #GUPnPDLNAInformation object.</doc>
              <type name="Information" c:type="GUPnPDLNAInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_video_information">
        <callback name="get_video_information">
          <source-position filename="gupnp-dlna-information.h" line="94"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="370">A #GUPnPDLNAVideoInformation object or %NULL.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-information.c"
                   line="365">A #GUPnPDLNAInformation object.</doc>
              <type name="Information" c:type="GUPnPDLNAInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_profile_name">
        <callback name="get_profile_name">
          <source-position filename="gupnp-dlna-information.h" line="97"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-information.c"
                 line="402">The name of a DLNA profile or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-information.c"
                   line="400">A #GUPnPDLNAInformation object.</doc>
              <type name="Information" c:type="GUPnPDLNAInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved">
        <doc xml:space="preserve"
             filename="gupnp-dlna-information.h"
             line="79">Padding. Ignore it.</doc>
        <array zero-terminated="0" fixed-size="11">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="InformationPrivate"
            c:type="GUPnPDLNAInformationPrivate"
            disguised="1">
      <source-position filename="gupnp-dlna-information.h" line="58"/>
    </record>
    <record name="IntRange"
            c:type="GUPnPDLNAIntRange"
            glib:type-name="GUPnPDLNAIntRange"
            glib:get-type="gupnp_dlna_int_range_get_type"
            c:symbol-prefix="int_range">
      <source-position filename="gupnp-dlna-g-values.h" line="32"/>
      <method name="copy" c:identifier="gupnp_dlna_int_range_copy">
        <source-position filename="gupnp-dlna-g-values.h" line="98"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="200">A copy of @range.</doc>
          <type name="IntRange" c:type="GUPnPDLNAIntRange*"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="198">A range to copy.</doc>
            <type name="IntRange" c:type="GUPnPDLNAIntRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gupnp_dlna_int_range_free">
        <doc xml:space="preserve"
             filename="gupnp-dlna-g-values.c"
             line="211">Frees @range.</doc>
        <source-position filename="gupnp-dlna-g-values.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="213">A range to free.</doc>
            <type name="IntRange" c:type="GUPnPDLNAIntRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max" c:identifier="gupnp_dlna_int_range_get_max">
        <source-position filename="gupnp-dlna-g-values.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="244">Maximum value of @range.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="242">A range.</doc>
            <type name="IntRange" c:type="GUPnPDLNAIntRange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min" c:identifier="gupnp_dlna_int_range_get_min">
        <source-position filename="gupnp-dlna-g-values.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-g-values.c"
               line="230">Minimum value of @range.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-g-values.c"
                 line="228">A range.</doc>
            <type name="IntRange" c:type="GUPnPDLNAIntRange*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="IntValue" c:type="GUPnPDLNAIntValue">
      <doc xml:space="preserve"
           filename="gupnp-dlna-values.h"
           line="169">GUPnP DLNA Value representing an integer value of some metadata attribute.</doc>
      <source-position filename="gupnp-dlna-values.h" line="179"/>
      <field name="value" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="171">The integer value.</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="state" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="172">The state of #GUPnPDLNAIntValue.</doc>
        <type name="ValueState" c:type="GUPnPDLNAValueState"/>
      </field>
    </record>
    <function-macro name="PROFILE"
                    c:identifier="GUPNP_DLNA_PROFILE"
                    introspectable="0">
      <source-position filename="gupnp-dlna-profile.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROFILE_CLASS"
                    c:identifier="GUPNP_DLNA_PROFILE_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-profile.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROFILE_GET_CLASS"
                    c:identifier="GUPNP_DLNA_PROFILE_GET_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-profile.h" line="52"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROFILE_GUESSER"
                    c:identifier="GUPNP_DLNA_PROFILE_GUESSER"
                    introspectable="0">
      <source-position filename="gupnp-dlna-profile-guesser.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROFILE_GUESSER_CLASS"
                    c:identifier="GUPNP_DLNA_PROFILE_GUESSER_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-profile-guesser.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROFILE_GUESSER_GET_CLASS"
                    c:identifier="GUPNP_DLNA_PROFILE_GUESSER_GET_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-profile-guesser.h" line="53"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Profile"
           c:symbol-prefix="profile"
           c:type="GUPnPDLNAProfile"
           parent="GObject.Object"
           glib:type-name="GUPnPDLNAProfile"
           glib:get-type="gupnp_dlna_profile_get_type"
           glib:type-struct="ProfileClass">
      <doc xml:space="preserve"
           filename="gupnp-dlna-profile.c"
           line="27">The #GUPnPDLNAProfileGuesser object provides a few APIs that return
#GUPnPDLNAProfile objects. These represent a single DLNA
profile. Each #GUPnPDLNAProfile has a name (the name of the DLNA
profile) and the corresponding MIME type.

Public representation of the various audio/container/image/video
restrictions specified for that DLNA profile is to be added.</doc>
      <source-position filename="gupnp-dlna-profile.h" line="77"/>
      <method name="get_audio_restrictions"
              c:identifier="gupnp_dlna_profile_get_audio_restrictions">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.c"
             line="329">Gets a list of audio restrictions.</doc>
        <source-position filename="gupnp-dlna-profile.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile.c"
               line="335">Audio
restrictions. Do not modify.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Restriction"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile.c"
                 line="331">A profile.</doc>
            <type name="Profile" c:type="GUPnPDLNAProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_container_restrictions"
              c:identifier="gupnp_dlna_profile_get_container_restrictions">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.c"
             line="346">Gets a list of container restrictions.</doc>
        <source-position filename="gupnp-dlna-profile.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile.c"
               line="352">
Container restrictions. Do not modify.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Restriction"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile.c"
                 line="348">A profile.</doc>
            <type name="Profile" c:type="GUPnPDLNAProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_extended"
              c:identifier="gupnp_dlna_profile_get_extended">
        <source-position filename="gupnp-dlna-profile.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile.c"
               line="319">%TRUE if @profile is extended one and %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile.c"
                 line="317">The #GUPnPDLNAProfile object.</doc>
            <type name="Profile" c:type="GUPnPDLNAProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_restrictions"
              c:identifier="gupnp_dlna_profile_get_image_restrictions">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.c"
             line="363">Gets a list of image restrictions.</doc>
        <source-position filename="gupnp-dlna-profile.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile.c"
               line="369">Image
restrictions. Do not modify.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Restriction"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile.c"
                 line="365">A profile.</doc>
            <type name="Profile" c:type="GUPnPDLNAProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime" c:identifier="gupnp_dlna_profile_get_mime">
        <source-position filename="gupnp-dlna-profile.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile.c"
               line="305">The DLNA MIME type of the DLNA profile represented by @profile.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile.c"
                 line="303">The #GUPnPDLNAProfile object.</doc>
            <type name="Profile" c:type="GUPnPDLNAProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="gupnp_dlna_profile_get_name">
        <source-position filename="gupnp-dlna-profile.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile.c"
               line="291">The name of the DLNA profile represented by @profile.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile.c"
                 line="289">The #GUPnPDLNAProfile object.</doc>
            <type name="Profile" c:type="GUPnPDLNAProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_video_restrictions"
              c:identifier="gupnp_dlna_profile_get_video_restrictions">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.c"
             line="380">Gets a list of video restrictions.</doc>
        <source-position filename="gupnp-dlna-profile.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile.c"
               line="386">Video
restrictions. Do not modify.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Restriction"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile.c"
                 line="382">A profile.</doc>
            <type name="Profile" c:type="GUPnPDLNAProfile*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="audio-restrictions"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="container-restrictions"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="extended"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.c"
             line="221">Whether the DLNA profile is not a part of DLNA specification.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="image-restrictions"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="mime"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.c"
             line="208">MIME type of the DLNA profile.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.c"
             line="195">Name of the DLNA profile.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="video-restrictions"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ProfilePrivate" c:type="GUPnPDLNAProfilePrivate*"/>
      </field>
    </class>
    <record name="ProfileClass"
            c:type="GUPnPDLNAProfileClass"
            glib:is-gtype-struct-for="Profile">
      <source-position filename="gupnp-dlna-profile.h" line="77"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile.h"
             line="73">A #GObjectClass - parent of this class.</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ProfileGuesser"
           c:symbol-prefix="profile_guesser"
           c:type="GUPnPDLNAProfileGuesser"
           parent="GObject.Object"
           glib:type-name="GUPnPDLNAProfileGuesser"
           glib:get-type="gupnp_dlna_profile_guesser_get_type"
           glib:type-struct="ProfileGuesserClass">
      <doc xml:space="preserve"
           filename="gupnp-dlna-profile-guesser.c"
           line="30">The API provides synchronous and asynchronous guessing of DLNA
profile. The asynchronous mode requires a running #GMainLoop in the
default #GMainContext.</doc>
      <source-position filename="gupnp-dlna-profile-guesser.h" line="77"/>
      <constructor name="new" c:identifier="gupnp_dlna_profile_guesser_new">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="213">Creates a new guesser that will use specific DLNA profiles for
matching - i.e. which profiles will be used depends on
@relaxed_mode and @extended_mode.</doc>
        <source-position filename="gupnp-dlna-profile-guesser.h" line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="222">A new #GUPnPDLNAProfileGuesser object.</doc>
          <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
        </return-value>
        <parameters>
          <parameter name="relaxed_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="215">%TRUE to enable relaxed mode support. %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="extended_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="216">%TRUE to enable extended mode support. %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="cleanup"
                c:identifier="gupnp_dlna_profile_guesser_cleanup">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="529">Cleans up the DLNA profiles. Provided to remove Valgrind noise. Not
thread-safe. Do not call it if there is even a slightest chance
that profile guessing will be performed during process
lifetime. The profiles are not reloaded after cleanup.</doc>
        <source-position filename="gupnp-dlna-profile-guesser.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <method name="get_extended_mode"
              c:identifier="gupnp_dlna_profile_guesser_get_extended_mode">
        <source-position filename="gupnp-dlna-profile-guesser.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="519">%TRUE if @guesser is in extended mode, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="guesser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="517">The #GUPnPDLNAProfileGuesser object.</doc>
            <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_profile"
              c:identifier="gupnp_dlna_profile_guesser_get_profile">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="444">Lookups for #GUPnPDLNAProfile with given @name.</doc>
        <source-position filename="gupnp-dlna-profile-guesser.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="451">A #GUPnPDLNAProfile object on success,
%NULL otherwise.</doc>
          <type name="Profile" c:type="GUPnPDLNAProfile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="guesser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="446">The #GUPnPDLNAProfileGuesser object.</doc>
            <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="447">The name of the DLNA profile to be retrieved.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_relaxed_mode"
              c:identifier="gupnp_dlna_profile_guesser_get_relaxed_mode">
        <source-position filename="gupnp-dlna-profile-guesser.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="505">%TRUE if @guesser is in relaxed mode, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="guesser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="503">The #GUPnPDLNAProfileGuesser object.</doc>
            <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="guess_profile_async"
              c:identifier="gupnp_dlna_profile_guesser_guess_profile_async"
              throws="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="264">Asynchronously guesses DLNA profile for given @uri. When guessing
is done, ::done signal is emitted on @guesser.</doc>
        <source-position filename="gupnp-dlna-profile-guesser.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="274">%TRUE if @uri was successfully queued, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="guesser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="266">#GUPnPDLNAProfileGuesser object to use for guessing.</doc>
            <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="267">URI of media.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout_in_ms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="268">Timeout of guessing in miliseconds.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_profile_from_info"
              c:identifier="gupnp_dlna_profile_guesser_guess_profile_from_info">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="383">Guesses the profile which fits to passed @info.</doc>
        <source-position filename="gupnp-dlna-profile-guesser.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="390">A #GUPnPDLNAProfile object on success,
%NULL otherwise.</doc>
          <type name="Profile" c:type="GUPnPDLNAProfile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="guesser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="385">The #GUPnPDLNAProfileGuesser object.</doc>
            <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
          </instance-parameter>
          <parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="386">The #GUPnPDLNAInformation object.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_profile_sync"
              c:identifier="gupnp_dlna_profile_guesser_guess_profile_sync"
              throws="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="315">Synchronously guesses DLNA profile for given @uri.</doc>
        <source-position filename="gupnp-dlna-profile-guesser.h" line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="326">DLNA profile if any had matched, %NULL otherwise.</doc>
          <type name="Profile" c:type="GUPnPDLNAProfile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="guesser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="317">#GUPnPDLNAProfileGuesser object to use for guessing.</doc>
            <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="318">URI of media.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="timeout_in_ms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="319">Timeout of guessing in miliseconds.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="dlna_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="320">A place where to
store DLNA information or %NULL.</doc>
            <type name="Information" c:type="GUPnPDLNAInformation**"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_profiles"
              c:identifier="gupnp_dlna_profile_guesser_list_profiles">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="480">Gets a list of the all DLNA profiles supported by @guesser.</doc>
        <source-position filename="gupnp-dlna-profile-guesser.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-profile-guesser.c"
               line="486">A #GList
of #GUPnPDLNAProfile on success, %NULL otherwise.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Profile"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="guesser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="482">The #GUPnPDLNAProfileGuesser whose profile list is required.</doc>
            <type name="ProfileGuesser" c:type="GUPnPDLNAProfileGuesser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="extended-mode"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="144">Whether profile matching should be done also against DLNA
profiles not being a part of DLNA specification.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="relaxed-mode"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="126">Whether profile matching should not be strictly compliant
with the DLNA specification.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ProfileGuesserPrivate"
              c:type="GUPnPDLNAProfileGuesserPrivate*"/>
      </field>
      <glib:signal name="done" when="last">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.c"
             line="162">Will be emitted when guessing DLNA profile for a URI has finished.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="165">URI metadata as #GUPnPDLNAInformation.</doc>
            <type name="Information"/>
          </parameter>
          <parameter name="dlna"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="166">The results as #GUPnPDLNAProfile.</doc>
            <type name="Profile"/>
          </parameter>
          <parameter name="error"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-profile-guesser.c"
                 line="167">Contains details of the error if discovery failed,
else is %NULL.</doc>
            <type name="GLib.Error"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ProfileGuesserClass"
            c:type="GUPnPDLNAProfileGuesserClass"
            glib:is-gtype-struct-for="ProfileGuesser">
      <source-position filename="gupnp-dlna-profile-guesser.h" line="77"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="gupnp-dlna-profile-guesser.h"
             line="73">A #GObjectClass - parent of this class.</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ProfileGuesserPrivate"
            c:type="GUPnPDLNAProfileGuesserPrivate"
            disguised="1">
      <source-position filename="gupnp-dlna-profile-guesser.h" line="58"/>
    </record>
    <record name="ProfilePrivate"
            c:type="GUPnPDLNAProfilePrivate"
            disguised="1">
      <source-position filename="gupnp-dlna-profile.h" line="57"/>
    </record>
    <function-macro name="RESTRICTION"
                    c:identifier="GUPNP_DLNA_RESTRICTION"
                    introspectable="0">
      <source-position filename="gupnp-dlna-restriction.h" line="34"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <record name="Restriction"
            c:type="GUPnPDLNARestriction"
            glib:type-name="GUPnPDLNARestriction"
            glib:get-type="gupnp_dlna_restriction_get_type"
            c:symbol-prefix="restriction">
      <source-position filename="gupnp-dlna-restriction.h" line="32"/>
      <method name="copy" c:identifier="gupnp_dlna_restriction_copy">
        <source-position filename="gupnp-dlna-restriction.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-restriction.c"
               line="56">A copy of @restriction.</doc>
          <type name="Restriction" c:type="GUPnPDLNARestriction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="restriction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-restriction.c"
                 line="54">A restriction to copy.</doc>
            <type name="Restriction" c:type="GUPnPDLNARestriction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gupnp_dlna_restriction_free">
        <doc xml:space="preserve"
             filename="gupnp-dlna-restriction.c"
             line="85">Frees @restriction.</doc>
        <source-position filename="gupnp-dlna-restriction.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="restriction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-restriction.c"
                 line="87">A restriction to free.</doc>
            <type name="Restriction" c:type="GUPnPDLNARestriction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entries"
              c:identifier="gupnp_dlna_restriction_get_entries">
        <doc xml:space="preserve"
             filename="gupnp-dlna-restriction.c"
             line="216">Gets @restriction's entries. It is a string to #GUPnPDLNAValueList
mapping.</doc>
        <source-position filename="gupnp-dlna-restriction.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-restriction.c"
               line="223">
Entries. Do not modify.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="ValueList"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="restriction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-restriction.c"
                 line="218">A restriction.</doc>
            <type name="Restriction" c:type="GUPnPDLNARestriction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime" c:identifier="gupnp_dlna_restriction_get_mime">
        <doc xml:space="preserve"
             filename="gupnp-dlna-restriction.c"
             line="200">Gets @restriction's MIME type.</doc>
        <source-position filename="gupnp-dlna-restriction.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-restriction.c"
               line="206">MIME type. Do not modify.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="restriction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-restriction.c"
                 line="202">A restriction.</doc>
            <type name="Restriction" c:type="GUPnPDLNARestriction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_empty" c:identifier="gupnp_dlna_restriction_is_empty">
        <source-position filename="gupnp-dlna-restriction.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-restriction.c"
               line="154">%TRUE if @restriction is empty and has no MIME type,
otherwise %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="restriction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-restriction.c"
                 line="152">A restriction.</doc>
            <type name="Restriction" c:type="GUPnPDLNARestriction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="gupnp_dlna_restriction_to_string">
        <doc xml:space="preserve"
             filename="gupnp-dlna-restriction.c"
             line="166">Creates a string representation of @restriction.</doc>
        <source-position filename="gupnp-dlna-restriction.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-restriction.c"
               line="172">A string representation of
@restriction. Free with g_free() when not needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="restriction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-restriction.c"
                 line="168">A restriction.</doc>
            <type name="Restriction" c:type="GUPnPDLNARestriction*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="StringValue" c:type="GUPnPDLNAStringValue">
      <doc xml:space="preserve"
           filename="gupnp-dlna-values.h"
           line="218">GUPnP DLNA Value representing a string value of some metadata
attribute.</doc>
      <source-position filename="gupnp-dlna-values.h" line="229"/>
      <field name="value" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="220">The string value.</doc>
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="state" writable="1">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="221">The state of #GUPnPDLNAStringValue.</doc>
        <type name="ValueState" c:type="GUPnPDLNAValueState"/>
      </field>
    </record>
    <function-macro name="VALUE_LIST"
                    c:identifier="GUPNP_DLNA_VALUE_LIST"
                    introspectable="0">
      <source-position filename="gupnp-dlna-value-list.h" line="32"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VIDEO_INFORMATION"
                    c:identifier="GUPNP_DLNA_VIDEO_INFORMATION"
                    introspectable="0">
      <source-position filename="gupnp-dlna-video-information.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VIDEO_INFORMATION_CLASS"
                    c:identifier="GUPNP_DLNA_VIDEO_INFORMATION_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-video-information.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VIDEO_INFORMATION_GET_CLASS"
                    c:identifier="GUPNP_DLNA_VIDEO_INFORMATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="gupnp-dlna-video-information.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="ValueList"
            c:type="GUPnPDLNAValueList"
            glib:type-name="GUPnPDLNAValueList"
            glib:get-type="gupnp_dlna_value_list_get_type"
            c:symbol-prefix="value_list">
      <source-position filename="gupnp-dlna-value-list.h" line="30"/>
      <method name="copy" c:identifier="gupnp_dlna_value_list_copy">
        <source-position filename="gupnp-dlna-value-list.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-value-list.c"
               line="147">A copy of @list.</doc>
          <type name="ValueList" c:type="GUPnPDLNAValueList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-value-list.c"
                 line="145">A list to copy.</doc>
            <type name="ValueList" c:type="GUPnPDLNAValueList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gupnp_dlna_value_list_free">
        <doc xml:space="preserve"
             filename="gupnp-dlna-value-list.c"
             line="64">Frees the value list.</doc>
        <source-position filename="gupnp-dlna-value-list.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-value-list.c"
                 line="66">A list to free.</doc>
            <type name="ValueList" c:type="GUPnPDLNAValueList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_g_values"
              c:identifier="gupnp_dlna_value_list_get_g_values">
        <doc xml:space="preserve"
             filename="gupnp-dlna-value-list.c"
             line="306">Gets a list of #GValues. #GValues can be of types #G_TYPE_BOOLEAN,
#G_TYPE_INT, #G_TYPE_STRING, #GUPNP_TYPE_DLNA_FRACTION,
#GUPNP_TYPE_DLNA_FRACTION_RANGE or #GUPNP_TYPE_DLNA_INT_RANGE.</doc>
        <source-position filename="gupnp-dlna-value-list.h" line="58"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-value-list.c"
               line="314">A list. Free it
with g_list_free_full() with g_free().</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GObject.Value"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-value-list.c"
                 line="308">A list.</doc>
            <type name="ValueList" c:type="GUPnPDLNAValueList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_empty" c:identifier="gupnp_dlna_value_list_is_empty">
        <source-position filename="gupnp-dlna-value-list.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gupnp-dlna-value-list.c"
               line="214">%TRUE if @list is empty, otherwise %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-value-list.c"
                 line="212">A list.</doc>
            <type name="ValueList" c:type="GUPnPDLNAValueList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="gupnp_dlna_value_list_to_string">
        <doc xml:space="preserve"
             filename="gupnp-dlna-value-list.c"
             line="254">Creates a string representation of @list.</doc>
        <source-position filename="gupnp-dlna-value-list.h" line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gupnp-dlna-value-list.c"
               line="260">A string representation of @list. Free
with g_free() when not needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-value-list.c"
                 line="256">A list.</doc>
            <type name="ValueList" c:type="GUPnPDLNAValueList*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="ValueState" c:type="GUPnPDLNAValueState">
      <doc xml:space="preserve"
           filename="gupnp-dlna-values.h"
           line="55">Flags describing a state of GUPnP DLNA Value.</doc>
      <source-position filename="gupnp-dlna-values.h" line="67"/>
      <member name="set" value="0" c:identifier="GUPNP_DLNA_VALUE_STATE_SET">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="57">Value is set.</doc>
      </member>
      <member name="unset"
              value="1"
              c:identifier="GUPNP_DLNA_VALUE_STATE_UNSET">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="58">Value is unset.</doc>
      </member>
      <member name="unsupported"
              value="2"
              c:identifier="GUPNP_DLNA_VALUE_STATE_UNSUPPORTED">
        <doc xml:space="preserve"
             filename="gupnp-dlna-values.h"
             line="59">Value is unsupported.</doc>
      </member>
    </enumeration>
    <class name="VideoInformation"
           c:symbol-prefix="video_information"
           c:type="GUPnPDLNAVideoInformation"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GUPnPDLNAVideoInformation"
           glib:get-type="gupnp_dlna_video_information_get_type"
           glib:type-struct="VideoInformationClass">
      <doc xml:space="preserve"
           filename="gupnp-dlna-video-information.c"
           line="22">#GUPnPDLNAVideoInformation holds all video metadatas important for
matching profiles. Note that it does not mean all data should be
provided for every video file as in some cases it does not make
sense (e.g. MPEG version does not make sense for Quicktime video
files).

For metadata attributes that do not exist in current video file an
unset value should be returned. For metadata attributes that do
exist a set value with proper underlying value should be
returned. In case metadata extractor has completely no clue how to
extract some metadata attribute at all, an unsupported value should
be returned. Note that unsupported values should be a temporary
mean before fixing the multimedia framework to be able to extract
such attribute.

Note that gupnp_dlna_video_information_get_mime() should always
return a set value. Otherwise it is highly probably that the file
will not match against any DLNA profile.</doc>
      <source-position filename="gupnp-dlna-video-information.h" line="129"/>
      <virtual-method name="get_bitrate"
                      invoker="get_bitrate"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="96"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="89">A bitrate.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="87">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_framerate"
                      invoker="get_framerate"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="99"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="114">A framerate.</doc>
          <type name="FractionValue" c:type="GUPnPDLNAFractionValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="112">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_height"
                      invoker="get_height"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="102"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="139">A height.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="137">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_level" invoker="get_level" introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="108"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="189">A level.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="187">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mime" invoker="get_mime" introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="126"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="340">A MIME type.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="338">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mpeg_version"
                      invoker="get_mpeg_version"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="111"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="214">An MPEG version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="212">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_pixel_aspect_ratio"
                      invoker="get_pixel_aspect_ratio"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="114"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="239">A pixel-aspect-ratio.</doc>
          <type name="FractionValue" c:type="GUPnPDLNAFractionValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="237">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_profile"
                      invoker="get_profile"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="117"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="265">A profile.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="263">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_width" invoker="get_width" introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="123"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="315">A width.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="313">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_interlaced"
                      invoker="is_interlaced"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="105"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="164">Whether video is interlaced.</doc>
          <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="162">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_system_stream"
                      invoker="is_system_stream"
                      introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="120"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="290">Whether it is a system stream.</doc>
          <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="288">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_bitrate"
              c:identifier="gupnp_dlna_video_information_get_bitrate"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="135"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="89">A bitrate.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="87">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_framerate"
              c:identifier="gupnp_dlna_video_information_get_framerate"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="138"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="114">A framerate.</doc>
          <type name="FractionValue" c:type="GUPnPDLNAFractionValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="112">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gupnp_dlna_video_information_get_height"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="141"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="139">A height.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="137">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_level"
              c:identifier="gupnp_dlna_video_information_get_level"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="147"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="189">A level.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="187">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime"
              c:identifier="gupnp_dlna_video_information_get_mime"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="166"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="340">A MIME type.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="338">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mpeg_version"
              c:identifier="gupnp_dlna_video_information_get_mpeg_version"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="150"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="214">An MPEG version.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="212">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixel_aspect_ratio"
              c:identifier="gupnp_dlna_video_information_get_pixel_aspect_ratio"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="153"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="239">A pixel-aspect-ratio.</doc>
          <type name="FractionValue" c:type="GUPnPDLNAFractionValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="237">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_profile"
              c:identifier="gupnp_dlna_video_information_get_profile"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="157"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="265">A profile.</doc>
          <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="263">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gupnp_dlna_video_information_get_width"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="163"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="315">A width.</doc>
          <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="313">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_interlaced"
              c:identifier="gupnp_dlna_video_information_is_interlaced"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="144"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="164">Whether video is interlaced.</doc>
          <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="162">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_system_stream"
              c:identifier="gupnp_dlna_video_information_is_system_stream"
              introspectable="0">
        <source-position filename="gupnp-dlna-video-information.h" line="160"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gupnp-dlna-video-information.c"
               line="290">Whether it is a system stream.</doc>
          <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
        </return-value>
        <parameters>
          <instance-parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="288">A #GUPnPDLNAVideoInformation object.</doc>
            <type name="VideoInformation" c:type="GUPnPDLNAVideoInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="VideoInformationPrivate"
              c:type="GUPnPDLNAVideoInformationPrivate*"/>
      </field>
    </class>
    <record name="VideoInformationClass"
            c:type="GUPnPDLNAVideoInformationClass"
            glib:is-gtype-struct-for="VideoInformation">
      <source-position filename="gupnp-dlna-video-information.h" line="129"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="gupnp-dlna-video-information.h"
             line="67">Parent class.</doc>
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_bitrate" introspectable="0">
        <callback name="get_bitrate" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="96"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="89">A bitrate.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="87">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_framerate" introspectable="0">
        <callback name="get_framerate" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="99"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="114">A framerate.</doc>
            <type name="FractionValue" c:type="GUPnPDLNAFractionValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="112">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_height" introspectable="0">
        <callback name="get_height" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="102"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="139">A height.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="137">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_interlaced" introspectable="0">
        <callback name="is_interlaced" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="105"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="164">Whether video is interlaced.</doc>
            <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="162">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_level" introspectable="0">
        <callback name="get_level" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="108"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="189">A level.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="187">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mpeg_version" introspectable="0">
        <callback name="get_mpeg_version" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="111"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="214">An MPEG version.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="212">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_pixel_aspect_ratio" introspectable="0">
        <callback name="get_pixel_aspect_ratio" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="114"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="239">A pixel-aspect-ratio.</doc>
            <type name="FractionValue" c:type="GUPnPDLNAFractionValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="237">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_profile" introspectable="0">
        <callback name="get_profile" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="117"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="265">A profile.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="263">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_system_stream" introspectable="0">
        <callback name="is_system_stream" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="120"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="290">Whether it is a system stream.</doc>
            <type name="BoolValue" c:type="GUPnPDLNABoolValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="288">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_width" introspectable="0">
        <callback name="get_width" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="123"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="315">A width.</doc>
            <type name="IntValue" c:type="GUPnPDLNAIntValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="313">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mime" introspectable="0">
        <callback name="get_mime" introspectable="0">
          <source-position filename="gupnp-dlna-video-information.h"
                           line="126"/>
          <return-value>
            <doc xml:space="preserve"
                 filename="gupnp-dlna-video-information.c"
                 line="340">A MIME type.</doc>
            <type name="StringValue" c:type="GUPnPDLNAStringValue"/>
          </return-value>
          <parameters>
            <parameter name="info" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="gupnp-dlna-video-information.c"
                   line="338">A #GUPnPDLNAVideoInformation object.</doc>
              <type name="VideoInformation"
                    c:type="GUPnPDLNAVideoInformation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved">
        <doc xml:space="preserve"
             filename="gupnp-dlna-video-information.h"
             line="90">Padding. Ignore it.</doc>
        <array zero-terminated="0" fixed-size="12">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="VideoInformationPrivate"
            c:type="GUPnPDLNAVideoInformationPrivate"
            disguised="1">
      <source-position filename="gupnp-dlna-video-information.h" line="57"/>
    </record>
    <docsection name="gupnpdlnavalues">
      <doc xml:space="preserve"
           filename="gupnp-dlna-values.h"
           line="29">The #GUPnPDLNABoolValue, #GUPnPDLNAFractionValue,
#GUPnPDLNAIntValue and #GUPnPDLNAStringValue hold respectively
boolean, fraction, integer and string values.

The value can be in one of three possible states - set, unset or
unsupported. When value is in set state it is possible to use the
underlying value it holds. In other states using such value is
undefined.

Main difference between unset state and unsupported state is that
the former is set when metadata extractor is capable of extracting
some attribute in general, but current media file does not have
such attribute, while the latter means that metadata extractor has
no idea how to extract such attribute at all.

One note on #GUPnPDLNAStringValue - it holds a string that has to
be allocated with g_malloc() (that is - g_strdup() and others are
fine as well as they use g_malloc() internally). The string is
freed by consumer.</doc>
    </docsection>
  </namespace>
</repository>

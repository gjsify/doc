<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Json" version="1.0"/>
  <include name="Soup" version="2.4"/>
  <package name="geocode-glib-1.0"/>
  <c:include name="geocode-glib/geocode-glib.h"/>
  <namespace name="GeocodeGlib"
             version="1.0"
             shared-library="libgeocode-glib.so.0"
             c:identifier-prefixes="Geocode"
             c:symbol-prefixes="geocode">
    <function-macro name="BOUNDING_BOX"
                    c:identifier="GEOCODE_BOUNDING_BOX"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOUNDING_BOX_CLASS"
                    c:identifier="GEOCODE_BOUNDING_BOX_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOUNDING_BOX_GET_CLASS"
                    c:identifier="GEOCODE_BOUNDING_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="Backend"
               c:symbol-prefix="backend"
               c:type="GeocodeBackend"
               version="3.23.1"
               glib:type-name="GeocodeBackend"
               glib:get-type="geocode_backend_get_type"
               glib:type-struct="BackendInterface">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-backend.c"
           line="26">The #GeocodeBackend interface defines the operations that a resolver
service must implement.

geocode-glib supports multiple backends which provide the underlying
geocoding database and functionality. By default, the #GeocodeNominatim
backend is used with
[GNOME’s Nominatim server](https://nominatim.gnome.org/). If you are using
geocode-glib in some GNOME software, this is the correct backend to use.
Otherwise, you should use a new #GeocodeNominatim instance with your own
Nominatim server, or a custom #GeocodeBackend implementation to use geocoding
data from a non-Nominatim service. In all cases, please respect the terms of
use of the service you are using.

If you are writing a library which uses geocode-glib, consider exposing the
choice of #GeocodeBackend in your library API, so that applications can make
the best choice about which geocoding backend to use.

Custom backends can be implemented by subclassing #GeocodeBackend and
implementing the synchronous `forward_search` and `reverse_resolve` methods.
The asynchronous versions may be implemented as well; the default
implementations run the synchronous version in a thread.

In order to use a custom backend, either instantiate the backend directly
and do forward and reverse queries on it using the #GeocodeBackend interface;
or create #GeocodeForward and #GeocodeReverse objects as normal, and set
the backend they use with geocode_forward_set_backend() and
geocode_reverse_set_backend(). They default to using the GNOME Nominatim
backend.

#GeocodeMockBackend is intended to be used in unit tests for applications
which use geocode-glib — it allows them to set the geocode results they
expect their application to query, and check afterwards that the queries
were performed. Additionally, it works offline, which allows application
unit tests to be run on integration and build machines which are not online.
It is not expected that #GeocodeMockBackend will be used in production code.</doc>
      <source-position filename="../geocode-glib/geocode-backend.h"
                       line="103"/>
      <virtual-method name="forward_search"
                      invoker="forward_search"
                      version="3.23.1"
                      throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="142">Gets the result of a forward geocoding query using the @backend.

If no results are found, a %GEOCODE_ERROR_NO_MATCHES error is returned.

This is a synchronous function, which means it may block on network requests.
In most situations, the asynchronous version
(geocode_backend_forward_search_async()) is more appropriate. See its
documentation for more information on usage.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="74"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="158">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="144">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="145">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="146">optional #GCancellable, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="forward_search_async"
                      invoker="forward_search_async"
                      version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="72">Asynchronously performs a forward geocoding query using the @backend. Use
geocode_backend_forward_search() to do the same thing synchronously.

The @params hash table is in the format used by Telepathy, and documented
in the [Telepathy specification](http://telepathy.freedesktop.org/spec/Connection_Interface_Location.html#Mapping:Location).

See also: [XEP-0080 specification](http://xmpp.org/extensions/xep-0080.html).

When the operation is finished, @callback will be called. You can then call
geocode_backend_forward_search_finish() to get the result of the operation.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="74">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="75">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="76">optional #GCancellable, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="77">a #GAsyncReadyCallback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="78">the data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="forward_search_finish"
                      invoker="forward_search_finish"
                      version="3.23.1"
                      throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="111">Finishes a forward geocoding operation. See
geocode_backend_forward_search_async().</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="120">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="113">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="114">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reverse_resolve"
                      invoker="reverse_resolve"
                      version="3.23.1"
                      throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="259">Gets the result of a reverse geocoding query using the @backend.

If no result could be found, a %GEOCODE_ERROR_NOT_SUPPORTED error will be
returned. This typically happens if the coordinates to geocode are in the
middle of the ocean.

This is a synchronous function, which means it may block on network requests.
In most situations, the asynchronous version,
geocode_backend_forward_search_async(), is more appropriate. See its
documentation for more information on usage.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="88"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="277">A list of
   #GeocodePlace instances, or %NULL in case of errors. The list is ordered
   by relevance, with most relevant results first. Free the returned
   instances with g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="261">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="262">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="263">optional #GCancellable object, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reverse_resolve_async"
                      invoker="reverse_resolve_async"
                      version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="180">Asynchronously gets the result of a reverse geocoding query using the
backend.

Typically, a single result will be returned representing the place at a
given latitude and longitude (the `lat` and `lon` keys to @params); but in
some cases the results will be ambiguous and *multiple* results will be
returned. They will be returned in order of relevance, with the most
relevant result first in the list.

The @params hash table is in the format used by Telepathy, and documented
in the [Telepathy specification](http://telepathy.freedesktop.org/spec/Connection_Interface_Location.html#Mapping:Location).

See also: [XEP-0080 specification](http://xmpp.org/extensions/xep-0080.html).

Use geocode_backend_reverse_resolve() to do the same thing synchronously.

When the operation is finished, @callback will be called. You can then call
geocode_backend_reverse_resolve_finish() to get the result of the operation.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="182">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="183">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="184">optional #GCancellable object, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="185">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="186">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reverse_resolve_finish"
                      invoker="reverse_resolve_finish"
                      version="3.23.1"
                      throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="228">Finishes a reverse geocoding operation. See geocode_backend_reverse_resolve_async().</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="236">A list of
   #GeocodePlace instances, or %NULL in case of errors. The list is ordered
   by relevance, with most relevant results first. Free the returned
   instances with g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="230">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="231">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="forward_search"
              c:identifier="geocode_backend_forward_search"
              version="3.23.1"
              throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="142">Gets the result of a forward geocoding query using the @backend.

If no results are found, a %GEOCODE_ERROR_NO_MATCHES error is returned.

This is a synchronous function, which means it may block on network requests.
In most situations, the asynchronous version
(geocode_backend_forward_search_async()) is more appropriate. See its
documentation for more information on usage.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="114"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="158">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="144">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="145">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="146">optional #GCancellable, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="forward_search_async"
              c:identifier="geocode_backend_forward_search_async"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="72">Asynchronously performs a forward geocoding query using the @backend. Use
geocode_backend_forward_search() to do the same thing synchronously.

The @params hash table is in the format used by Telepathy, and documented
in the [Telepathy specification](http://telepathy.freedesktop.org/spec/Connection_Interface_Location.html#Mapping:Location).

See also: [XEP-0080 specification](http://xmpp.org/extensions/xep-0080.html).

When the operation is finished, @callback will be called. You can then call
geocode_backend_forward_search_finish() to get the result of the operation.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="74">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="75">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="76">optional #GCancellable, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="77">a #GAsyncReadyCallback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="78">the data to pass to the @callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="forward_search_finish"
              c:identifier="geocode_backend_forward_search_finish"
              version="3.23.1"
              throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="111">Finishes a forward geocoding operation. See
geocode_backend_forward_search_async().</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="111"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="120">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="113">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="114">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reverse_resolve"
              c:identifier="geocode_backend_reverse_resolve"
              version="3.23.1"
              throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="259">Gets the result of a reverse geocoding query using the @backend.

If no result could be found, a %GEOCODE_ERROR_NOT_SUPPORTED error will be
returned. This typically happens if the coordinates to geocode are in the
middle of the ocean.

This is a synchronous function, which means it may block on network requests.
In most situations, the asynchronous version,
geocode_backend_forward_search_async(), is more appropriate. See its
documentation for more information on usage.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="128"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="277">A list of
   #GeocodePlace instances, or %NULL in case of errors. The list is ordered
   by relevance, with most relevant results first. Free the returned
   instances with g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="261">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="262">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="263">optional #GCancellable object, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reverse_resolve_async"
              c:identifier="geocode_backend_reverse_resolve_async"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="180">Asynchronously gets the result of a reverse geocoding query using the
backend.

Typically, a single result will be returned representing the place at a
given latitude and longitude (the `lat` and `lon` keys to @params); but in
some cases the results will be ambiguous and *multiple* results will be
returned. They will be returned in order of relevance, with the most
relevant result first in the list.

The @params hash table is in the format used by Telepathy, and documented
in the [Telepathy specification](http://telepathy.freedesktop.org/spec/Connection_Interface_Location.html#Mapping:Location).

See also: [XEP-0080 specification](http://xmpp.org/extensions/xep-0080.html).

Use geocode_backend_reverse_resolve() to do the same thing synchronously.

When the operation is finished, @callback will be called. You can then call
geocode_backend_reverse_resolve_finish() to get the result of the operation.</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="182">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="183">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="184">optional #GCancellable object, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="185">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="186">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="reverse_resolve_finish"
              c:identifier="geocode_backend_reverse_resolve_finish"
              version="3.23.1"
              throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-backend.c"
             line="228">Finishes a reverse geocoding operation. See geocode_backend_reverse_resolve_async().</doc>
        <source-position filename="../geocode-glib/geocode-backend.h"
                         line="125"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-backend.c"
               line="236">A list of
   #GeocodePlace instances, or %NULL in case of errors. The list is ordered
   by relevance, with most relevant results first. Free the returned
   instances with g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="230">a #GeocodeBackend.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="231">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="BackendInterface"
            c:type="GeocodeBackendInterface"
            glib:is-gtype-struct-for="Backend"
            version="3.23.1">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-backend.h"
           line="53">Interface which defines the basic operations for geocoding.</doc>
      <source-position filename="../geocode-glib/geocode-backend.h"
                       line="103"/>
      <field name="g_iface" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="forward_search">
        <callback name="forward_search" throws="1">
          <source-position filename="../geocode-glib/geocode-backend.h"
                           line="74"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="158">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Place"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="144">a #GeocodeBackend.</doc>
              <type name="Backend" c:type="GeocodeBackend*"/>
            </parameter>
            <parameter name="params" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="145">a #GHashTable with string keys, and #GValue values.</doc>
              <type name="GLib.HashTable" c:type="GHashTable*">
                <type name="utf8"/>
                <type name="GObject.Value"/>
              </type>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="146">optional #GCancellable, %NULL to ignore.</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="forward_search_async">
        <callback name="forward_search_async">
          <source-position filename="../geocode-glib/geocode-backend.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="74">a #GeocodeBackend.</doc>
              <type name="Backend" c:type="GeocodeBackend*"/>
            </parameter>
            <parameter name="params" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="75">a #GHashTable with string keys, and #GValue values.</doc>
              <type name="GLib.HashTable" c:type="GHashTable*">
                <type name="utf8"/>
                <type name="GObject.Value"/>
              </type>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="76">optional #GCancellable, %NULL to ignore.</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="77">a #GAsyncReadyCallback to call when the request is satisfied</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="78">the data to pass to the @callback function</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="forward_search_finish">
        <callback name="forward_search_finish" throws="1">
          <source-position filename="../geocode-glib/geocode-backend.h"
                           line="83"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="120">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Place"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="113">a #GeocodeBackend.</doc>
              <type name="Backend" c:type="GeocodeBackend*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="114">a #GAsyncResult.</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reverse_resolve">
        <callback name="reverse_resolve" throws="1">
          <source-position filename="../geocode-glib/geocode-backend.h"
                           line="88"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="277">A list of
   #GeocodePlace instances, or %NULL in case of errors. The list is ordered
   by relevance, with most relevant results first. Free the returned
   instances with g_object_unref() and the list with g_list_free() when done.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Place"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="261">a #GeocodeBackend.</doc>
              <type name="Backend" c:type="GeocodeBackend*"/>
            </parameter>
            <parameter name="params" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="262">a #GHashTable with string keys, and #GValue values.</doc>
              <type name="GLib.HashTable" c:type="GHashTable*">
                <type name="utf8"/>
                <type name="GObject.Value"/>
              </type>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="263">optional #GCancellable object, %NULL to ignore.</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reverse_resolve_async">
        <callback name="reverse_resolve_async">
          <source-position filename="../geocode-glib/geocode-backend.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="182">a #GeocodeBackend.</doc>
              <type name="Backend" c:type="GeocodeBackend*"/>
            </parameter>
            <parameter name="params" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="183">a #GHashTable with string keys, and #GValue values.</doc>
              <type name="GLib.HashTable" c:type="GHashTable*">
                <type name="utf8"/>
                <type name="GObject.Value"/>
              </type>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="184">optional #GCancellable object, %NULL to ignore.</doc>
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="185">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="186">the data to pass to callback function.</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reverse_resolve_finish">
        <callback name="reverse_resolve_finish" throws="1">
          <source-position filename="../geocode-glib/geocode-backend.h"
                           line="97"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-backend.c"
                 line="236">A list of
   #GeocodePlace instances, or %NULL in case of errors. The list is ordered
   by relevance, with most relevant results first. Free the returned
   instances with g_object_unref() and the list with g_list_free() when done.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Place"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="230">a #GeocodeBackend.</doc>
              <type name="Backend" c:type="GeocodeBackend*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../geocode-glib/geocode-backend.c"
                   line="231">a #GAsyncResult.</doc>
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="BoundingBox"
           c:symbol-prefix="bounding_box"
           c:type="GeocodeBoundingBox"
           parent="GObject.Object"
           glib:type-name="GeocodeBoundingBox"
           glib:get-type="geocode_bounding_box_get_type"
           glib:type-struct="BoundingBoxClass">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-bounding-box.c"
           line="25">The #GeocodeBoundingBox represents a geographical area on earth, bounded
by top, bottom, left and right coordinates.</doc>
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="65"/>
      <constructor name="new" c:identifier="geocode_bounding_box_new">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="252">Creates a new #GeocodeBoundingBox object.</doc>
        <source-position filename="../geocode-glib/geocode-bounding-box.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-bounding-box.c"
               line="261">a new #GeocodeBoundingBox object. Use g_object_unref() when done.</doc>
          <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
        </return-value>
        <parameters>
          <parameter name="top" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="254">The left coordinate</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="bottom" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="255">The bottom coordinate</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="256">The left coordinate</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="257">The right coordinate</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal"
              c:identifier="geocode_bounding_box_equal"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="277">Compare two #GeocodeBoundingBox instances for equality. This compares all
fields and only returns %TRUE if the instances are exactly equal.

Both instances must be non-%NULL.</doc>
        <source-position filename="../geocode-glib/geocode-bounding-box.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-bounding-box.c"
               line="287">%TRUE if the instances are equal, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="279">a bounding box</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="280">another bounding box</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bottom" c:identifier="geocode_bounding_box_get_bottom">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="319">Gets the bottom coordinate of @bbox.</doc>
        <source-position filename="../geocode-glib/geocode-bounding-box.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-bounding-box.c"
               line="325">the bottom coordinate of @bbox.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="bbox" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="321">a #GeocodeBoundingBox</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_left" c:identifier="geocode_bounding_box_get_left">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="335">Gets the left coordinate of @bbox.</doc>
        <source-position filename="../geocode-glib/geocode-bounding-box.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-bounding-box.c"
               line="341">the left coordinate of @bbox.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="bbox" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="337">a #GeocodeBoundingBox</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_right" c:identifier="geocode_bounding_box_get_right">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="351">Gets the right coordinate of @bbox.</doc>
        <source-position filename="../geocode-glib/geocode-bounding-box.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-bounding-box.c"
               line="357">the right coordinate of @bbox.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="bbox" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="353">a #GeocodeBoundingBox</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_top" c:identifier="geocode_bounding_box_get_top">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="303">Gets the top coordinate of @bbox.</doc>
        <source-position filename="../geocode-glib/geocode-bounding-box.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-bounding-box.c"
               line="309">the top coordinate of @bbox.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="bbox" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-bounding-box.c"
                 line="305">a #GeocodeBoundingBox</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="bottom"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="194">Bottom coordinate.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="left"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="210">Left coordinate.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="right"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="226">Right coordinate.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="top"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-bounding-box.c"
             line="178">Top coordinate.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="BoundingBoxPrivate" c:type="GeocodeBoundingBoxPrivate*"/>
      </field>
    </class>
    <record name="BoundingBoxClass"
            c:type="GeocodeBoundingBoxClass"
            glib:is-gtype-struct-for="BoundingBox">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-bounding-box.h"
           line="56">All the fields in the #GeocodeBoundingBoxClass structure are private and
should never be accessed directly.</doc>
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="65"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="BoundingBoxPrivate"
            c:type="GeocodeBoundingBoxPrivate"
            disguised="1">
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="42"/>
    </record>
    <enumeration name="Error"
                 glib:type-name="GeocodeError"
                 glib:get-type="geocode_error_get_type"
                 c:type="GeocodeError"
                 glib:error-domain="geocode_error">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-error.h"
           line="39">Error codes returned by geocode-glib functions.</doc>
      <member name="parse"
              value="0"
              c:identifier="GEOCODE_ERROR_PARSE"
              glib:nick="parse">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-error.h"
             line="41">An error occured parsing the response from the web service.</doc>
      </member>
      <member name="not_supported"
              value="1"
              c:identifier="GEOCODE_ERROR_NOT_SUPPORTED"
              glib:nick="not-supported">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-error.h"
             line="42">The request made was not supported.</doc>
      </member>
      <member name="no_matches"
              value="2"
              c:identifier="GEOCODE_ERROR_NO_MATCHES"
              glib:nick="no-matches">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-error.h"
             line="43">The requests made didn't have any matches.</doc>
      </member>
      <member name="invalid_arguments"
              value="3"
              c:identifier="GEOCODE_ERROR_INVALID_ARGUMENTS"
              glib:nick="invalid-arguments">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-error.h"
             line="44">The request made contained invalid arguments.</doc>
      </member>
      <member name="internal_server"
              value="4"
              c:identifier="GEOCODE_ERROR_INTERNAL_SERVER"
              glib:nick="internal-server">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-error.h"
             line="45">The server encountered an (possibly unrecoverable) internal error.</doc>
      </member>
      <function name="quark" c:identifier="geocode_error_quark">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-error.c"
             line="33">Gets the geocode-glib error quark.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-error.c"
               line="38">a #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <function-macro name="FORWARD"
                    c:identifier="GEOCODE_FORWARD"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-forward.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FORWARD_CLASS"
                    c:identifier="GEOCODE_FORWARD_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-forward.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FORWARD_GET_CLASS"
                    c:identifier="GEOCODE_FORWARD_GET_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-forward.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Forward"
           c:symbol-prefix="forward"
           c:type="GeocodeForward"
           parent="GObject.Object"
           glib:type-name="GeocodeForward"
           glib:get-type="geocode_forward_get_type"
           glib:type-struct="ForwardClass">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-forward.c"
           line="35">Contains functions for geocoding using the
&lt;ulink url="http://wiki.openstreetmap.org/wiki/Nominatim"&gt;OSM Nominatim APIs&lt;/ulink&gt;</doc>
      <source-position filename="../geocode-glib/geocode-forward.h" line="66"/>
      <constructor name="new_for_params"
                   c:identifier="geocode_forward_new_for_params">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="223">Creates a new #GeocodeForward to perform geocoding with. The
#GHashTable is in the format used by Telepathy, and documented
on &lt;ulink url="http://telepathy.freedesktop.org/spec/Connection_Interface_Location.html#Mapping:Location"&gt;Telepathy's specification site&lt;/ulink&gt;.

See also: &lt;ulink url="http://xmpp.org/extensions/xep-0080.html"&gt;XEP-0080 specification&lt;/ulink&gt;.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-forward.c"
               line="233">a new #GeocodeForward. Use g_object_unref() when done.</doc>
          <type name="Forward" c:type="GeocodeForward*"/>
        </return-value>
        <parameters>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="225">a #GHashTable with string keys, and #GValue values.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_string"
                   c:identifier="geocode_forward_new_for_string">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="264">Creates a new #GeocodeForward to perform forward geocoding with. The
string is in free-form format.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-forward.c"
               line="271">a new #GeocodeForward. Use g_object_unref() when done.</doc>
          <type name="Forward" c:type="GeocodeForward*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="266">a string containing a free-form description of the location</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_answer_count"
              c:identifier="geocode_forward_get_answer_count">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="501">Gets the number of requested results for searches.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="503">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bounded" c:identifier="geocode_forward_get_bounded">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="531">Gets the #GeocodeForward:bounded property that regulates whether the
#GeocodeForward:search-area property acts restricting or not.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="533">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_area"
              c:identifier="geocode_forward_get_search_area">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="515">Gets the area to limit searches within.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="75"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-forward.c"
               line="521">the search area, or %NULL if none is set</doc>
          <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="517">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search" c:identifier="geocode_forward_search" throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="369">Gets the result of a forward geocoding
query using the current backend (see geocode_forward_set_backend()). By
default the GNOME Nominatim server is used. See #GeocodeBackend for more
information.

If no results are found, a %GEOCODE_ERROR_NO_MATCHES error is returned.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-forward.c"
               line="381">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="371">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="search_async" c:identifier="geocode_forward_search_async">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="308">Asynchronously performs a forward geocoding
query using a web service. Use geocode_forward_search() to do the same
thing synchronously.

When the operation is finished, @callback will be called. You can then call
geocode_forward_search_finish() to get the result of the operation.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="310">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="311">optional #GCancellable forward, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="312">a #GAsyncReadyCallback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="313">the data to pass to callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="search_finish"
              c:identifier="geocode_forward_search_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="345">Finishes a forward geocoding operation. See geocode_forward_search_async().</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="87"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-forward.c"
               line="353">A list of
places or %NULL in case of errors. Free the returned instances with
g_object_unref() and the list with g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Place"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="347">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="348">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_answer_count"
              c:identifier="geocode_forward_set_answer_count">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="401">Sets the number of requested results to @count.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="403">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="404">the number of requested results, which must be greater than zero</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_backend"
              c:identifier="geocode_forward_set_backend"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="546">Specifies the backend to use in the forward geocoding operation.

If none is given, the default GNOME Nominatim server is used.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="548">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
          <parameter name="backend"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="549">a #GeocodeBackend, or %NULL to use the
   default one.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bounded" c:identifier="geocode_forward_set_bounded">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="473">Set the #GeocodeForward:bounded property that regulates whether the
#GeocodeForward:search-area property acts restricting or not.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="475">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
          <parameter name="bounded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="476">#TRUE to restrict results to only items contained within the
#GeocodeForward:search-area bounding box.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_area"
              c:identifier="geocode_forward_set_search_area">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="428">Sets the area to limit searches within.</doc>
        <source-position filename="../geocode-glib/geocode-forward.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="430">a #GeocodeForward representing a query</doc>
            <type name="Forward" c:type="GeocodeForward*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-forward.c"
                 line="431">a bounding box to limit the search area.</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </parameter>
        </parameters>
      </method>
      <property name="answer-count" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="149">The number of requested results to a search query.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="bounded" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="179">If set to #TRUE then only results in the #GeocodeForward:search-area
bounding box are returned.
If set to #FALSE the #GeocodeForward:search-area is treated like a
preferred area for results.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="search-area" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-forward.c"
             line="164">The bounding box that limits the search area.
If #GeocodeForward:bounded property is set to #TRUE only results from
this area is returned.</doc>
        <type name="BoundingBox"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ForwardPrivate" c:type="GeocodeForwardPrivate*"/>
      </field>
    </class>
    <record name="ForwardClass"
            c:type="GeocodeForwardClass"
            glib:is-gtype-struct-for="Forward">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-forward.h"
           line="58">All the fields in the #GeocodeForwardClass structure are private and should never be accessed directly.</doc>
      <source-position filename="../geocode-glib/geocode-forward.h" line="66"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ForwardPrivate" c:type="GeocodeForwardPrivate" disguised="1">
      <source-position filename="../geocode-glib/geocode-forward.h" line="50"/>
    </record>
    <function-macro name="IS_BOUNDING_BOX"
                    c:identifier="GEOCODE_IS_BOUNDING_BOX"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BOUNDING_BOX_CLASS"
                    c:identifier="GEOCODE_IS_BOUNDING_BOX_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-bounding-box.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FORWARD"
                    c:identifier="GEOCODE_IS_FORWARD"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-forward.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FORWARD_CLASS"
                    c:identifier="GEOCODE_IS_FORWARD_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-forward.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOCATION"
                    c:identifier="GEOCODE_IS_LOCATION"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LOCATION_CLASS"
                    c:identifier="GEOCODE_IS_LOCATION_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PLACE"
                    c:identifier="GEOCODE_IS_PLACE"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-place.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PLACE_CLASS"
                    c:identifier="GEOCODE_IS_PLACE_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-place.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_REVERSE"
                    c:identifier="GEOCODE_IS_REVERSE"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-reverse.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_REVERSE_CLASS"
                    c:identifier="GEOCODE_IS_REVERSE_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-reverse.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION"
                    c:identifier="GEOCODE_LOCATION"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="LOCATION_ACCURACY_CITY"
              value="15000"
              c:type="GEOCODE_LOCATION_ACCURACY_CITY">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="108">Constant representing city-level accuracy.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="LOCATION_ACCURACY_CONTINENT"
              value="3000000"
              c:type="GEOCODE_LOCATION_ACCURACY_CONTINENT">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="129">Constant representing continent-level accuracy.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="134"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="LOCATION_ACCURACY_COUNTRY"
              value="300000"
              c:type="GEOCODE_LOCATION_ACCURACY_COUNTRY">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="122">Constant representing country-level accuracy.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="LOCATION_ACCURACY_REGION"
              value="50000"
              c:type="GEOCODE_LOCATION_ACCURACY_REGION">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="115">Constant representing region-level accuracy.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="120"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="LOCATION_ACCURACY_STREET"
              value="1000"
              c:type="GEOCODE_LOCATION_ACCURACY_STREET">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="101">Constant representing street-level accuracy.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="LOCATION_ACCURACY_UNKNOWN"
              value="-1"
              c:type="GEOCODE_LOCATION_ACCURACY_UNKNOWN">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="94">Constant representing unknown accuracy.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="99"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="LOCATION_CLASS"
                    c:identifier="GEOCODE_LOCATION_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LOCATION_GET_CLASS"
                    c:identifier="GEOCODE_LOCATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Location"
           c:symbol-prefix="location"
           c:type="GeocodeLocation"
           parent="GObject.Object"
           glib:type-name="GeocodeLocation"
           glib:get-type="geocode_location_get_type"
           glib:type-struct="LocationClass">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.c"
           line="32">The #GeocodeLocation instance represents a location on earth, with an
optional description.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="63"/>
      <constructor name="new" c:identifier="geocode_location_new">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="672">Creates a new #GeocodeLocation object.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="138"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="680">a new #GeocodeLocation object. Use g_object_unref() when done.</doc>
          <type name="Location" c:type="GeocodeLocation*"/>
        </return-value>
        <parameters>
          <parameter name="latitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="674">a valid latitude</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="longitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="675">a valid longitude</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="accuracy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="676">accuracy of location in meters</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_description"
                   c:identifier="geocode_location_new_with_description">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="694">Creates a new #GeocodeLocation object.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="142"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="703">a new #GeocodeLocation object. Use g_object_unref() when done.</doc>
          <type name="Location" c:type="GeocodeLocation*"/>
        </return-value>
        <parameters>
          <parameter name="latitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="696">a valid latitude</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="longitude" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="697">a valid longitude</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="accuracy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="698">accuracy of location in meters</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="699">a description for the location</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal"
              c:identifier="geocode_location_equal"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="116">Compare two #GeocodeLocation instances for equality. This compares all fields
and only returns %TRUE if the instances are exactly equal. For example, if
both locations have the same physical coordinates, but one location has its
#GeocodeLocation:description property set and the other does not, %FALSE
will be returned. Similarly, if both locations have the same
#GeocodeLocation:latitude, #GeocodeLocation:longitude and
#GeocodeLocation:altitude, but a different #GeocodeLocation:accuracy or
#GeocodeLocation:timestamp, %FALSE will be returned. Or if both locations
have the same#GeocodeLocation:latitude and #GeocodeLocation:longitude but a
different #GeocodeLocation:altitude, %FALSE will be returned.

Both instances must be non-%NULL.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="134">%TRUE if the instances are equal, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="118">a location</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="119">another location</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_accuracy" c:identifier="geocode_location_get_accuracy">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="830">Gets the accuracy (in meters) of location @loc.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="836">The accuracy of location @loc.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="832">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_altitude" c:identifier="geocode_location_get_altitude">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="813">Gets the altitude of location @loc.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="819">The altitude of location @loc.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="815">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_crs" c:identifier="geocode_location_get_crs">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="847">Gets the Coordinate Reference System Identification of location @loc.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="853">The CRS of location @loc.</doc>
          <type name="LocationCRS" c:type="GeocodeLocationCRS"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="849">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="geocode_location_get_description">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="765">Gets the description of location @loc.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="771">The description of location @loc.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="767">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distance_from"
              c:identifier="geocode_location_get_distance_from">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="956">Calculates the distance in km, along the curvature of the Earth,
between 2 locations. Note that altitude changes are not
taken into account.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="965">a distance in km.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="loca" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="958">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
          <parameter name="locb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="959">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_latitude" c:identifier="geocode_location_get_latitude">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="781">Gets the latitude of location @loc.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="787">The latitude of location @loc.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="783">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_longitude"
              c:identifier="geocode_location_get_longitude">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="797">Gets the longitude of location @loc.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="803">The longitude of location @loc.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="799">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp"
              c:identifier="geocode_location_get_timestamp">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="864">Gets the timestamp (in seconds since the Epoch) of location @loc. See
#GeocodeLocation:timestamp.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="871">The timestamp of location @loc.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="866">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="geocode_location_set_description">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="748">Sets the description of @loc to @description.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="750">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="751">a description for the location</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_from_uri"
              c:identifier="geocode_location_set_from_uri"
              throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="719">Initialize a #GeocodeLocation object with the given @uri.

The URI should be in the geo scheme (RFC 5870) which in its simplest form
looks like:

- geo:latitude,longitude

An &lt;ulink
url="http://developer.android.com/guide/components/intents-common.html#Maps"&gt;
Android extension&lt;/ulink&gt; to set a description is also supported in the form of:

- geo:0,0?q=latitude,longitude(description)</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="738">%TRUE on success and %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="721">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="722">a URI mapping out a location</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_uri" c:identifier="geocode_location_to_uri">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="936">Creates a URI representing @loc in the scheme specified in @scheme.</doc>
        <source-position filename="../geocode-glib/geocode-location.h"
                         line="154"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-location.c"
               line="943">a URI representing the location. The returned string should be freed
with g_free() when no longer needed.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="loc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="938">a #GeocodeLocation</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </instance-parameter>
          <parameter name="scheme" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-location.c"
                 line="939">the scheme of the requested URI</doc>
            <type name="LocationURIScheme" c:type="GeocodeLocationURIScheme"/>
          </parameter>
        </parameters>
      </method>
      <property name="accuracy" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="606">The accuracy of this location in meters.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="altitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="591">The altitude of this location in meters.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="crs"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="622">The Coordinate Reference System Identification of this location.
Only the value 'wgs84' is currently valid.</doc>
        <type name="LocationCRS"/>
      </property>
      <property name="description" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="548">The description of this location.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="latitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="561">The latitude of this location in degrees.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="longitude" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="576">The longitude of this location in degrees.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="timestamp"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.c"
             line="638">A timestamp in seconds since
&lt;ulink url="http://en.wikipedia.org/wiki/Unix_epoch"&gt;Epoch&lt;/ulink&gt;,
giving when the location was resolved from an address.

A value of 0 (zero) will be interpreted as the current time.</doc>
        <type name="guint64" c:type="guint64"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="LocationPrivate" c:type="GeocodeLocationPrivate*"/>
      </field>
    </class>
    <enumeration name="LocationCRS"
                 glib:type-name="GeocodeLocationCRS"
                 glib:get-type="geocode_location_crs_get_type"
                 c:type="GeocodeLocationCRS">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="77">Coordinate Reference System Identification for a location.</doc>
      <member name="wgs84"
              value="0"
              c:identifier="GEOCODE_LOCATION_CRS_WGS84"
              glib:nick="wgs84">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.h"
             line="79">CRS is World Geodetic System, standard for Earth.</doc>
      </member>
    </enumeration>
    <record name="LocationClass"
            c:type="GeocodeLocationClass"
            glib:is-gtype-struct-for="Location">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="55">All the fields in the #GeocodeLocationClass structure are private and should never be accessed directly.</doc>
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="63"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="LocationPrivate"
            c:type="GeocodeLocationPrivate"
            disguised="1">
      <source-position filename="../geocode-glib/geocode-location.h"
                       line="42"/>
    </record>
    <enumeration name="LocationURIScheme"
                 glib:type-name="GeocodeLocationURIScheme"
                 glib:get-type="geocode_location_uri_scheme_get_type"
                 c:type="GeocodeLocationURIScheme">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-location.h"
           line="67">The URI scheme for this location.</doc>
      <member name="geo"
              value="0"
              c:identifier="GEOCODE_LOCATION_URI_SCHEME_GEO"
              glib:nick="geo">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-location.h"
             line="69">The 'geo' URI scheme, RFC 5870</doc>
      </member>
    </enumeration>
    <class name="MockBackend"
           c:symbol-prefix="mock_backend"
           c:type="GeocodeMockBackend"
           version="3.23.1"
           parent="GObject.Object"
           glib:type-name="GeocodeMockBackend"
           glib:get-type="geocode_mock_backend_get_type"
           glib:type-struct="MockBackendClass">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-mock-backend.c"
           line="32">#GeocodeMockBackend is intended to be used in unit tests for applications
which use geocode-glib — it allows them to set the geocode results they
expect their application to query, and check afterwards that the queries
were performed. It works offline, which allows application unit tests to be
run on integration and build machines which are not online. It is not
expected that #GeocodeMockBackend will be used in production code.

To use it, create the backend instance, add the query results to it which
you want to be returned to your application’s queries, then use it as the
#GeocodeBackend for geocode_forward_set_backend() or
geocode_reverse_set_backend(). After a test has been run, the set of queries
which the code under test actually made on the backend can be checked using
geocode_mock_backend_get_query_log(). The backend can be reset using
geocode_mock_backend_clear() and new queries added for the next test.

|[&lt;!-- language="C" --&gt;
static void
place_list_free (GList *l)
{
  g_list_free_full (l, g_object_unref);
}

typedef GList PlaceList;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PlaceList, place_list_free)

g_autoptr (GeocodeForward) forward = NULL;
g_autoptr (GeocodeMockBackend) backend = NULL;
g_autoptr (GHashTable) params = NULL;
GValue location = G_VALUE_INIT;
g_autoptr (PlaceList) results = NULL;
g_autoptr (PlaceList) expected_results = NULL;
g_autoptr (GError) error = NULL;
g_autoptr (GeocodePlace) expected_place = NULL;
g_autoptr (GeocodeLocation) expected_location = NULL;
GPtrArray *query_log;  /&lt;!-- --&gt;* (element-type GeocodeMockBackendQuery) *&lt;!-- --&gt;/

backend = geocode_mock_backend_new ();

/&lt;!-- --&gt;* Build the set of parameters the mock backend expects to receive from
 * the #GeocodeForward instance. *&lt;!-- --&gt;/
params = g_hash_table_new_full (g_str_hash, g_str_equal, NULL, NULL);

g_value_init (&amp;location, G_TYPE_STRING);
g_value_set_static_string (&amp;location, "Bullpot Farm");
g_hash_table_insert (params, (gpointer) "location", &amp;location);

/&lt;!-- --&gt;* Build the set of results the mock backend should return. *&lt;!-- --&gt;/
expected_location = geocode_location_new_with_description (
    54.22759825, -2.51857179181113, 5.0,
    "Bullpot Farm, Fell Road, South Lakeland, Cumbria, "
    "North West England, England, United Kingdom");
expected_place = geocode_place_new_with_location (
    "Bullpot Farm", GEOCODE_PLACE_TYPE_BUILDING, expected_location);
expected_results = g_list_prepend (expected_results,
                                   g_steal_pointer (&amp;expected_place));

geocode_mock_backend_add_forward_result (backend, params,
                                         expected_results, NULL);

/&lt;!-- --&gt;* Do the search. This would typically call the application code
 * under test, rather than geocode-glib directly. *&lt;!-- --&gt;/
forward = geocode_forward_new_for_string ("Bullpot Farm");
geocode_forward_set_backend (forward, GEOCODE_BACKEND (backend));
results = geocode_forward_search (forward, &amp;error);

g_assert_no_error (error);
assert_place_list_equal (results, expected_results);

/&lt;!-- --&gt;* Check the application made the expected query. *&lt;!-- --&gt;/
query_log = geocode_mock_backend_get_query_log (backend);
g_assert_cmpuint (query_log-&gt;len, ==, 1);
]|</doc>
      <source-position filename="../geocode-glib/geocode-mock-backend.h"
                       line="39"/>
      <implements name="Backend"/>
      <constructor name="new"
                   c:identifier="geocode_mock_backend_new"
                   version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.c"
             line="399">Creates a new mock backend implementation with no initial forward or reverse
query results (so it will return an empty result set for all queries).</doc>
        <source-position filename="../geocode-glib/geocode-mock-backend.h"
                         line="50"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-mock-backend.c"
               line="405">a new #GeocodeMockBackend</doc>
          <type name="MockBackend" c:type="GeocodeMockBackend*"/>
        </return-value>
      </constructor>
      <method name="add_forward_result"
              c:identifier="geocode_mock_backend_add_forward_result"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.c"
             line="416">Add a query and corresponding result (or error) to the mock backend, meaning
that if it receives a forward search for @params through
geocode_backend_forward_search() (or its asynchronous variants), the mock
backend will return the given @results or @error to the caller.

If a set of @params is added to the backend multiple times, the most
recently provided @results and @error will be used.

Exactly one of @results and @error must be set. Empty result sets are
represented as a %GEOCODE_ERROR_NO_MATCHES error.</doc>
        <source-position filename="../geocode-glib/geocode-mock-backend.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="418">a #GeocodeMockBackend</doc>
            <type name="MockBackend" c:type="GeocodeMockBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="419">query parameters to
    respond to, in the same format as accepted by geocode_forward_search()</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="results"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="421">result set
    to return for the query, or %NULL if @error is non-%NULL; result sets
    must be in the same format as returned by geocode_forward_search()</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Place"/>
            </type>
          </parameter>
          <parameter name="error"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="424">error to return for the query, or %NULL if @results
    should be returned instead; errors must match those returned by
    geocode_forward_search()</doc>
            <type name="GLib.Error" c:type="const GError*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_reverse_result"
              c:identifier="geocode_mock_backend_add_reverse_result"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.c"
             line="461">Add a query and corresponding result (or error) to the mock backend, meaning
that if it receives a reverse search for @params through
geocode_backend_reverse_resolve() (or its asynchronous variants), the mock
backend will return the given @results or @error to the caller.

If a set of @params is added to the backend multiple times, the most
recently provided @results and @error will be used.

Exactly one of @results and @error must be set. Empty result sets are
represented as a %GEOCODE_ERROR_NOT_SUPPORTED error.</doc>
        <source-position filename="../geocode-glib/geocode-mock-backend.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="463">a #GeocodeMockBackend</doc>
            <type name="MockBackend" c:type="GeocodeMockBackend*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="464">query parameters to
    respond to, in the same format as accepted by geocode_reverse_resolve()</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GObject.Value"/>
            </type>
          </parameter>
          <parameter name="results"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="466">result set
    to return for the query, or %NULL if @error is non-%NULL; result sets
    must be in the same format as returned by geocode_reverse_resolve()</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="Place"/>
            </type>
          </parameter>
          <parameter name="error"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="469">error to return for the query, or %NULL if @results
    should be returned instead; errors must match those returned by
    geocode_reverse_resolve()</doc>
            <type name="GLib.Error" c:type="const GError*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear"
              c:identifier="geocode_mock_backend_clear"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.c"
             line="506">Clear the set of stored results in the mock backend which have been added
using geocode_mock_backend_add_forward_result() and
geocode_mock_backend_add_reverse_result(). Additionally, clear the query log
so far (see geocode_mock_backend_get_query_log()).

This effectively resets the mock backend to its initial state.</doc>
        <source-position filename="../geocode-glib/geocode-mock-backend.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="508">a #GeocodeMockBackend</doc>
            <type name="MockBackend" c:type="GeocodeMockBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_query_log"
              c:identifier="geocode_mock_backend_get_query_log"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.c"
             line="529">Get the details of the forward and reverse queries which have been requested
of the mock backend since the most recent call to
geocode_mock_backend_clear(). The query details are provided as
#GeocodeMockBackendQuery structures, which map the query parameters to
either the result set or the error which geocode_backend_forward_search()
or geocode_backend_reverse_resolve() (or their asynchronous variants)
returned to the caller.

The results are provided in the order in which calls were made to
geocode_backend_forward_search() and geocode_backend_reverse_resolve().
Results for forward and reverse queries may be interleaved.</doc>
        <source-position filename="../geocode-glib/geocode-mock-backend.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-mock-backend.c"
               line="545">potentially
    empty sequence of forward and reverse query details</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="MockBackendQuery"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-mock-backend.c"
                 line="531">a #GeocodeMockBackend</doc>
            <type name="MockBackend" c:type="GeocodeMockBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="MockBackendClass"
            c:type="GeocodeMockBackendClass"
            glib:is-gtype-struct-for="MockBackend">
      <source-position filename="../geocode-glib/geocode-mock-backend.h"
                       line="39"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="MockBackendQuery"
            c:type="GeocodeMockBackendQuery"
            version="3.23.1">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-mock-backend.h"
           line="63">The details of a forward or reverse query which was performed on a
#GeocodeMockBackend by application code. This includes the input (@params,
@is_forward), and the output which was returned (@results or @error).

Empty result sets are represented by the %GEOCODE_ERROR_NO_MATCHES error
(for forward queries) or the %GEOCODE_ERROR_NOT_SUPPORTED error (for reverse
queries), rather than an empty @results list.</doc>
      <source-position filename="../geocode-glib/geocode-mock-backend.h"
                       line="92"/>
      <field name="params" writable="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.h"
             line="65">query parameters, in the format accepted by geocode_forward_search()
    (if @is_forward is %TRUE) or geocode_reverse_resolve() (otherwise)</doc>
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="is_forward" writable="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.h"
             line="67">%TRUE if this represents a call to geocode_forward_search();
    %FALSE if it represents a call to geocode_reverse_resolve()</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="results" writable="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.h"
             line="69">results returned by the
    query, or %NULL if an error was returned</doc>
        <type name="GLib.List" c:type="GList*">
          <type name="Place"/>
        </type>
      </field>
      <field name="error" writable="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-mock-backend.h"
             line="71">error returned by the query, or %NULL if a result set
    was returned</doc>
        <type name="GLib.Error" c:type="GError*"/>
      </field>
    </record>
    <class name="Nominatim"
           c:symbol-prefix="nominatim"
           c:type="GeocodeNominatim"
           version="3.23.1"
           parent="GObject.Object"
           glib:type-name="GeocodeNominatim"
           glib:get-type="geocode_nominatim_get_type"
           glib:type-struct="NominatimClass">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-nominatim.c"
           line="35">Contains functions for geocoding using the
[OSM Nominatim APIs](http://wiki.openstreetmap.org/wiki/Nominatim) exposed
by a Nominatim server at a given URI. By default, the GNOME Nominatim server
is used, but other server details may be given when constructing a
#GeocodeNominatim.</doc>
      <source-position filename="../geocode-glib/geocode-nominatim.h"
                       line="87"/>
      <implements name="Backend"/>
      <constructor name="new"
                   c:identifier="geocode_nominatim_new"
                   version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-nominatim.c"
             line="1332">Creates a new backend implementation for an online Nominatim server. See
the documentation for #GeocodeNominatim:base-url and
#GeocodeNominatim:maintainer-email-address.</doc>
        <source-position filename="../geocode-glib/geocode-nominatim.h"
                         line="89"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-nominatim.c"
               line="1341">a new #GeocodeNominatim. Use g_object_unref() when done.</doc>
          <type name="Nominatim" c:type="GeocodeNominatim*"/>
        </return-value>
        <parameters>
          <parameter name="base_url" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-nominatim.c"
                 line="1334">a the base URL of the Nominatim server.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="maintainer_email_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-nominatim.c"
                 line="1335">the email address of the software maintainer.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_gnome"
                c:identifier="geocode_nominatim_get_gnome"
                version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-nominatim.c"
             line="1302">Gets a reference to the default Nominatim server on nominatim.gnome.org.

This function is thread-safe.</doc>
        <source-position filename="../geocode-glib/geocode-nominatim.h"
                         line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-nominatim.c"
               line="1309">a new #GeocodeNominatim. Use g_object_unref() when done.</doc>
          <type name="Nominatim" c:type="GeocodeNominatim*"/>
        </return-value>
      </function>
      <virtual-method name="query" throws="1">
        <source-position filename="../geocode-glib/geocode-nominatim.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Nominatim" c:type="GeocodeNominatim*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_async">
        <source-position filename="../geocode-glib/geocode-nominatim.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Nominatim" c:type="GeocodeNominatim*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="3">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_finish" throws="1">
        <source-position filename="../geocode-glib/geocode-nominatim.h"
                         line="84"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Nominatim" c:type="GeocodeNominatim*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <property name="base-url"
                version="3.23.1"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-nominatim.c"
             line="1481">The base URL of the Nominatim service, for example
`https://nominatim.example.org`.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="maintainer-email-address"
                version="3.23.1"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-nominatim.c"
             line="1497">E-mail address of the maintainer of the software making the
geocoding requests to the  Nominatim server. This is used to contact
them in the event of a problem with their usage. See
[the Nominatim API](http://wiki.openstreetmap.org/wiki/Nominatim).</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="user-agent"
                version="3.23.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-nominatim.c"
             line="1516">User-Agent string to send with HTTP(S) requests, or %NULL to use the
default user agent, which is derived from the geocode-glib version
and #GApplication:id, for example: `geocode-glib/3.20 (MyAppId)`.

As per the
[Nominatim usage policy](http://wiki.openstreetmap.org/wiki/Nominatim_usage_policy),
it should be set to a string which identifies the application which
is using geocode-glib, and must be a valid
[user agent](https://tools.ietf.org/html/rfc7231#section-5.5.3)
string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="NominatimClass"
            c:type="GeocodeNominatimClass"
            glib:is-gtype-struct-for="Nominatim"
            version="3.23.1">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-nominatim.h"
           line="53">#GeocodeNominatim allows derived classes to override its query functions,
which are called for each network request the Nominatim client makes. All
network requests are `GET`s with no request body; just a URI. The default
implementation makes the requests internally, but derived classes may want
to override these queries to check the URIs for testing, for example.

Applications should not normally have to derive #GeocodeNominatim; these
virtual methods are mainly intended for testing.</doc>
      <source-position filename="../geocode-glib/geocode-nominatim.h"
                       line="87"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="query">
        <callback name="query" throws="1">
          <source-position filename="../geocode-glib/geocode-nominatim.h"
                           line="73"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Nominatim" c:type="GeocodeNominatim*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_async">
        <callback name="query_async">
          <source-position filename="../geocode-glib/geocode-nominatim.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Nominatim" c:type="GeocodeNominatim*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="Gio.Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       scope="async"
                       closure="4">
              <type name="Gio.AsyncReadyCallback"
                    c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="4">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_finish">
        <callback name="query_finish" throws="1">
          <source-position filename="../geocode-glib/geocode-nominatim.h"
                           line="84"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Nominatim" c:type="GeocodeNominatim*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <function-macro name="PLACE"
                    c:identifier="GEOCODE_PLACE"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-place.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PLACE_CLASS"
                    c:identifier="GEOCODE_PLACE_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-place.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PLACE_GET_CLASS"
                    c:identifier="GEOCODE_PLACE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-place.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Place"
           c:symbol-prefix="place"
           c:type="GeocodePlace"
           parent="GObject.Object"
           glib:type-name="GeocodePlace"
           glib:get-type="geocode_place_get_type"
           glib:type-struct="PlaceClass">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-place.c"
           line="30">The #GeocodePlace instance represents a place on earth. While
#GeocodeLocation represents a point on the planet, #GeocodePlace represents
places, e.g street, town, village, county, country or points of interest
(POI) etc.</doc>
      <source-position filename="../geocode-glib/geocode-place.h" line="66"/>
      <constructor name="new" c:identifier="geocode_place_new">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="590">Creates a new #GeocodePlace object.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="167"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="597">a new #GeocodePlace object. Use g_object_unref() when done.</doc>
          <type name="Place" c:type="GeocodePlace*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="592">the name of place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="place_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="593">the type of place</doc>
            <type name="PlaceType" c:type="GeocodePlaceType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_location"
                   c:identifier="geocode_place_new_with_location">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="609">Creates a new #GeocodePlace object.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="169"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="617">a new #GeocodePlace object. Use g_object_unref() when done.</doc>
          <type name="Place" c:type="GeocodePlace*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="611">the name of place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="place_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="612">the type of place</doc>
            <type name="PlaceType" c:type="GeocodePlaceType"/>
          </parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="613">the location info for the place</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal" c:identifier="geocode_place_equal" version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="649">Compare two #GeocodePlace instances for equality. This compares all fields
and only returns %TRUE if the instances are exactly equal. For example, if
both places have the same #GeocodePlace:location, but place @b has its
#GeocodePlace:continent property set and place @a does not, %FALSE will be
returned.

Both instances must be non-%NULL.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="662">%TRUE if the instances are equal, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="651">a place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="652">another place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_administrative_area"
              c:identifier="geocode_place_get_administrative_area">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1068">Gets the local administrative area of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="225"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1074">The local administrative area of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1070">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_area" c:identifier="geocode_place_get_area">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="932">Gets the area of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="209"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="938">The area of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="934">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bounding_box"
              c:identifier="geocode_place_get_bounding_box">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1248">Gets the bounding box for the place @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1254">A #GeocodeBoundingBox, or NULL if boundaries are
unknown.</doc>
          <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1250">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_building" c:identifier="geocode_place_get_building">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="864">Gets the building of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="201"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="870">The building of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="866">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_continent" c:identifier="geocode_place_get_continent">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1170">Gets the continent of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="237"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1176">The continent of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1172">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_country" c:identifier="geocode_place_get_country">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1136">Gets the country of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="233"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1142">The country of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1138">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_country_code"
              c:identifier="geocode_place_get_country_code">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1102">Gets the ISO-3166 country code of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="229"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1108">The ISO-3166 country code of the @place, in upper case.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1104">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_county" c:identifier="geocode_place_get_county">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1000">Gets the county of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="217"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1006">The country of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1002">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon" c:identifier="geocode_place_get_icon">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1228">Gets the #GIcon representing the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="239"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1234">The #GIcon representing the @place.</doc>
          <type name="Gio.Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1230">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location" c:identifier="geocode_place_get_location">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="762">Gets the associated location object.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="768">The associated location object.</doc>
          <type name="Location" c:type="GeocodeLocation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="764">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="geocode_place_get_name">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="710">Gets the name of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="716">The name of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="712">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_osm_id" c:identifier="geocode_place_get_osm_id">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1284">Gets the OpenStreetMap ID of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="241"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1290">The osm ID of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1286">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_osm_type" c:identifier="geocode_place_get_osm_type">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1300">Gets the OpenStreetMap type of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="242"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1306">The osm type of the @place.</doc>
          <type name="PlaceOsmType" c:type="GeocodePlaceOsmType"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1302">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_place_type"
              c:identifier="geocode_place_get_place_type">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="727">Gets the type of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="733">The type of the @place.</doc>
          <type name="PlaceType" c:type="GeocodePlaceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="729">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_postal_code"
              c:identifier="geocode_place_get_postal_code">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="898">Gets the postal code of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="904">The postal code of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="900">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="geocode_place_get_state">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1034">Gets the state of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="221"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="1040">The state of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1036">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_street" c:identifier="geocode_place_get_street">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="830">Gets the street of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="836">The street of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="832">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_street_address"
              c:identifier="geocode_place_get_street_address">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="796">Gets the street address of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="802">The street address of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="798">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_town" c:identifier="geocode_place_get_town">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="966">Gets the town of the @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="213"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-place.c"
               line="972">The town of the @place.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="968">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_administrative_area"
              c:identifier="geocode_place_set_administrative_area">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1050">Sets the local administrative area of @place to @admin_area.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="223"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1052">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="admin_area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1053">an administrative area for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_area" c:identifier="geocode_place_set_area">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="914">Sets the area of @place to @area.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="207"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="916">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="917">a area</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bounding_box"
              c:identifier="geocode_place_set_bounding_box">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1265">Sets the #GeocodeBoundingBox for the place @place.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1267">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="bbox" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1268">A #GeocodeBoundingBox for the place</doc>
            <type name="BoundingBox" c:type="GeocodeBoundingBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_building" c:identifier="geocode_place_set_building">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="846">Sets the building of @place to @building.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="199"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="848">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="building" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="849">a building</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_continent" c:identifier="geocode_place_set_continent">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1152">Sets the continent of @place to @continent.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1154">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="continent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1155">a continent for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_country" c:identifier="geocode_place_set_country">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1118">Sets the country of @place to @country.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="231"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1120">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="country" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1121">a country for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_country_code"
              c:identifier="geocode_place_set_country_code">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1084">Sets the ISO country code of @place to @country_code.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="227"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1086">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="country_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1087">an ISO country code for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_county" c:identifier="geocode_place_set_county">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="982">Sets the county of @place to @county.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="215"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="984">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="county" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="985">a county for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location" c:identifier="geocode_place_set_location">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="744">Sets the location of @place to @location.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="187"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="746">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="747">A location</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="geocode_place_set_name">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="692">Sets the name of the @place to @name.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="694">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="695">the name of place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_postal_code"
              c:identifier="geocode_place_set_postal_code">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="880">Sets the postal code of @place to @postal_code.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="203"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="882">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="postal_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="883">a postal code for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_state" c:identifier="geocode_place_set_state">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="1016">Sets the state of @place to @state.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="219"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1018">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="1019">a state for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_street" c:identifier="geocode_place_set_street">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="812">Sets the street of @place to @street.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="814">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="street" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="815">a street</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_street_address"
              c:identifier="geocode_place_set_street_address">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="778">Sets the street address of @place to @street_address.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="780">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="street_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="781">a street address for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_town" c:identifier="geocode_place_set_town">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="948">Sets the town of @place to @town.</doc>
        <source-position filename="../geocode-glib/geocode-place.h"
                         line="211"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="place" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="950">A place</doc>
            <type name="Place" c:type="GeocodePlace*"/>
          </instance-parameter>
          <parameter name="town" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-place.c"
                 line="951">a town for the place</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="administrative-area"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="474">The local administrative area.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="area" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="422">A named area such as a campus or neighborhood.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="bounding-box" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="539">The bounding box for the place.</doc>
        <type name="BoundingBox"/>
      </property>
      <property name="building" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="396">A specific building on a street or in an area.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="continent" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="513">The continent.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="country" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="500">The country.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="country-code" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="487">The country code.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="county" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="461">The county.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="526">#GIcon representing the @GeocodePlace.</doc>
        <type name="Gio.Icon"/>
      </property>
      <property name="location" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="357">The location info for the place.</doc>
        <type name="Location"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="329">The name of the place.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="osm-id" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="552">The OpenStreetMap id of the place.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="osm-type" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="565">The OpenStreetMap type of the place.</doc>
        <type name="PlaceOsmType"/>
      </property>
      <property name="place-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="342">The type of the place.</doc>
        <type name="PlaceType"/>
      </property>
      <property name="postal-code" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="409">The postal code.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="state" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="448">The state.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="street" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="383">The street name.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="street-address" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="370">The street address.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="town" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.c"
             line="435">The town.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PlacePrivate" c:type="GeocodePlacePrivate*"/>
      </field>
    </class>
    <record name="PlaceClass"
            c:type="GeocodePlaceClass"
            glib:is-gtype-struct-for="Place">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-place.h"
           line="58">All the fields in the #GeocodePlaceClass structure are private and should never be accessed directly.</doc>
      <source-position filename="../geocode-glib/geocode-place.h" line="66"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="PlaceOsmType"
                 glib:type-name="GeocodePlaceOsmType"
                 glib:get-type="geocode_place_osm_type_get_type"
                 c:type="GeocodePlaceOsmType">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-place.h"
           line="149">Osm type of the place.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GEOCODE_PLACE_OSM_TYPE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="151">Unknown type</doc>
      </member>
      <member name="node"
              value="1"
              c:identifier="GEOCODE_PLACE_OSM_TYPE_NODE"
              glib:nick="node">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="152">Defines a point in space.</doc>
      </member>
      <member name="relation"
              value="2"
              c:identifier="GEOCODE_PLACE_OSM_TYPE_RELATION"
              glib:nick="relation">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="153">Used to explain how other elements work together.</doc>
      </member>
      <member name="way"
              value="3"
              c:identifier="GEOCODE_PLACE_OSM_TYPE_WAY"
              glib:nick="way">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="154">Defines a linear feature and area boundaries.</doc>
      </member>
    </enumeration>
    <record name="PlacePrivate" c:type="GeocodePlacePrivate" disguised="1">
      <source-position filename="../geocode-glib/geocode-place.h" line="45"/>
    </record>
    <enumeration name="PlaceType"
                 glib:type-name="GeocodePlaceType"
                 glib:get-type="geocode_place_type_get_type"
                 c:type="GeocodePlaceType">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-place.h"
           line="70">Type of the place.</doc>
      <member name="unknown"
              value="0"
              c:identifier="GEOCODE_PLACE_TYPE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="72">Type is unknown for this place.</doc>
      </member>
      <member name="building"
              value="1"
              c:identifier="GEOCODE_PLACE_TYPE_BUILDING"
              glib:nick="building">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="73">A building or house.</doc>
      </member>
      <member name="street"
              value="2"
              c:identifier="GEOCODE_PLACE_TYPE_STREET"
              glib:nick="street">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="74">A street.</doc>
      </member>
      <member name="town"
              value="3"
              c:identifier="GEOCODE_PLACE_TYPE_TOWN"
              glib:nick="town">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="75">A populated settlement such as a city, town, village.</doc>
      </member>
      <member name="state"
              value="4"
              c:identifier="GEOCODE_PLACE_TYPE_STATE"
              glib:nick="state">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="76">One of the primary administrative areas within a country.</doc>
      </member>
      <member name="county"
              value="5"
              c:identifier="GEOCODE_PLACE_TYPE_COUNTY"
              glib:nick="county">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="77">One of the secondary administrative areas within a country.</doc>
      </member>
      <member name="local_administrative_area"
              value="6"
              c:identifier="GEOCODE_PLACE_TYPE_LOCAL_ADMINISTRATIVE_AREA"
              glib:nick="local-administrative-area">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="78">One of the tertiary administrative areas within a country.</doc>
      </member>
      <member name="postal_code"
              value="7"
              c:identifier="GEOCODE_PLACE_TYPE_POSTAL_CODE"
              glib:nick="postal-code">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="79">A partial or full postal code.</doc>
      </member>
      <member name="country"
              value="8"
              c:identifier="GEOCODE_PLACE_TYPE_COUNTRY"
              glib:nick="country">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="80">One of the countries or dependent territories defined by the ISO 3166-1 standard.</doc>
      </member>
      <member name="island"
              value="9"
              c:identifier="GEOCODE_PLACE_TYPE_ISLAND"
              glib:nick="island">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="81">An island.</doc>
      </member>
      <member name="airport"
              value="10"
              c:identifier="GEOCODE_PLACE_TYPE_AIRPORT"
              glib:nick="airport">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="82">An airport.</doc>
      </member>
      <member name="railway_station"
              value="11"
              c:identifier="GEOCODE_PLACE_TYPE_RAILWAY_STATION"
              glib:nick="railway-station">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="83">A railway station.</doc>
      </member>
      <member name="bus_stop"
              value="12"
              c:identifier="GEOCODE_PLACE_TYPE_BUS_STOP"
              glib:nick="bus-stop">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="84">A bus stop.</doc>
      </member>
      <member name="motorway"
              value="13"
              c:identifier="GEOCODE_PLACE_TYPE_MOTORWAY"
              glib:nick="motorway">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="85">A high capacity highways designed to safely carry fast motor traffic.</doc>
      </member>
      <member name="drainage"
              value="14"
              c:identifier="GEOCODE_PLACE_TYPE_DRAINAGE"
              glib:nick="drainage">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="86">A water feature such as a river, canal, lake, bay or ocean.</doc>
      </member>
      <member name="land_feature"
              value="15"
              c:identifier="GEOCODE_PLACE_TYPE_LAND_FEATURE"
              glib:nick="land-feature">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="87">A land feature such as a park, mountain or beach.</doc>
      </member>
      <member name="miscellaneous"
              value="16"
              c:identifier="GEOCODE_PLACE_TYPE_MISCELLANEOUS"
              glib:nick="miscellaneous">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="88">A uncategorized place.</doc>
      </member>
      <member name="supername"
              value="17"
              c:identifier="GEOCODE_PLACE_TYPE_SUPERNAME"
              glib:nick="supername">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="89">An area covering multiple countries.</doc>
      </member>
      <member name="point_of_interest"
              value="18"
              c:identifier="GEOCODE_PLACE_TYPE_POINT_OF_INTEREST"
              glib:nick="point-of-interest">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="90">A point of interest such as a school, hospital or tourist attraction.</doc>
      </member>
      <member name="suburb"
              value="19"
              c:identifier="GEOCODE_PLACE_TYPE_SUBURB"
              glib:nick="suburb">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="91">A subdivision of a town such as a suburb or neighborhood.</doc>
      </member>
      <member name="colloquial"
              value="20"
              c:identifier="GEOCODE_PLACE_TYPE_COLLOQUIAL"
              glib:nick="colloquial">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="92">A place known by a colloquial name.</doc>
      </member>
      <member name="zone"
              value="21"
              c:identifier="GEOCODE_PLACE_TYPE_ZONE"
              glib:nick="zone">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="93">An area known within a specific context such as MSA or area code.</doc>
      </member>
      <member name="historical_state"
              value="22"
              c:identifier="GEOCODE_PLACE_TYPE_HISTORICAL_STATE"
              glib:nick="historical-state">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="94">A historical primary administrative area within a country.</doc>
      </member>
      <member name="historical_county"
              value="23"
              c:identifier="GEOCODE_PLACE_TYPE_HISTORICAL_COUNTY"
              glib:nick="historical-county">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="95">A historical secondary administrative area within a country.</doc>
      </member>
      <member name="continent"
              value="24"
              c:identifier="GEOCODE_PLACE_TYPE_CONTINENT"
              glib:nick="continent">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="96">One of the major land masses on the Earth.</doc>
      </member>
      <member name="time_zone"
              value="25"
              c:identifier="GEOCODE_PLACE_TYPE_TIME_ZONE"
              glib:nick="time-zone">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="97">An area defined by the Olson standard (tz database).</doc>
      </member>
      <member name="estate"
              value="26"
              c:identifier="GEOCODE_PLACE_TYPE_ESTATE"
              glib:nick="estate">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="98">A housing development or subdivision known by name.</doc>
      </member>
      <member name="historical_town"
              value="27"
              c:identifier="GEOCODE_PLACE_TYPE_HISTORICAL_TOWN"
              glib:nick="historical-town">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="99">A historical populated settlement that is no longer known by its original name.</doc>
      </member>
      <member name="ocean"
              value="28"
              c:identifier="GEOCODE_PLACE_TYPE_OCEAN"
              glib:nick="ocean">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="100">One of the five major bodies of water on the Earth.</doc>
      </member>
      <member name="sea"
              value="29"
              c:identifier="GEOCODE_PLACE_TYPE_SEA"
              glib:nick="sea">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="101">An area of open water smaller than an ocean.</doc>
      </member>
      <member name="school"
              value="30"
              c:identifier="GEOCODE_PLACE_TYPE_SCHOOL"
              glib:nick="school">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="102">Institution designed for learning under the supervision of teachers.</doc>
      </member>
      <member name="place_of_worship"
              value="31"
              c:identifier="GEOCODE_PLACE_TYPE_PLACE_OF_WORSHIP"
              glib:nick="place-of-worship">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="103">All places of worship independently of the religion or denomination.</doc>
      </member>
      <member name="restaurant"
              value="32"
              c:identifier="GEOCODE_PLACE_TYPE_RESTAURANT"
              glib:nick="restaurant">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="104">Generally formal place with sit-down facilities selling full meals served by waiters.</doc>
      </member>
      <member name="bar"
              value="33"
              c:identifier="GEOCODE_PLACE_TYPE_BAR"
              glib:nick="bar">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="105">A bar or pub.</doc>
      </member>
      <member name="light_rail_station"
              value="34"
              c:identifier="GEOCODE_PLACE_TYPE_LIGHT_RAIL_STATION"
              glib:nick="light-rail-station">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-place.h"
             line="106">A light rail station or tram stop.</doc>
      </member>
    </enumeration>
    <function-macro name="REVERSE"
                    c:identifier="GEOCODE_REVERSE"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-reverse.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="REVERSE_CLASS"
                    c:identifier="GEOCODE_REVERSE_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-reverse.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="REVERSE_GET_CLASS"
                    c:identifier="GEOCODE_REVERSE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../geocode-glib/geocode-reverse.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Reverse"
           c:symbol-prefix="reverse"
           c:type="GeocodeReverse"
           parent="GObject.Object"
           glib:type-name="GeocodeReverse"
           glib:get-type="geocode_reverse_get_type"
           glib:type-struct="ReverseClass">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-reverse.c"
           line="36">Contains functions for reverse geocoding using the
&lt;ulink url="http://wiki.openstreetmap.org/wiki/Nominatim"&gt;OSM Nominatim APIs&lt;/ulink&gt;</doc>
      <source-position filename="../geocode-glib/geocode-reverse.h" line="65"/>
      <constructor name="new_for_location"
                   c:identifier="geocode_reverse_new_for_location">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-reverse.c"
             line="82">Creates a new #GeocodeReverse to perform reverse geocoding with.
Use geocode_reverse_resolve_async() to perform the resolution.</doc>
        <source-position filename="../geocode-glib/geocode-reverse.h"
                         line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-reverse.c"
               line="89">a new #GeocodeReverse. Use g_object_unref() when done.</doc>
          <type name="Reverse" c:type="GeocodeReverse*"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="84">a #GeocodeLocation object</doc>
            <type name="Location" c:type="GeocodeLocation*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="resolve" c:identifier="geocode_reverse_resolve" throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-reverse.c"
             line="235">Gets the result of a reverse geocoding
query using the current backend (see geocode_reverse_set_backend()). By
default the GNOME Nominatim server is used. See #GeocodeBackend for more
information.

If no result could be found, a %GEOCODE_ERROR_NOT_SUPPORTED error will be
returned. This typically happens if the coordinates to geocode are in the
middle of the ocean.</doc>
        <source-position filename="../geocode-glib/geocode-reverse.h"
                         line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-reverse.c"
               line="249">A #GeocodePlace instance, or %NULL in case of
errors. Free the returned instance with #g_object_unref() when done.</doc>
          <type name="Place" c:type="GeocodePlace*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="237">a #GeocodeReverse representing a query</doc>
            <type name="Reverse" c:type="GeocodeReverse*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="resolve_async"
              c:identifier="geocode_reverse_resolve_async">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-reverse.c"
             line="172">Asynchronously gets the result of a reverse geocoding
query using a web service. Use geocode_reverse_resolve() to do the same
thing synchronously.

When the operation is finished, @callback will be called. You can then call
geocode_reverse_resolve_finish() to get the result of the operation.</doc>
        <source-position filename="../geocode-glib/geocode-reverse.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="174">a #GeocodeReverse representing a query</doc>
            <type name="Reverse" c:type="GeocodeReverse*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="175">optional #GCancellable object, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="176">a #GAsyncReadyCallback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="177">the data to pass to callback function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="resolve_finish"
              c:identifier="geocode_reverse_resolve_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-reverse.c"
             line="212">Finishes a reverse geocoding operation. See geocode_reverse_resolve_async().</doc>
        <source-position filename="../geocode-glib/geocode-reverse.h"
                         line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../geocode-glib/geocode-reverse.c"
               line="220">A #GeocodePlace instance, or %NULL in case of
errors. Free the returned instance with #g_object_unref() when done.</doc>
          <type name="Place" c:type="GeocodePlace*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="214">a #GeocodeReverse representing a query</doc>
            <type name="Reverse" c:type="GeocodeReverse*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="215">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_backend"
              c:identifier="geocode_reverse_set_backend"
              version="3.23.1">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-reverse.c"
             line="280">Specifies the backend to use in the reverse geocoding operation.

If none is given, the default GNOME Nominatim server is used.</doc>
        <source-position filename="../geocode-glib/geocode-reverse.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="282">a #GeocodeReverse representing a query</doc>
            <type name="Reverse" c:type="GeocodeReverse*"/>
          </instance-parameter>
          <parameter name="backend"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../geocode-glib/geocode-reverse.c"
                 line="283">a #GeocodeBackend, or %NULL to use the default one.</doc>
            <type name="Backend" c:type="GeocodeBackend*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ReversePrivate" c:type="GeocodeReversePrivate*"/>
      </field>
    </class>
    <record name="ReverseClass"
            c:type="GeocodeReverseClass"
            glib:is-gtype-struct-for="Reverse">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-reverse.h"
           line="57">All the fields in the #GeocodeReverseClass structure are private and should never be accessed directly.</doc>
      <source-position filename="../geocode-glib/geocode-reverse.h" line="65"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ReversePrivate" c:type="GeocodeReversePrivate" disguised="1">
      <source-position filename="../geocode-glib/geocode-reverse.h" line="49"/>
    </record>
    <function name="error_quark"
              c:identifier="geocode_error_quark"
              moved-to="Error.quark">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-error.c"
           line="33">Gets the geocode-glib error quark.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../geocode-glib/geocode-error.c"
             line="38">a #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <docsection name="geocodeerror">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-error.c"
           line="25">Contains helper functions for reporting errors to the user.</doc>
    </docsection>
    <docsection name="geocodeglib">
      <doc xml:space="preserve"
           filename="../geocode-glib/geocode-glib.c"
           line="33">Contains functions for geocoding and reverse geocoding using the
&lt;ulink url="http://wiki.openstreetmap.org/wiki/Nominatim"&gt;OSM Nominatim APIs&lt;/ulink&gt;</doc>
    </docsection>
  </namespace>
</repository>

/* libguestfs-gobject-1.0.vapi generated by vapigen-0.44, do not modify. */

[CCode (cprefix = "Guestfs", gir_namespace = "Guestfs", gir_version = "1.0", lower_case_cprefix = "guestfs_")]
namespace Guestfs {
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_add_domain_get_type ()")]
	public class AddDomain : GLib.Object {
		[CCode (has_construct_function = false)]
		public AddDomain ();
		[NoAccessorMethod]
		public Guestfs.Tristate allowuuid { get; set construct; }
		[NoAccessorMethod]
		public string cachemode { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate copyonread { get; set construct; }
		[NoAccessorMethod]
		public string discard { owned get; set construct; }
		[NoAccessorMethod]
		public string iface { owned get; set construct; }
		[NoAccessorMethod]
		public string libvirturi { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate live { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate readonly { get; set construct; }
		[NoAccessorMethod]
		public string readonlydisk { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_add_drive_get_type ()")]
	public class AddDrive : GLib.Object {
		[CCode (has_construct_function = false)]
		public AddDrive ();
		[NoAccessorMethod]
		public string cachemode { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate copyonread { get; set construct; }
		[NoAccessorMethod]
		public string discard { owned get; set construct; }
		[NoAccessorMethod]
		public string format { owned get; set construct; }
		[NoAccessorMethod]
		public string iface { owned get; set construct; }
		[NoAccessorMethod]
		public string label { owned get; set construct; }
		[NoAccessorMethod]
		public string name { owned get; set construct; }
		[NoAccessorMethod]
		public string protocol { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate readonly { get; set construct; }
		[NoAccessorMethod]
		public string secret { owned get; set construct; }
		[NoAccessorMethod]
		public string username { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_add_drive_scratch_get_type ()")]
	public class AddDriveScratch : GLib.Object {
		[CCode (has_construct_function = false)]
		public AddDriveScratch ();
		[NoAccessorMethod]
		public string label { owned get; set construct; }
		[NoAccessorMethod]
		public string name { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_add_libvirt_dom_get_type ()")]
	public class AddLibvirtDom : GLib.Object {
		[CCode (has_construct_function = false)]
		public AddLibvirtDom ();
		[NoAccessorMethod]
		public string cachemode { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate copyonread { get; set construct; }
		[NoAccessorMethod]
		public string discard { owned get; set construct; }
		[NoAccessorMethod]
		public string iface { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate live { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate readonly { get; set construct; }
		[NoAccessorMethod]
		public string readonlydisk { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_application_get_type ()")]
	[Compact]
	public class Application {
		public weak string app_description;
		public weak string app_display_name;
		public int32 app_epoch;
		public weak string app_install_path;
		public weak string app_name;
		public weak string app_publisher;
		public weak string app_release;
		public weak string app_source_package;
		public weak string app_summary;
		public weak string app_trans_path;
		public weak string app_url;
		public weak string app_version;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_application2_get_type ()")]
	[Compact]
	public class Application2 {
		public weak string app2_arch;
		public weak string app2_description;
		public weak string app2_display_name;
		public int32 app2_epoch;
		public weak string app2_install_path;
		public weak string app2_name;
		public weak string app2_publisher;
		public weak string app2_release;
		public weak string app2_source_package;
		public weak string app2_spare1;
		public weak string app2_spare2;
		public weak string app2_spare3;
		public weak string app2_spare4;
		public weak string app2_summary;
		public weak string app2_trans_path;
		public weak string app2_url;
		public weak string app2_version;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_aug_transform_get_type ()")]
	public class AugTransform : GLib.Object {
		[CCode (has_construct_function = false)]
		public AugTransform ();
		[NoAccessorMethod]
		public Guestfs.Tristate remove { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "btrfsbalance", type_id = "guestfs_btrfsbalance_get_type ()")]
	[Compact]
	public class BTRFSBalance {
		public uint64 btrfsbalance_balanced;
		public uint64 btrfsbalance_considered;
		public uint64 btrfsbalance_left;
		public weak string btrfsbalance_status;
		public uint64 btrfsbalance_total;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_btrfs_filesystem_defragment_get_type ()")]
	public class BTRFSFilesystemDefragment : GLib.Object {
		[CCode (has_construct_function = false)]
		public BTRFSFilesystemDefragment ();
		[NoAccessorMethod]
		public string compress { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate flush { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_btrfs_filesystem_resize_get_type ()")]
	public class BTRFSFilesystemResize : GLib.Object {
		[CCode (has_construct_function = false)]
		public BTRFSFilesystemResize ();
		[NoAccessorMethod]
		public int64 size { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_btrfs_image_get_type ()")]
	public class BTRFSImage : GLib.Object {
		[CCode (has_construct_function = false)]
		public BTRFSImage ();
		[NoAccessorMethod]
		public int compresslevel { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "btrfsqgroup", type_id = "guestfs_btrfsqgroup_get_type ()")]
	[Compact]
	public class BTRFSQgroup {
		public uint64 btrfsqgroup_excl;
		public weak string btrfsqgroup_id;
		public uint64 btrfsqgroup_rfer;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "btrfsscrub", type_id = "guestfs_btrfsscrub_get_type ()")]
	[Compact]
	public class BTRFSScrub {
		public uint64 btrfsscrub_corrected_errors;
		public uint64 btrfsscrub_csum_discards;
		public uint64 btrfsscrub_csum_errors;
		public uint64 btrfsscrub_data_bytes_scrubbed;
		public uint64 btrfsscrub_data_extents_scrubbed;
		public uint64 btrfsscrub_last_physical;
		public uint64 btrfsscrub_malloc_errors;
		public uint64 btrfsscrub_no_csum;
		public uint64 btrfsscrub_read_errors;
		public uint64 btrfsscrub_super_errors;
		public uint64 btrfsscrub_tree_bytes_scrubbed;
		public uint64 btrfsscrub_tree_extents_scrubbed;
		public uint64 btrfsscrub_uncorrectable_errors;
		public uint64 btrfsscrub_unverified_errors;
		public uint64 btrfsscrub_verify_errors;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "btrfssubvolume", type_id = "guestfs_btrfssubvolume_get_type ()")]
	[Compact]
	public class BTRFSSubvolume {
		public uint64 btrfssubvolume_id;
		public weak string btrfssubvolume_path;
		public uint64 btrfssubvolume_top_level_id;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_btrfs_subvolume_create_get_type ()")]
	public class BTRFSSubvolumeCreate : GLib.Object {
		[CCode (has_construct_function = false)]
		public BTRFSSubvolumeCreate ();
		[NoAccessorMethod]
		public string qgroupid { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_btrfs_subvolume_snapshot_get_type ()")]
	public class BTRFSSubvolumeSnapshot : GLib.Object {
		[CCode (has_construct_function = false)]
		public BTRFSSubvolumeSnapshot ();
		[NoAccessorMethod]
		public string qgroupid { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate ro { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_btrfs_fsck_get_type ()")]
	public class BtrfsFsck : GLib.Object {
		[CCode (has_construct_function = false)]
		public BtrfsFsck ();
		[NoAccessorMethod]
		public Guestfs.Tristate repair { get; set construct; }
		[NoAccessorMethod]
		public int64 superblock { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_compress_device_out_get_type ()")]
	public class CompressDeviceOut : GLib.Object {
		[CCode (has_construct_function = false)]
		public CompressDeviceOut ();
		[NoAccessorMethod]
		public int level { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_compress_out_get_type ()")]
	public class CompressOut : GLib.Object {
		[CCode (has_construct_function = false)]
		public CompressOut ();
		[NoAccessorMethod]
		public int level { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_copy_attributes_get_type ()")]
	public class CopyAttributes : GLib.Object {
		[CCode (has_construct_function = false)]
		public CopyAttributes ();
		[NoAccessorMethod]
		public Guestfs.Tristate all { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate mode { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate ownership { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate xattributes { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_copy_device_to_device_get_type ()")]
	public class CopyDeviceToDevice : GLib.Object {
		[CCode (has_construct_function = false)]
		public CopyDeviceToDevice ();
		[NoAccessorMethod]
		public Guestfs.Tristate append { get; set construct; }
		[NoAccessorMethod]
		public int64 destoffset { get; set construct; }
		[NoAccessorMethod]
		public int64 size { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate sparse { get; set construct; }
		[NoAccessorMethod]
		public int64 srcoffset { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_copy_device_to_file_get_type ()")]
	public class CopyDeviceToFile : GLib.Object {
		[CCode (has_construct_function = false)]
		public CopyDeviceToFile ();
		[NoAccessorMethod]
		public Guestfs.Tristate append { get; set construct; }
		[NoAccessorMethod]
		public int64 destoffset { get; set construct; }
		[NoAccessorMethod]
		public int64 size { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate sparse { get; set construct; }
		[NoAccessorMethod]
		public int64 srcoffset { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_copy_file_to_device_get_type ()")]
	public class CopyFileToDevice : GLib.Object {
		[CCode (has_construct_function = false)]
		public CopyFileToDevice ();
		[NoAccessorMethod]
		public Guestfs.Tristate append { get; set construct; }
		[NoAccessorMethod]
		public int64 destoffset { get; set construct; }
		[NoAccessorMethod]
		public int64 size { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate sparse { get; set construct; }
		[NoAccessorMethod]
		public int64 srcoffset { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_copy_file_to_file_get_type ()")]
	public class CopyFileToFile : GLib.Object {
		[CCode (has_construct_function = false)]
		public CopyFileToFile ();
		[NoAccessorMethod]
		public Guestfs.Tristate append { get; set construct; }
		[NoAccessorMethod]
		public int64 destoffset { get; set construct; }
		[NoAccessorMethod]
		public int64 size { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate sparse { get; set construct; }
		[NoAccessorMethod]
		public int64 srcoffset { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_cpio_out_get_type ()")]
	public class CpioOut : GLib.Object {
		[CCode (has_construct_function = false)]
		public CpioOut ();
		[NoAccessorMethod]
		public string format { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_dirent_get_type ()")]
	[Compact]
	public class Dirent {
		public char ftyp;
		public int64 ino;
		public weak string name;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_disk_create_get_type ()")]
	public class DiskCreate : GLib.Object {
		[CCode (has_construct_function = false)]
		public DiskCreate ();
		[NoAccessorMethod]
		public string backingfile { owned get; set construct; }
		[NoAccessorMethod]
		public string backingformat { owned get; set construct; }
		[NoAccessorMethod]
		public int clustersize { get; set construct; }
		[NoAccessorMethod]
		public string compat { owned get; set construct; }
		[NoAccessorMethod]
		public string preallocation { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_download_blocks_get_type ()")]
	public class DownloadBlocks : GLib.Object {
		[CCode (has_construct_function = false)]
		public DownloadBlocks ();
		[NoAccessorMethod]
		public Guestfs.Tristate unallocated { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_e2fsck_get_type ()")]
	public class E2fsck : GLib.Object {
		[CCode (has_construct_function = false)]
		public E2fsck ();
		[NoAccessorMethod]
		public Guestfs.Tristate correct { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate forceall { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_fstrim_get_type ()")]
	public class Fstrim : GLib.Object {
		[CCode (has_construct_function = false)]
		public Fstrim ();
		[NoAccessorMethod]
		public int64 length { get; set construct; }
		[NoAccessorMethod]
		public int64 minimumfreeextent { get; set construct; }
		[NoAccessorMethod]
		public int64 offset { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_glob_expand_get_type ()")]
	public class GlobExpand : GLib.Object {
		[CCode (has_construct_function = false)]
		public GlobExpand ();
		[NoAccessorMethod]
		public Guestfs.Tristate directoryslash { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_grep_get_type ()")]
	public class Grep : GLib.Object {
		[CCode (has_construct_function = false)]
		public Grep ();
		[NoAccessorMethod]
		public Guestfs.Tristate compressed { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate extended { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate fixed { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate insensitive { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_hivex_node_get_type ()")]
	[Compact]
	public class HivexNode {
		public int64 hivex_node_h;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_hivex_open_get_type ()")]
	public class HivexOpen : GLib.Object {
		[CCode (has_construct_function = false)]
		public HivexOpen ();
		[NoAccessorMethod]
		public Guestfs.Tristate debug { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate unsafe { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate verbose { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate write { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_hivex_value_get_type ()")]
	[Compact]
	public class HivexValue {
		public int64 hivex_value_h;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_inotify_event_get_type ()")]
	[Compact]
	public class INotifyEvent {
		public uint32 in_cookie;
		public uint32 in_mask;
		public weak string in_name;
		public int64 in_wd;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "isoinfo", type_id = "guestfs_isoinfo_get_type ()")]
	[Compact]
	public class ISOInfo {
		public weak string iso_abstract_file_id;
		public weak string iso_application_id;
		public weak string iso_bibliographic_file_id;
		public weak string iso_copyright_file_id;
		public weak string iso_data_preparer_id;
		public uint32 iso_logical_block_size;
		public weak string iso_publisher_id;
		public weak string iso_system_id;
		public int64 iso_volume_creation_t;
		public int64 iso_volume_effective_t;
		public int64 iso_volume_expiration_t;
		public weak string iso_volume_id;
		public int64 iso_volume_modification_t;
		public uint32 iso_volume_sequence_number;
		public weak string iso_volume_set_id;
		public uint32 iso_volume_set_size;
		public uint32 iso_volume_space_size;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_inspect_get_icon_get_type ()")]
	public class InspectGetIcon : GLib.Object {
		[CCode (has_construct_function = false)]
		public InspectGetIcon ();
		[NoAccessorMethod]
		public Guestfs.Tristate favicon { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate highquality { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_int_bool_get_type ()")]
	[Compact]
	public class IntBool {
		public int32 b;
		public int32 i;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_internal_test_get_type ()")]
	public class InternalTest : GLib.Object {
		[CCode (has_construct_function = false)]
		public InternalTest ();
		[NoAccessorMethod]
		public Guestfs.Tristate obool { get; set construct; }
		[NoAccessorMethod]
		public int oint { get; set construct; }
		[NoAccessorMethod]
		public int64 oint64 { get; set construct; }
		[NoAccessorMethod]
		public string ostring { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", lower_case_csuffix = "internal_test_63_optargs", type_id = "guestfs_internal_test_63_optargs_get_type ()")]
	public class InternalTest63Optargs : GLib.Object {
		[CCode (has_construct_function = false)]
		public InternalTest63Optargs ();
		[NoAccessorMethod]
		public int opt1 { get; set construct; }
		[NoAccessorMethod]
		public int opt10 { get; set construct; }
		[NoAccessorMethod]
		public int opt11 { get; set construct; }
		[NoAccessorMethod]
		public int opt12 { get; set construct; }
		[NoAccessorMethod]
		public int opt13 { get; set construct; }
		[NoAccessorMethod]
		public int opt14 { get; set construct; }
		[NoAccessorMethod]
		public int opt15 { get; set construct; }
		[NoAccessorMethod]
		public int opt16 { get; set construct; }
		[NoAccessorMethod]
		public int opt17 { get; set construct; }
		[NoAccessorMethod]
		public int opt18 { get; set construct; }
		[NoAccessorMethod]
		public int opt19 { get; set construct; }
		[NoAccessorMethod]
		public int opt2 { get; set construct; }
		[NoAccessorMethod]
		public int opt20 { get; set construct; }
		[NoAccessorMethod]
		public int opt21 { get; set construct; }
		[NoAccessorMethod]
		public int opt22 { get; set construct; }
		[NoAccessorMethod]
		public int opt23 { get; set construct; }
		[NoAccessorMethod]
		public int opt24 { get; set construct; }
		[NoAccessorMethod]
		public int opt25 { get; set construct; }
		[NoAccessorMethod]
		public int opt26 { get; set construct; }
		[NoAccessorMethod]
		public int opt27 { get; set construct; }
		[NoAccessorMethod]
		public int opt28 { get; set construct; }
		[NoAccessorMethod]
		public int opt29 { get; set construct; }
		[NoAccessorMethod]
		public int opt3 { get; set construct; }
		[NoAccessorMethod]
		public int opt30 { get; set construct; }
		[NoAccessorMethod]
		public int opt31 { get; set construct; }
		[NoAccessorMethod]
		public int opt32 { get; set construct; }
		[NoAccessorMethod]
		public int opt33 { get; set construct; }
		[NoAccessorMethod]
		public int opt34 { get; set construct; }
		[NoAccessorMethod]
		public int opt35 { get; set construct; }
		[NoAccessorMethod]
		public int opt36 { get; set construct; }
		[NoAccessorMethod]
		public int opt37 { get; set construct; }
		[NoAccessorMethod]
		public int opt38 { get; set construct; }
		[NoAccessorMethod]
		public int opt39 { get; set construct; }
		[NoAccessorMethod]
		public int opt4 { get; set construct; }
		[NoAccessorMethod]
		public int opt40 { get; set construct; }
		[NoAccessorMethod]
		public int opt41 { get; set construct; }
		[NoAccessorMethod]
		public int opt42 { get; set construct; }
		[NoAccessorMethod]
		public int opt43 { get; set construct; }
		[NoAccessorMethod]
		public int opt44 { get; set construct; }
		[NoAccessorMethod]
		public int opt45 { get; set construct; }
		[NoAccessorMethod]
		public int opt46 { get; set construct; }
		[NoAccessorMethod]
		public int opt47 { get; set construct; }
		[NoAccessorMethod]
		public int opt48 { get; set construct; }
		[NoAccessorMethod]
		public int opt49 { get; set construct; }
		[NoAccessorMethod]
		public int opt5 { get; set construct; }
		[NoAccessorMethod]
		public int opt50 { get; set construct; }
		[NoAccessorMethod]
		public int opt51 { get; set construct; }
		[NoAccessorMethod]
		public int opt52 { get; set construct; }
		[NoAccessorMethod]
		public int opt53 { get; set construct; }
		[NoAccessorMethod]
		public int opt54 { get; set construct; }
		[NoAccessorMethod]
		public int opt55 { get; set construct; }
		[NoAccessorMethod]
		public int opt56 { get; set construct; }
		[NoAccessorMethod]
		public int opt57 { get; set construct; }
		[NoAccessorMethod]
		public int opt58 { get; set construct; }
		[NoAccessorMethod]
		public int opt59 { get; set construct; }
		[NoAccessorMethod]
		public int opt6 { get; set construct; }
		[NoAccessorMethod]
		public int opt60 { get; set construct; }
		[NoAccessorMethod]
		public int opt61 { get; set construct; }
		[NoAccessorMethod]
		public int opt62 { get; set construct; }
		[NoAccessorMethod]
		public int opt63 { get; set construct; }
		[NoAccessorMethod]
		public int opt7 { get; set construct; }
		[NoAccessorMethod]
		public int opt8 { get; set construct; }
		[NoAccessorMethod]
		public int opt9 { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_internal_test_only_optargs_get_type ()")]
	public class InternalTestOnlyOptargs : GLib.Object {
		[CCode (has_construct_function = false)]
		public InternalTestOnlyOptargs ();
		[NoAccessorMethod]
		public int test { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_is_blockdev_get_type ()")]
	public class IsBlockdev : GLib.Object {
		[CCode (has_construct_function = false)]
		public IsBlockdev ();
		[NoAccessorMethod]
		public Guestfs.Tristate followsymlinks { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_is_chardev_get_type ()")]
	public class IsChardev : GLib.Object {
		[CCode (has_construct_function = false)]
		public IsChardev ();
		[NoAccessorMethod]
		public Guestfs.Tristate followsymlinks { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_is_dir_get_type ()")]
	public class IsDir : GLib.Object {
		[CCode (has_construct_function = false)]
		public IsDir ();
		[NoAccessorMethod]
		public Guestfs.Tristate followsymlinks { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_is_fifo_get_type ()")]
	public class IsFifo : GLib.Object {
		[CCode (has_construct_function = false)]
		public IsFifo ();
		[NoAccessorMethod]
		public Guestfs.Tristate followsymlinks { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_is_file_get_type ()")]
	public class IsFile : GLib.Object {
		[CCode (has_construct_function = false)]
		public IsFile ();
		[NoAccessorMethod]
		public Guestfs.Tristate followsymlinks { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_is_socket_get_type ()")]
	public class IsSocket : GLib.Object {
		[CCode (has_construct_function = false)]
		public IsSocket ();
		[NoAccessorMethod]
		public Guestfs.Tristate followsymlinks { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "lvm_lv", type_id = "guestfs_lvm_lv_get_type ()")]
	[Compact]
	public class LV {
		public float copy_percent;
		public weak string lv_attr;
		public int64 lv_kernel_major;
		public int64 lv_kernel_minor;
		public int64 lv_major;
		public int64 lv_minor;
		public weak string lv_name;
		public uint64 lv_size;
		public weak string lv_tags;
		[CCode (array_length = false)]
		public weak char lv_uuid[32];
		public weak string mirror_log;
		public weak string modules;
		public weak string move_pv;
		public weak string origin;
		public int64 seg_count;
		public float snap_percent;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_md_create_get_type ()")]
	public class MDCreate : GLib.Object {
		[CCode (has_construct_function = false)]
		public MDCreate ();
		[NoAccessorMethod]
		public int64 chunk { get; set construct; }
		[NoAccessorMethod]
		public string level { owned get; set construct; }
		[NoAccessorMethod]
		public int64 missingbitmap { get; set construct; }
		[NoAccessorMethod]
		public int nrdevices { get; set construct; }
		[NoAccessorMethod]
		public int spare { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "mdstat", type_id = "guestfs_mdstat_get_type ()")]
	[Compact]
	public class MDStat {
		public weak string mdstat_device;
		public weak string mdstat_flags;
		public int32 mdstat_index;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_mke2fs_get_type ()")]
	public class Mke2fs : GLib.Object {
		[CCode (has_construct_function = false)]
		public Mke2fs ();
		[NoAccessorMethod]
		public int64 blockscount { get; set construct; }
		[NoAccessorMethod]
		public int64 blocksize { get; set construct; }
		[NoAccessorMethod]
		public int64 blockspergroup { get; set construct; }
		[NoAccessorMethod]
		public int64 bytesperinode { get; set construct; }
		[NoAccessorMethod]
		public string creatoros { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate discard { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate extent { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate filetype { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate flexbg { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate forcecreate { get; set construct; }
		[NoAccessorMethod]
		public int64 fragsize { get; set construct; }
		[NoAccessorMethod]
		public string fstype { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate hasjournal { get; set construct; }
		[NoAccessorMethod]
		public int64 inodesize { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate journaldev { get; set construct; }
		[NoAccessorMethod]
		public string journaldevice { owned get; set construct; }
		[NoAccessorMethod]
		public int64 journalsize { get; set construct; }
		[NoAccessorMethod]
		public string label { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate largefile { get; set construct; }
		[NoAccessorMethod]
		public string lastmounteddir { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate lazyitableinit { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate lazyjournalinit { get; set construct; }
		[NoAccessorMethod]
		public int64 maxonlineresize { get; set construct; }
		[NoAccessorMethod]
		public int mmpupdateinterval { get; set construct; }
		[NoAccessorMethod]
		public int64 numberofgroups { get; set construct; }
		[NoAccessorMethod]
		public int64 numberofinodes { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate quota { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate quotatype { get; set construct; }
		[NoAccessorMethod]
		public int reservedblockspercentage { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate resizeinode { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate sparsesuper { get; set construct; }
		[NoAccessorMethod]
		public int64 stridesize { get; set construct; }
		[NoAccessorMethod]
		public int64 stripewidth { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate testfs { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate uninitbg { get; set construct; }
		[NoAccessorMethod]
		public string usagetype { owned get; set construct; }
		[NoAccessorMethod]
		public string uuid { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate writesbandgrouponly { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_mkfs_get_type ()")]
	public class Mkfs : GLib.Object {
		[CCode (has_construct_function = false)]
		public Mkfs ();
		[NoAccessorMethod]
		public int blocksize { get; set construct; }
		[NoAccessorMethod]
		public string features { owned get; set construct; }
		[NoAccessorMethod]
		public int inode { get; set construct; }
		[NoAccessorMethod]
		public string label { owned get; set construct; }
		[NoAccessorMethod]
		public int sectorsize { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_mkfs_btrfs_get_type ()")]
	public class MkfsBtrfs : GLib.Object {
		[CCode (has_construct_function = false)]
		public MkfsBtrfs ();
		[NoAccessorMethod]
		public int64 allocstart { get; set construct; }
		[NoAccessorMethod]
		public int64 bytecount { get; set construct; }
		[NoAccessorMethod]
		public string datatype { owned get; set construct; }
		[NoAccessorMethod]
		public string label { owned get; set construct; }
		[NoAccessorMethod]
		public int leafsize { get; set construct; }
		[NoAccessorMethod]
		public string metadata { owned get; set construct; }
		[NoAccessorMethod]
		public int nodesize { get; set construct; }
		[NoAccessorMethod]
		public int sectorsize { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_mksquashfs_get_type ()")]
	public class Mksquashfs : GLib.Object {
		[CCode (has_construct_function = false)]
		public Mksquashfs ();
		[NoAccessorMethod]
		public string compress { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_mkswap_get_type ()")]
	public class Mkswap : GLib.Object {
		[CCode (has_construct_function = false)]
		public Mkswap ();
		[NoAccessorMethod]
		public string label { owned get; set construct; }
		[NoAccessorMethod]
		public string uuid { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_mktemp_get_type ()")]
	public class Mktemp : GLib.Object {
		[CCode (has_construct_function = false)]
		public Mktemp ();
		[NoAccessorMethod]
		public string suffix { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", lower_case_csuffix = "mount_9p", type_id = "guestfs_mount_9p_get_type ()")]
	public class Mount9P : GLib.Object {
		[CCode (has_construct_function = false)]
		public Mount9P ();
		[NoAccessorMethod]
		public string options { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_mount_local_get_type ()")]
	public class MountLocal : GLib.Object {
		[CCode (has_construct_function = false)]
		public MountLocal ();
		[NoAccessorMethod]
		public int cachetimeout { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate debugcalls { get; set construct; }
		[NoAccessorMethod]
		public string options { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate readonly { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", lower_case_csuffix = "ntfsresize", type_id = "guestfs_ntfsresize_get_type ()")]
	public class NTFSResizeOpts : GLib.Object {
		[CCode (has_construct_function = false)]
		public NTFSResizeOpts ();
		[NoAccessorMethod]
		public Guestfs.Tristate force { get; set construct; }
		[NoAccessorMethod]
		public int64 size { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_ntfsclone_out_get_type ()")]
	public class NtfscloneOut : GLib.Object {
		[CCode (has_construct_function = false)]
		public NtfscloneOut ();
		[NoAccessorMethod]
		public Guestfs.Tristate force { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate ignorefscheck { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate metadataonly { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate preservetimestamps { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate rescue { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_ntfsfix_get_type ()")]
	public class Ntfsfix : GLib.Object {
		[CCode (has_construct_function = false)]
		public Ntfsfix ();
		[NoAccessorMethod]
		public Guestfs.Tristate clearbadsectors { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "lvm_pv", type_id = "guestfs_lvm_pv_get_type ()")]
	[Compact]
	public class PV {
		public uint64 dev_size;
		public uint64 pe_start;
		public weak string pv_attr;
		public weak string pv_fmt;
		public uint64 pv_free;
		public int64 pv_mda_count;
		public uint64 pv_mda_free;
		public weak string pv_name;
		public int64 pv_pe_alloc_count;
		public int64 pv_pe_count;
		public uint64 pv_size;
		public weak string pv_tags;
		public uint64 pv_used;
		[CCode (array_length = false)]
		public weak char pv_uuid[32];
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_partition_get_type ()")]
	[Compact]
	public class Partition {
		public uint64 part_end;
		public int32 part_num;
		public uint64 part_size;
		public uint64 part_start;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_remount_get_type ()")]
	public class Remount : GLib.Object {
		[CCode (has_construct_function = false)]
		public Remount ();
		[NoAccessorMethod]
		public Guestfs.Tristate rw { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_rsync_get_type ()")]
	public class Rsync : GLib.Object {
		[CCode (has_construct_function = false)]
		public Rsync ();
		[NoAccessorMethod]
		public Guestfs.Tristate archive { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate deletedest { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_rsync_in_get_type ()")]
	public class RsyncIn : GLib.Object {
		[CCode (has_construct_function = false)]
		public RsyncIn ();
		[NoAccessorMethod]
		public Guestfs.Tristate archive { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate deletedest { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_rsync_out_get_type ()")]
	public class RsyncOut : GLib.Object {
		[CCode (has_construct_function = false)]
		public RsyncOut ();
		[NoAccessorMethod]
		public Guestfs.Tristate archive { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate deletedest { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_selinux_relabel_get_type ()")]
	public class SelinuxRelabel : GLib.Object {
		[CCode (has_construct_function = false)]
		public SelinuxRelabel ();
		[NoAccessorMethod]
		public Guestfs.Tristate force { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_session_get_type ()")]
	public class Session : GLib.Object {
		[CCode (has_construct_function = false)]
		public Session ();
		[Version (since = "1.19.63")]
		public bool acl_delete_def_file (string dir) throws GLib.Error;
		[Version (since = "1.19.63")]
		public string acl_get_file (string path, string acltype) throws GLib.Error;
		[Version (since = "1.19.63")]
		public bool acl_set_file (string path, string acltype, string acl) throws GLib.Error;
		[Version (deprecated = true, since = "0.3")]
		public bool add_cdrom (string filename) throws GLib.Error;
		[Version (since = "1.7.4")]
		public int32 add_domain (string dom, Guestfs.AddDomain? optargs) throws GLib.Error;
		[Version (since = "0.3")]
		public bool add_drive (string filename, Guestfs.AddDrive? optargs) throws GLib.Error;
		[Version (since = "1.0.38")]
		public bool add_drive_ro (string filename) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.84")]
		public bool add_drive_ro_with_if (string filename, string iface) throws GLib.Error;
		[Version (since = "1.23.10")]
		public bool add_drive_scratch (int64 size, Guestfs.AddDriveScratch? optargs) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.84")]
		public bool add_drive_with_if (string filename, string iface) throws GLib.Error;
		[Version (since = "1.29.14")]
		public int32 add_libvirt_dom (void* dom, Guestfs.AddLibvirtDom? optargs) throws GLib.Error;
		[Version (since = "1.3.4")]
		public bool aug_clear (string augpath) throws GLib.Error;
		[Version (since = "0.7")]
		public bool aug_close () throws GLib.Error;
		[Version (since = "0.7")]
		public Guestfs.IntBool aug_defnode (string name, string expr, string val) throws GLib.Error;
		[Version (since = "0.7")]
		public int32 aug_defvar (string name, string? expr) throws GLib.Error;
		[Version (since = "0.7")]
		public string aug_get (string augpath) throws GLib.Error;
		[Version (since = "0.7")]
		public bool aug_init (string root, int32 flags) throws GLib.Error;
		[Version (since = "0.7")]
		public bool aug_insert (string augpath, string label, bool before) throws GLib.Error;
		[Version (since = "1.23.14")]
		public string aug_label (string augpath) throws GLib.Error;
		[Version (since = "0.7")]
		public bool aug_load () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.8")]
		public string[] aug_ls (string augpath) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.7")]
		public string[] aug_match (string augpath) throws GLib.Error;
		[Version (since = "0.7")]
		public bool aug_mv (string src, string dest) throws GLib.Error;
		[Version (since = "0.7")]
		public int32 aug_rm (string augpath) throws GLib.Error;
		[Version (since = "0.7")]
		public bool aug_save () throws GLib.Error;
		[Version (since = "0.7")]
		public bool aug_set (string augpath, string val) throws GLib.Error;
		[Version (since = "1.23.14")]
		public int32 aug_setm (string @base, string? sub, string val) throws GLib.Error;
		[Version (since = "1.35.2")]
		public bool aug_transform (string lens, string file, Guestfs.AugTransform? optargs) throws GLib.Error;
		[Version (since = "1.0.80")]
		public bool available ([CCode (array_length = false, array_null_terminated = true)] string[] groups) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.3.15")]
		public string[] available_all_groups () throws GLib.Error;
		[Version (since = "1.3.5")]
		public bool base64_in (string base64file, string filename, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.3.5")]
		public bool base64_out (string filename, string base64file, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.25.44")]
		public bool blkdiscard (string device) throws GLib.Error;
		[Version (since = "1.25.44")]
		public int8 blkdiscardzeroes (string device) throws GLib.Error;
		[Version (since = "1.15.9")]
		public GLib.HashTable<string,string> blkid (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public bool blockdev_flushbufs (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public int32 blockdev_getbsz (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public int8 blockdev_getro (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public int64 blockdev_getsize64 (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public int32 blockdev_getss (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public int64 blockdev_getsz (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public bool blockdev_rereadpt (string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.3")]
		public bool blockdev_setbsz (string device, int32 blocksize) throws GLib.Error;
		[Version (since = "1.29.10")]
		public bool blockdev_setra (string device, int32 sectors) throws GLib.Error;
		[Version (since = "1.9.3")]
		public bool blockdev_setro (string device) throws GLib.Error;
		[Version (since = "1.9.3")]
		public bool blockdev_setrw (string device) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_balance_cancel (string path) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_balance_pause (string path) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_balance_resume (string path) throws GLib.Error;
		[Version (since = "1.29.26")]
		public Guestfs.BTRFSBalance btrfs_balance_status (string path) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_device_add ([CCode (array_length = false, array_null_terminated = true)] string[] devices, string fs) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_device_delete ([CCode (array_length = false, array_null_terminated = true)] string[] devices, string fs) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_filesystem_balance (string fs) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_filesystem_defragment (string path, Guestfs.BTRFSFilesystemDefragment? optargs) throws GLib.Error;
		[Version (since = "1.11.17")]
		public bool btrfs_filesystem_resize (string mountpoint, Guestfs.BTRFSFilesystemResize? optargs) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.33.29")]
		public string[] btrfs_filesystem_show (string device) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_filesystem_sync (string fs) throws GLib.Error;
		[Version (since = "1.17.43")]
		public bool btrfs_fsck (string device, Guestfs.BtrfsFsck? optargs) throws GLib.Error;
		[Version (since = "1.29.32")]
		public bool btrfs_image ([CCode (array_length = false, array_null_terminated = true)] string[] source, string image, Guestfs.BTRFSImage? optargs) throws GLib.Error;
		[Version (since = "1.29.17")]
		public bool btrfs_qgroup_assign (string src, string dst, string path) throws GLib.Error;
		[Version (since = "1.29.17")]
		public bool btrfs_qgroup_create (string qgroupid, string subvolume) throws GLib.Error;
		[Version (since = "1.29.17")]
		public bool btrfs_qgroup_destroy (string qgroupid, string subvolume) throws GLib.Error;
		[Version (since = "1.29.17")]
		public bool btrfs_qgroup_limit (string subvolume, int64 size) throws GLib.Error;
		[Version (since = "1.29.17")]
		public bool btrfs_qgroup_remove (string src, string dst, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.29.17")]
		public Guestfs.BTRFSQgroup[] btrfs_qgroup_show (string path) throws GLib.Error;
		[Version (since = "1.29.17")]
		public bool btrfs_quota_enable (string fs, bool enable) throws GLib.Error;
		[Version (since = "1.29.17")]
		public bool btrfs_quota_rescan (string fs) throws GLib.Error;
		[Version (since = "1.29.48")]
		public bool btrfs_replace (string srcdev, string targetdev, string mntpoint) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_rescue_chunk_recover (string device) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_rescue_super_recover (string device) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_scrub_cancel (string path) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_scrub_resume (string path) throws GLib.Error;
		[Version (since = "1.29.22")]
		public bool btrfs_scrub_start (string path) throws GLib.Error;
		[Version (since = "1.29.26")]
		public Guestfs.BTRFSScrub btrfs_scrub_status (string path) throws GLib.Error;
		[Version (since = "1.17.43")]
		public bool btrfs_set_seeding (string device, bool seeding) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_subvolume_create (string dest, Guestfs.BTRFSSubvolumeCreate? optargs) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_subvolume_delete (string subvolume) throws GLib.Error;
		[Version (since = "1.29.17")]
		public int64 btrfs_subvolume_get_default (string fs) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.17.35")]
		public Guestfs.BTRFSSubvolume[] btrfs_subvolume_list (string fs) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_subvolume_set_default (int64 id, string fs) throws GLib.Error;
		[Version (since = "1.29.17")]
		public GLib.HashTable<string,string> btrfs_subvolume_show (string subvolume) throws GLib.Error;
		[Version (since = "1.17.35")]
		public bool btrfs_subvolume_snapshot (string source, string dest, Guestfs.BTRFSSubvolumeSnapshot? optargs) throws GLib.Error;
		[Version (since = "1.29.29")]
		public bool btrfstune_enable_extended_inode_refs (string device) throws GLib.Error;
		[Version (since = "1.29.29")]
		public bool btrfstune_enable_skinny_metadata_extent_refs (string device) throws GLib.Error;
		[Version (since = "1.29.29")]
		public bool btrfstune_seeding (string device, bool seeding) throws GLib.Error;
		[Version (since = "1.29.17")]
		public int64 c_pointer () throws GLib.Error;
		[Version (since = "1.19.7")]
		public string canonical_device_name (string device) throws GLib.Error;
		[Version (since = "1.19.63")]
		public string cap_get_file (string path) throws GLib.Error;
		[Version (since = "1.19.63")]
		public bool cap_set_file (string path, string cap) throws GLib.Error;
		[Version (since = "1.0.75")]
		public string case_sensitive_path (string path) throws GLib.Error;
		[Version (since = "0.4")]
		public string cat (string path) throws GLib.Error;
		[Version (since = "1.0.2")]
		public string checksum (string csumtype, string path) throws GLib.Error;
		[Version (since = "1.3.2")]
		public string checksum_device (string csumtype, string device) throws GLib.Error;
		[Version (since = "1.3.7")]
		public bool checksums_out (string csumtype, string directory, string sumsfile, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "0.8")]
		public bool chmod (int32 mode, string path) throws GLib.Error;
		[Version (since = "0.8")]
		public bool chown (int32 owner, int32 group, string path) throws GLib.Error;
		[Version (since = "1.27.2")]
		public int32 clear_backend_setting (string name) throws GLib.Error;
		[Version (since = "1.9.1")]
		public string command ([CCode (array_length = false, array_null_terminated = true)] string[] arguments) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.9.1")]
		public string[] command_lines ([CCode (array_length = false, array_null_terminated = true)] string[] arguments) throws GLib.Error;
		[Version (since = "1.13.15")]
		public bool compress_device_out (string ctype, string device, string zdevice, Guestfs.CompressDeviceOut? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.13.15")]
		public bool compress_out (string ctype, string file, string zfile, Guestfs.CompressOut? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "0.3")]
		public bool config (string hvparam, string? hvvalue) throws GLib.Error;
		[Version (since = "1.25.21")]
		public bool copy_attributes (string src, string dest, Guestfs.CopyAttributes? optargs) throws GLib.Error;
		[Version (since = "1.13.25")]
		public bool copy_device_to_device (string src, string dest, Guestfs.CopyDeviceToDevice? optargs) throws GLib.Error;
		[Version (since = "1.13.25")]
		public bool copy_device_to_file (string src, string dest, Guestfs.CopyDeviceToFile? optargs) throws GLib.Error;
		[Version (since = "1.13.25")]
		public bool copy_file_to_device (string src, string dest, Guestfs.CopyFileToDevice? optargs) throws GLib.Error;
		[Version (since = "1.13.25")]
		public bool copy_file_to_file (string src, string dest, Guestfs.CopyFileToFile? optargs) throws GLib.Error;
		[Version (since = "1.29.24")]
		public bool copy_in (string localpath, string remotedir) throws GLib.Error;
		[Version (since = "1.29.24")]
		public bool copy_out (string remotepath, string localdir) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.87")]
		public bool copy_size (string src, string dest, int64 size) throws GLib.Error;
		[Version (since = "1.0.18")]
		public bool cp (string src, string dest) throws GLib.Error;
		[Version (since = "1.0.18")]
		public bool cp_a (string src, string dest) throws GLib.Error;
		[Version (since = "1.21.38")]
		public bool cp_r (string src, string dest) throws GLib.Error;
		[Version (since = "1.27.9")]
		public bool cpio_out (string directory, string cpiofile, Guestfs.CpioOut? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.80")]
		public bool dd (string src, string dest) throws GLib.Error;
		[Version (since = "1.0.11")]
		public string debug (string subcmd, [CCode (array_length = false, array_null_terminated = true)] string[] extraargs) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.13.22")]
		public string[] debug_drives () throws GLib.Error;
		[Version (since = "1.3.5")]
		public bool debug_upload (string filename, string tmpname, int32 mode, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.19.7")]
		public int32 device_index (string device) throws GLib.Error;
		[Version (since = "1.0.54")]
		public string df () throws GLib.Error;
		[Version (since = "1.0.54")]
		public string df_h () throws GLib.Error;
		[Version (since = "1.25.31")]
		public bool disk_create (string filename, string format, int64 size, Guestfs.DiskCreate? optargs) throws GLib.Error;
		[Version (since = "1.19.38")]
		public string disk_format (string filename) throws GLib.Error;
		[Version (since = "1.19.39")]
		public int8 disk_has_backing_file (string filename) throws GLib.Error;
		[Version (since = "1.19.39")]
		public int64 disk_virtual_size (string filename) throws GLib.Error;
		[Version (since = "1.0.18")]
		public string dmesg () throws GLib.Error;
		[Version (since = "1.0.2")]
		public bool download (string remotefilename, string filename, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.33.45")]
		public bool download_blocks (string device, int64 start, int64 stop, string filename, Guestfs.DownloadBlocks? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.33.14")]
		public bool download_inode (string device, int64 inode, string filename, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.5.17")]
		public bool download_offset (string remotefilename, string filename, int64 offset, int64 size, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.0.18")]
		public bool drop_caches (int32 whattodrop) throws GLib.Error;
		[Version (since = "1.0.54")]
		public int64 du (string path) throws GLib.Error;
		[Version (since = "1.15.17")]
		public bool e2fsck (string device, Guestfs.E2fsck? optargs) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.29")]
		public bool e2fsck_f (string device) throws GLib.Error;
		[Version (since = "1.0.69")]
		public string echo_daemon ([CCode (array_length = false, array_null_terminated = true)] string[] words) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] egrep (string regex, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] egrepi (string regex, string path) throws GLib.Error;
		[Version (since = "1.0.18")]
		public int8 equal (string file1, string file2) throws GLib.Error;
		[Version (since = "0.8")]
		public int8 exists (string path) throws GLib.Error;
		[Version (since = "1.21.27")]
		public bool extlinux (string directory) throws GLib.Error;
		[Version (since = "1.39.3")]
		public bool f2fs_expand (string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.66")]
		public bool fallocate (string path, int32 len) throws GLib.Error;
		[Version (since = "1.3.17")]
		public bool fallocate64 (string path, int64 len) throws GLib.Error;
		[Version (since = "1.21.26")]
		public int8 feature_available ([CCode (array_length = false, array_null_terminated = true)] string[] groups) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] fgrep (string pattern, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] fgrepi (string pattern, string path) throws GLib.Error;
		[Version (since = "1.9.1")]
		public string file (string path) throws GLib.Error;
		[Version (since = "1.5.3")]
		public string file_architecture (string filename) throws GLib.Error;
		[Version (since = "1.0.82")]
		public int64 filesize (string file) throws GLib.Error;
		[Version (since = "1.19.5")]
		public int8 filesystem_available (string filesystem) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.33.39")]
		public Guestfs.TSKDirent[] filesystem_walk (string device, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.0.79")]
		public bool fill (int32 c, int32 len, string path) throws GLib.Error;
		[Version (since = "1.19.32")]
		public bool fill_dir (string dir, int32 nr) throws GLib.Error;
		[Version (since = "1.3.12")]
		public bool fill_pattern (string pattern, int32 len, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.27")]
		public string[] find (string directory) throws GLib.Error;
		[Version (since = "1.0.74")]
		public bool find0 (string directory, string files, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.35.6")]
		public Guestfs.TSKDirent[] find_inode (string device, int64 inode, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.5.3")]
		public string findfs_label (string label) throws GLib.Error;
		[Version (since = "1.5.3")]
		public string findfs_uuid (string uuid) throws GLib.Error;
		[Version (since = "1.0.16")]
		public int32 fsck (string fstype, string device) throws GLib.Error;
		[Version (since = "1.19.6")]
		public bool fstrim (string mountpoint, Guestfs.Fstrim? optargs) throws GLib.Error;
		[Version (since = "1.0.26")]
		public unowned string get_append () throws GLib.Error;
		[Version (deprecated = true, since = "1.9.8")]
		public string get_attach_method () throws GLib.Error;
		[Version (since = "0.3")]
		public int8 get_autosync () throws GLib.Error;
		[Version (since = "1.21.26")]
		public string get_backend () throws GLib.Error;
		[Version (since = "1.27.2")]
		public string get_backend_setting (string name) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.25.24")]
		public string[] get_backend_settings () throws GLib.Error;
		[Version (since = "1.19.58")]
		public string get_cachedir () throws GLib.Error;
		[Version (deprecated = true, since = "1.0.72")]
		public int8 get_direct () throws GLib.Error;
		[Version (since = "1.17.31")]
		public string get_e2attrs (string file) throws GLib.Error;
		[Version (since = "1.17.31")]
		public int64 get_e2generation (string file) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.15")]
		public string get_e2label (string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.15")]
		public string get_e2uuid (string device) throws GLib.Error;
		[Version (since = "1.23.17")]
		public string get_hv () throws GLib.Error;
		[Version (since = "1.31.14")]
		public unowned string get_identifier () throws GLib.Error;
		[Version (since = "1.19.52")]
		public string get_libvirt_requested_credential_challenge (int32 index) throws GLib.Error;
		[Version (since = "1.19.52")]
		public string get_libvirt_requested_credential_defresult (int32 index) throws GLib.Error;
		[Version (since = "1.19.52")]
		public string get_libvirt_requested_credential_prompt (int32 index) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.19.52")]
		public string[] get_libvirt_requested_credentials () throws GLib.Error;
		[Version (since = "1.0.55")]
		public int32 get_memsize () throws GLib.Error;
		[Version (since = "1.5.4")]
		public int8 get_network () throws GLib.Error;
		[Version (since = "0.3")]
		public unowned string get_path () throws GLib.Error;
		[Version (since = "1.11.18")]
		public int8 get_pgroup () throws GLib.Error;
		[Version (since = "1.0.56")]
		public int32 get_pid () throws GLib.Error;
		[Version (since = "1.21.29")]
		public unowned string get_program () throws GLib.Error;
		[Version (deprecated = true, since = "1.0.6")]
		public unowned string get_qemu () throws GLib.Error;
		[Version (since = "1.0.77")]
		public int8 get_recovery_proc () throws GLib.Error;
		[Version (deprecated = true, since = "1.0.67")]
		public int8 get_selinux () throws GLib.Error;
		[Version (since = "1.13.15")]
		public int32 get_smp () throws GLib.Error;
		[Version (since = "1.33.8")]
		public string get_sockdir () throws GLib.Error;
		[Version (since = "1.0.2")]
		public int32 get_state () throws GLib.Error;
		[Version (since = "1.19.58")]
		public string get_tmpdir () throws GLib.Error;
		[Version (since = "1.0.69")]
		public int8 get_trace () throws GLib.Error;
		[Version (since = "1.3.4")]
		public int32 get_umask () throws GLib.Error;
		[Version (since = "0.3")]
		public int8 get_verbose () throws GLib.Error;
		[Version (deprecated = true, since = "1.0.67")]
		public string getcon () throws GLib.Error;
		[CCode (array_length_pos = 2.1, array_length_type = "gsize")]
		[Version (since = "1.7.24")]
		public uint8[] getxattr (string path, string name) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.59")]
		public Guestfs.XAttr[] getxattrs (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.50")]
		public string[] glob_expand (string pattern, Guestfs.GlobExpand? optargs) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.66")]
		public string[] grep (string regex, string path, Guestfs.Grep? optargs) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] grepi (string regex, string path) throws GLib.Error;
		[Version (since = "1.0.17")]
		public bool grub_install (string root, string device) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.54")]
		public string[] head (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.54")]
		public string[] head_n (int32 nrlines, string path) throws GLib.Error;
		[Version (since = "1.0.22")]
		public string hexdump (string path) throws GLib.Error;
		[Version (since = "1.19.35")]
		public bool hivex_close () throws GLib.Error;
		[Version (since = "1.19.35")]
		public bool hivex_commit (string? filename) throws GLib.Error;
		[Version (since = "1.19.35")]
		public int64 hivex_node_add_child (int64 parent, string name) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.19.35")]
		public Guestfs.HivexNode[] hivex_node_children (int64 nodeh) throws GLib.Error;
		[Version (since = "1.19.35")]
		public bool hivex_node_delete_child (int64 nodeh) throws GLib.Error;
		[Version (since = "1.19.35")]
		public int64 hivex_node_get_child (int64 nodeh, string name) throws GLib.Error;
		[Version (since = "1.19.35")]
		public int64 hivex_node_get_value (int64 nodeh, string key) throws GLib.Error;
		[Version (since = "1.19.35")]
		public string hivex_node_name (int64 nodeh) throws GLib.Error;
		[Version (since = "1.19.35")]
		public int64 hivex_node_parent (int64 nodeh) throws GLib.Error;
		[Version (since = "1.19.35")]
		public bool hivex_node_set_value (int64 nodeh, string key, int64 t, [CCode (array_length_cname = "val_size", array_length_pos = 4.1, array_length_type = "gsize")] uint8[] val) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.19.35")]
		public Guestfs.HivexValue[] hivex_node_values (int64 nodeh) throws GLib.Error;
		[Version (since = "1.19.35")]
		public bool hivex_open (string filename, Guestfs.HivexOpen? optargs) throws GLib.Error;
		[Version (since = "1.19.35")]
		public int64 hivex_root () throws GLib.Error;
		[Version (since = "1.19.35")]
		public string hivex_value_key (int64 valueh) throws GLib.Error;
		[Version (since = "1.37.22")]
		public string hivex_value_string (int64 valueh) throws GLib.Error;
		[Version (since = "1.19.35")]
		public int64 hivex_value_type (int64 valueh) throws GLib.Error;
		[Version (deprecated = true, since = "1.19.35")]
		public string hivex_value_utf8 (int64 valueh) throws GLib.Error;
		[CCode (array_length_pos = 1.1, array_length_type = "gsize")]
		[Version (since = "1.19.35")]
		public uint8[] hivex_value_value (int64 valueh) throws GLib.Error;
		[CCode (array_length_pos = 2.1, array_length_type = "gsize")]
		[Version (since = "1.0.84")]
		public uint8[] initrd_cat (string initrdpath, string filename) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.54")]
		public string[] initrd_list (string path) throws GLib.Error;
		[Version (since = "1.0.66")]
		public int64 inotify_add_watch (string path, int32 mask) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool inotify_close () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.66")]
		public string[] inotify_files () throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool inotify_init (int32 maxevents) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.66")]
		public Guestfs.INotifyEvent[] inotify_read () throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool inotify_rm_watch (int32 wd) throws GLib.Error;
		[Version (since = "1.5.3")]
		public string inspect_get_arch (string root) throws GLib.Error;
		[Version (since = "1.5.3")]
		public string inspect_get_distro (string root) throws GLib.Error;
		[Version (since = "1.9.17")]
		public GLib.HashTable<string,string> inspect_get_drive_mappings (string root) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.5.3")]
		public string[] inspect_get_filesystems (string root) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.4")]
		public string inspect_get_format (string root) throws GLib.Error;
		[Version (since = "1.7.9")]
		public string inspect_get_hostname (string root) throws GLib.Error;
		[CCode (array_length_pos = 2.1, array_length_type = "gsize")]
		[Version (since = "1.11.12")]
		public uint8[] inspect_get_icon (string root, Guestfs.InspectGetIcon? optargs) throws GLib.Error;
		[Version (since = "1.5.3")]
		public int32 inspect_get_major_version (string root) throws GLib.Error;
		[Version (since = "1.5.3")]
		public int32 inspect_get_minor_version (string root) throws GLib.Error;
		[Version (since = "1.5.3")]
		public GLib.HashTable<string,string> inspect_get_mountpoints (string root) throws GLib.Error;
		[Version (since = "1.39.1")]
		public string inspect_get_osinfo (string root) throws GLib.Error;
		[Version (since = "1.7.5")]
		public string inspect_get_package_format (string root) throws GLib.Error;
		[Version (since = "1.7.5")]
		public string inspect_get_package_management (string root) throws GLib.Error;
		[Version (since = "1.5.3")]
		public string inspect_get_product_name (string root) throws GLib.Error;
		[Version (since = "1.9.13")]
		public string inspect_get_product_variant (string root) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.7.3")]
		public string[] inspect_get_roots () throws GLib.Error;
		[Version (since = "1.5.3")]
		public string inspect_get_type (string root) throws GLib.Error;
		[Version (since = "1.9.17")]
		public string inspect_get_windows_current_control_set (string root) throws GLib.Error;
		[Version (since = "1.35.26")]
		public string inspect_get_windows_software_hive (string root) throws GLib.Error;
		[Version (since = "1.35.26")]
		public string inspect_get_windows_system_hive (string root) throws GLib.Error;
		[Version (since = "1.5.25")]
		public string inspect_get_windows_systemroot (string root) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.4")]
		public int8 inspect_is_live (string root) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.4")]
		public int8 inspect_is_multipart (string root) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.4")]
		public int8 inspect_is_netinst (string root) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.7.8")]
		public Guestfs.Application[] inspect_list_applications (string root) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.19.56")]
		public Guestfs.Application2[] inspect_list_applications2 (string root) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.5.3")]
		public string[] inspect_os () throws GLib.Error;
		[Version (since = "1.23.30")]
		public bool internal_exit (GLib.Cancellable? cancellable = null) throws GLib.Error;
		public bool internal_test (string str, string? optstr, [CCode (array_length = false, array_null_terminated = true)] string[] strlist, bool b, int32 integer, int64 integer64, string filein, string fileout, [CCode (array_length_cname = "bufferin_size", array_length_pos = 9.5, array_length_type = "gsize")] uint8[] bufferin, Guestfs.InternalTest? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		public bool internal_test_63_optargs (Guestfs.InternalTest63Optargs? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		public bool internal_test_close_output () throws GLib.Error;
		public bool internal_test_only_optargs (Guestfs.InternalTestOnlyOptargs? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		public int8 internal_test_rbool (string val) throws GLib.Error;
		public int8 internal_test_rboolerr () throws GLib.Error;
		[CCode (array_length_pos = 1.1, array_length_type = "gsize")]
		public uint8[] internal_test_rbufferout (string val) throws GLib.Error;
		[CCode (array_length_pos = 0.1, array_length_type = "gsize")]
		public uint8[] internal_test_rbufferouterr () throws GLib.Error;
		public unowned string internal_test_rconstoptstring (string val) throws GLib.Error;
		public unowned string internal_test_rconstoptstringerr () throws GLib.Error;
		public unowned string internal_test_rconststring (string val) throws GLib.Error;
		public unowned string internal_test_rconststringerr () throws GLib.Error;
		public GLib.HashTable<string,string> internal_test_rhashtable (string val) throws GLib.Error;
		public GLib.HashTable<string,string> internal_test_rhashtableerr () throws GLib.Error;
		public int32 internal_test_rint (string val) throws GLib.Error;
		public int64 internal_test_rint64 (string val) throws GLib.Error;
		public int64 internal_test_rint64err () throws GLib.Error;
		public int32 internal_test_rinterr () throws GLib.Error;
		public string internal_test_rstring (string val) throws GLib.Error;
		public string internal_test_rstringerr () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		public string[] internal_test_rstringlist (string val) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		public string[] internal_test_rstringlisterr () throws GLib.Error;
		public Guestfs.PV internal_test_rstruct (string val) throws GLib.Error;
		public Guestfs.PV internal_test_rstructerr () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		public Guestfs.PV[] internal_test_rstructlist (string val) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		public Guestfs.PV[] internal_test_rstructlisterr () throws GLib.Error;
		public bool internal_test_set_output (string filename) throws GLib.Error;
		[Version (since = "1.5.10")]
		public int8 is_blockdev (string path, Guestfs.IsBlockdev? optargs) throws GLib.Error;
		[Version (since = "1.0.2")]
		public int8 is_busy () throws GLib.Error;
		[Version (since = "1.5.10")]
		public int8 is_chardev (string path, Guestfs.IsChardev? optargs) throws GLib.Error;
		[Version (since = "1.0.2")]
		public int8 is_config () throws GLib.Error;
		[Version (since = "0.8")]
		public int8 is_dir (string path, Guestfs.IsDir? optargs) throws GLib.Error;
		[Version (since = "1.5.10")]
		public int8 is_fifo (string path, Guestfs.IsFifo? optargs) throws GLib.Error;
		[Version (since = "0.8")]
		public int8 is_file (string path, Guestfs.IsFile? optargs) throws GLib.Error;
		[Version (since = "1.0.2")]
		public int8 is_launching () throws GLib.Error;
		[Version (since = "1.5.3")]
		public int8 is_lv (string mountable) throws GLib.Error;
		[Version (since = "1.0.2")]
		public int8 is_ready () throws GLib.Error;
		[Version (since = "1.5.10")]
		public int8 is_socket (string path, Guestfs.IsSocket? optargs) throws GLib.Error;
		[Version (since = "1.5.10")]
		public int8 is_symlink (string path) throws GLib.Error;
		[Version (since = "1.21.9")]
		public int8 is_whole_device (string device) throws GLib.Error;
		[Version (since = "1.11.8")]
		public int8 is_zero (string path) throws GLib.Error;
		[Version (since = "1.11.8")]
		public int8 is_zero_device (string device) throws GLib.Error;
		[Version (since = "1.17.19")]
		public Guestfs.ISOInfo isoinfo (string isofile) throws GLib.Error;
		[Version (since = "1.17.19")]
		public Guestfs.ISOInfo isoinfo_device (string device) throws GLib.Error;
		[Version (since = "1.23.11")]
		public bool journal_close () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.23.11")]
		public Guestfs.XAttr[] journal_get () throws GLib.Error;
		[Version (since = "1.23.11")]
		public int64 journal_get_data_threshold () throws GLib.Error;
		[Version (since = "1.27.18")]
		public int64 journal_get_realtime_usec () throws GLib.Error;
		[Version (since = "1.23.11")]
		public int8 journal_next () throws GLib.Error;
		[Version (since = "1.23.11")]
		public bool journal_open (string directory) throws GLib.Error;
		[Version (since = "1.23.11")]
		public bool journal_set_data_threshold (int64 threshold) throws GLib.Error;
		[Version (since = "1.23.11")]
		public int64 journal_skip (int64 skip) throws GLib.Error;
		[Version (deprecated = true, since = "0.3")]
		public bool kill_subprocess () throws GLib.Error;
		[Version (since = "0.3")]
		public bool launch () throws GLib.Error;
		[Version (since = "1.0.77")]
		public bool lchown (int32 owner, int32 group, string path) throws GLib.Error;
		[Version (since = "1.20.0")]
		public bool ldmtool_create_all () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.20.0")]
		public string[] ldmtool_diskgroup_disks (string diskgroup) throws GLib.Error;
		[Version (since = "1.20.0")]
		public string ldmtool_diskgroup_name (string diskgroup) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.20.0")]
		public string[] ldmtool_diskgroup_volumes (string diskgroup) throws GLib.Error;
		[Version (since = "1.20.0")]
		public bool ldmtool_remove_all () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.20.0")]
		public string[] ldmtool_scan () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.20.0")]
		public string[] ldmtool_scan_devices ([CCode (array_length = false, array_null_terminated = true)] string[] devices) throws GLib.Error;
		[Version (since = "1.20.0")]
		public string ldmtool_volume_hint (string diskgroup, string volume) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.20.0")]
		public string[] ldmtool_volume_partitions (string diskgroup, string volume) throws GLib.Error;
		[Version (since = "1.20.0")]
		public string ldmtool_volume_type (string diskgroup, string volume) throws GLib.Error;
		[CCode (array_length_pos = 2.1, array_length_type = "gsize")]
		[Version (since = "1.7.24")]
		public uint8[] lgetxattr (string path, string name) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.59")]
		public Guestfs.XAttr[] lgetxattrs (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.11.12")]
		public string[] list_9p () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public string[] list_devices () throws GLib.Error;
		[Version (since = "1.19.49")]
		public GLib.HashTable<string,string> list_disk_labels () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.11.15")]
		public string[] list_dm_devices () throws GLib.Error;
		[Version (since = "1.5.15")]
		public GLib.HashTable<string,string> list_filesystems () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.20.0")]
		public string[] list_ldm_partitions () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.20.0")]
		public string[] list_ldm_volumes () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.15.4")]
		public string[] list_md_devices () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public string[] list_partitions () throws GLib.Error;
		[Version (since = "0.4")]
		public string ll (string directory) throws GLib.Error;
		[Version (deprecated = true, since = "1.17.6")]
		public string llz (string directory) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool ln (string target, string linkname) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool ln_f (string target, string linkname) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool ln_s (string target, string linkname) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool ln_sf (string target, string linkname) throws GLib.Error;
		[Version (since = "1.0.59")]
		public bool lremovexattr (string xattr, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public string[] ls (string directory) throws GLib.Error;
		[Version (since = "1.19.32")]
		public bool ls0 (string dir, string filenames) throws GLib.Error;
		[Version (since = "1.0.59")]
		public bool lsetxattr (string xattr, string val, int32 vallen, string path) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.2")]
		public Guestfs.Stat lstat (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.77")]
		public Guestfs.Stat[] lstatlist (string path, [CCode (array_length = false, array_null_terminated = true)] string[] names) throws GLib.Error;
		[Version (since = "1.27.53")]
		public Guestfs.StatNS lstatns (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.27.53")]
		public Guestfs.StatNS[] lstatnslist (string path, [CCode (array_length = false, array_null_terminated = true)] string[] names) throws GLib.Error;
		[Version (since = "1.5.2")]
		public bool luks_add_key (string device, string key, string newkey, int32 keyslot) throws GLib.Error;
		[Version (since = "1.5.1")]
		public bool luks_close (string device) throws GLib.Error;
		[Version (since = "1.5.2")]
		public bool luks_format (string device, string key, int32 keyslot) throws GLib.Error;
		[Version (since = "1.5.2")]
		public bool luks_format_cipher (string device, string key, int32 keyslot, string cipher) throws GLib.Error;
		[Version (since = "1.5.2")]
		public bool luks_kill_slot (string device, string key, int32 keyslot) throws GLib.Error;
		[Version (since = "1.5.1")]
		public bool luks_open (string device, string key, string mapname) throws GLib.Error;
		[Version (since = "1.5.1")]
		public bool luks_open_ro (string device, string key, string mapname) throws GLib.Error;
		[Version (since = "0.8")]
		public bool lvcreate (string logvol, string volgroup, int32 mbytes) throws GLib.Error;
		[Version (since = "1.17.18")]
		public bool lvcreate_free (string logvol, string volgroup, int32 percent) throws GLib.Error;
		[Version (since = "1.5.24")]
		public string lvm_canonical_lv_name (string lvname) throws GLib.Error;
		[Version (since = "1.5.1")]
		public bool lvm_clear_filter () throws GLib.Error;
		[Version (since = "0.8")]
		public bool lvm_remove_all () throws GLib.Error;
		[Version (since = "1.39.8")]
		public bool lvm_scan (bool activate) throws GLib.Error;
		[Version (since = "1.5.1")]
		public bool lvm_set_filter ([CCode (array_length = false, array_null_terminated = true)] string[] devices) throws GLib.Error;
		[Version (since = "1.0.13")]
		public bool lvremove (string device) throws GLib.Error;
		[Version (since = "1.0.83")]
		public bool lvrename (string logvol, string newlogvol) throws GLib.Error;
		[Version (since = "1.0.27")]
		public bool lvresize (string device, int32 mbytes) throws GLib.Error;
		[Version (since = "1.3.3")]
		public bool lvresize_free (string lv, int32 percent) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public string[] lvs () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public Guestfs.LV[] lvs_full () throws GLib.Error;
		[Version (since = "1.0.87")]
		public string lvuuid (string device) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.77")]
		public Guestfs.XAttr[] lxattrlist (string path, [CCode (array_length = false, array_null_terminated = true)] string[] names) throws GLib.Error;
		[Version (since = "1.19.7")]
		public int32 max_disks () throws GLib.Error;
		[Version (since = "1.15.6")]
		public bool md_create (string name, [CCode (array_length = false, array_null_terminated = true)] string[] devices, Guestfs.MDCreate? optargs) throws GLib.Error;
		[Version (since = "1.15.6")]
		public GLib.HashTable<string,string> md_detail (string md) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.17.21")]
		public Guestfs.MDStat[] md_stat (string md) throws GLib.Error;
		[Version (since = "1.15.6")]
		public bool md_stop (string md) throws GLib.Error;
		[Version (since = "0.8")]
		public bool mkdir (string path) throws GLib.Error;
		[Version (since = "1.0.77")]
		public bool mkdir_mode (string path, int32 mode) throws GLib.Error;
		[Version (since = "0.8")]
		public bool mkdir_p (string path) throws GLib.Error;
		[Version (since = "1.0.54")]
		public string mkdtemp (string tmpl) throws GLib.Error;
		[Version (since = "1.19.44")]
		public bool mke2fs (string device, Guestfs.Mke2fs? optargs) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.68")]
		public bool mke2fs_J (string fstype, int32 blocksize, string device, string journal) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.68")]
		public bool mke2fs_JL (string fstype, int32 blocksize, string device, string label) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.68")]
		public bool mke2fs_JU (string fstype, int32 blocksize, string device, string uuid) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.68")]
		public bool mke2journal (int32 blocksize, string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.68")]
		public bool mke2journal_L (int32 blocksize, string label, string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.68")]
		public bool mke2journal_U (int32 blocksize, string uuid, string device) throws GLib.Error;
		[Version (since = "1.0.55")]
		public bool mkfifo (int32 mode, string path) throws GLib.Error;
		[Version (since = "0.8")]
		public bool mkfs (string fstype, string device, Guestfs.Mkfs? optargs) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.68")]
		public bool mkfs_b (string fstype, int32 blocksize, string device) throws GLib.Error;
		[Version (since = "1.17.25")]
		public bool mkfs_btrfs ([CCode (array_length = false, array_null_terminated = true)] string[] devices, Guestfs.MkfsBtrfs? optargs) throws GLib.Error;
		[Version (since = "1.19.56")]
		public bool mklost_and_found (string mountpoint) throws GLib.Error;
		[Version (since = "1.0.62")]
		public bool mkmountpoint (string exemptpath) throws GLib.Error;
		[Version (since = "1.0.55")]
		public bool mknod (int32 mode, int32 devmajor, int32 devminor, string path) throws GLib.Error;
		[Version (since = "1.0.55")]
		public bool mknod_b (int32 mode, int32 devmajor, int32 devminor, string path) throws GLib.Error;
		[Version (since = "1.0.55")]
		public bool mknod_c (int32 mode, int32 devmajor, int32 devminor, string path) throws GLib.Error;
		[Version (since = "1.35.25")]
		public bool mksquashfs (string path, string filename, Guestfs.Mksquashfs? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.0.55")]
		public bool mkswap (string device, Guestfs.Mkswap? optargs) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.55")]
		public bool mkswap_L (string label, string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.55")]
		public bool mkswap_U (string uuid, string device) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool mkswap_file (string path) throws GLib.Error;
		[Version (since = "1.19.53")]
		public string mktemp (string tmpl, Guestfs.Mktemp? optargs) throws GLib.Error;
		[Version (since = "1.0.68")]
		public bool modprobe (string modulename) throws GLib.Error;
		[Version (since = "0.3")]
		public bool mount (string mountable, string mountpoint) throws GLib.Error;
		[Version (since = "1.11.12")]
		public bool mount_9p (string mounttag, string mountpoint, Guestfs.Mount9P? optargs) throws GLib.Error;
		[Version (since = "1.17.22")]
		public bool mount_local (string localmountpoint, Guestfs.MountLocal? optargs) throws GLib.Error;
		[Version (since = "1.17.22")]
		public bool mount_local_run (GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.0.54")]
		public bool mount_loop (string file, string mountpoint) throws GLib.Error;
		[Version (since = "1.0.10")]
		public bool mount_options (string options, string mountable, string mountpoint) throws GLib.Error;
		[Version (since = "1.0.10")]
		public bool mount_ro (string mountable, string mountpoint) throws GLib.Error;
		[Version (since = "1.0.10")]
		public bool mount_vfs (string options, string vfstype, string mountable, string mountpoint) throws GLib.Error;
		[Version (since = "1.33.15")]
		public string mountable_device (string mountable) throws GLib.Error;
		[Version (since = "1.33.15")]
		public string mountable_subvolume (string mountable) throws GLib.Error;
		[Version (since = "1.0.62")]
		public GLib.HashTable<string,string> mountpoints () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.8")]
		public string[] mounts () throws GLib.Error;
		[Version (since = "1.0.18")]
		public bool mv (string src, string dest) throws GLib.Error;
		[Version (since = "1.19.15")]
		public int32 nr_devices () throws GLib.Error;
		[Version (since = "1.0.43")]
		public int32 ntfs_3g_probe (bool rw, string device) throws GLib.Error;
		[Version (since = "1.33.14")]
		public bool ntfscat_i (string device, int64 inode, string filename, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.17.9")]
		public bool ntfsclone_in (string backupfile, string device, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.17.9")]
		public bool ntfsclone_out (string device, string backupfile, Guestfs.NtfscloneOut? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.17.9")]
		public bool ntfsfix (string device, Guestfs.Ntfsfix? optargs) throws GLib.Error;
		[Version (since = "1.3.2")]
		public bool ntfsresize (string device, Guestfs.NTFSResizeOpts? optargs) throws GLib.Error;
		[Version (deprecated = true, since = "1.3.14")]
		public bool ntfsresize_size (string device, int64 size) throws GLib.Error;
		[Version (since = "1.19.53")]
		public bool parse_environment () throws GLib.Error;
		[Version (since = "1.19.53")]
		public bool parse_environment_list ([CCode (array_length = false, array_null_terminated = true)] string[] environment) throws GLib.Error;
		[Version (since = "1.0.78")]
		public bool part_add (string device, string prlogex, int64 startsect, int64 endsect) throws GLib.Error;
		[Version (since = "1.3.2")]
		public bool part_del (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.0.78")]
		public bool part_disk (string device, string parttype) throws GLib.Error;
		[Version (since = "1.33.2")]
		public bool part_expand_gpt (string device) throws GLib.Error;
		[Version (since = "1.3.2")]
		public int8 part_get_bootable (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.33.2")]
		public string part_get_disk_guid (string device) throws GLib.Error;
		[Version (since = "1.21.1")]
		public int64 part_get_gpt_attributes (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.29.25")]
		public string part_get_gpt_guid (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.21.1")]
		public string part_get_gpt_type (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.3.2")]
		public int32 part_get_mbr_id (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.29.32")]
		public string part_get_mbr_part_type (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.25.33")]
		public string part_get_name (string device, int32 partnum) throws GLib.Error;
		[Version (since = "1.0.78")]
		public string part_get_parttype (string device) throws GLib.Error;
		[Version (since = "1.0.78")]
		public bool part_init (string device, string parttype) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.78")]
		public Guestfs.Partition[] part_list (string device) throws GLib.Error;
		[Version (since = "1.37.20")]
		public bool part_resize (string device, int32 partnum, int64 endsect) throws GLib.Error;
		[Version (since = "1.0.78")]
		public bool part_set_bootable (string device, int32 partnum, bool bootable) throws GLib.Error;
		[Version (since = "1.33.2")]
		public bool part_set_disk_guid (string device, string guid) throws GLib.Error;
		[Version (since = "1.33.2")]
		public bool part_set_disk_guid_random (string device) throws GLib.Error;
		[Version (since = "1.21.1")]
		public bool part_set_gpt_attributes (string device, int32 partnum, int64 attributes) throws GLib.Error;
		[Version (since = "1.29.25")]
		public bool part_set_gpt_guid (string device, int32 partnum, string guid) throws GLib.Error;
		[Version (since = "1.21.1")]
		public bool part_set_gpt_type (string device, int32 partnum, string guid) throws GLib.Error;
		[Version (since = "1.3.2")]
		public bool part_set_mbr_id (string device, int32 partnum, int32 idbyte) throws GLib.Error;
		[Version (since = "1.0.78")]
		public bool part_set_name (string device, int32 partnum, string name) throws GLib.Error;
		[Version (since = "1.5.15")]
		public string part_to_dev (string partition) throws GLib.Error;
		[Version (since = "1.13.25")]
		public int32 part_to_partnum (string partition) throws GLib.Error;
		[Version (since = "1.0.18")]
		public bool ping_daemon () throws GLib.Error;
		[CCode (array_length_pos = 3.1, array_length_type = "gsize")]
		[Version (since = "1.0.77")]
		public uint8[] pread (string path, int32 count, int64 offset) throws GLib.Error;
		[CCode (array_length_pos = 3.1, array_length_type = "gsize")]
		[Version (since = "1.5.21")]
		public uint8[] pread_device (string device, int32 count, int64 offset) throws GLib.Error;
		[Version (since = "1.19.26")]
		public bool pvchange_uuid (string device) throws GLib.Error;
		[Version (since = "1.19.26")]
		public bool pvchange_uuid_all () throws GLib.Error;
		[Version (since = "0.8")]
		public bool pvcreate (string device) throws GLib.Error;
		[Version (since = "1.0.13")]
		public bool pvremove (string device) throws GLib.Error;
		[Version (since = "1.0.26")]
		public bool pvresize (string device) throws GLib.Error;
		[Version (since = "1.3.14")]
		public bool pvresize_size (string device, int64 size) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public string[] pvs () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public Guestfs.PV[] pvs_full () throws GLib.Error;
		[Version (since = "1.0.87")]
		public string pvuuid (string device) throws GLib.Error;
		[Version (since = "1.3.14")]
		public int32 pwrite (string path, [CCode (array_length_cname = "content_size", array_length_pos = 2.5, array_length_type = "gsize")] uint8[] content, int64 offset) throws GLib.Error;
		[Version (since = "1.5.20")]
		public int32 pwrite_device (string device, [CCode (array_length_cname = "content_size", array_length_pos = 2.5, array_length_type = "gsize")] uint8[] content, int64 offset) throws GLib.Error;
		[CCode (array_length_pos = 1.1, array_length_type = "gsize")]
		[Version (since = "1.0.63")]
		public uint8[] read_file (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.7")]
		public string[] read_lines (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.55")]
		public Guestfs.Dirent[] readdir (string dir) throws GLib.Error;
		[Version (since = "1.0.66")]
		public string readlink (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.77")]
		public string[] readlinklist (string path, [CCode (array_length = false, array_null_terminated = true)] string[] names) throws GLib.Error;
		[Version (since = "1.0.66")]
		public string realpath (string path) throws GLib.Error;
		[Version (since = "1.23.2")]
		public bool remount (string mountpoint, Guestfs.Remount? optargs) throws GLib.Error;
		[Version (since = "1.19.49")]
		public bool remove_drive (string label) throws GLib.Error;
		[Version (since = "1.0.59")]
		public bool removexattr (string xattr, string path) throws GLib.Error;
		[Version (since = "1.21.5")]
		public bool rename (string oldpath, string newpath) throws GLib.Error;
		[Version (since = "1.0.27")]
		public bool resize2fs (string device) throws GLib.Error;
		[Version (since = "1.9.4")]
		public bool resize2fs_M (string device) throws GLib.Error;
		[Version (since = "1.3.14")]
		public bool resize2fs_size (string device, int64 size) throws GLib.Error;
		[Version (since = "0.8")]
		public bool rm (string path) throws GLib.Error;
		[Version (since = "1.19.42")]
		public bool rm_f (string path) throws GLib.Error;
		[Version (since = "0.8")]
		public bool rm_rf (string path) throws GLib.Error;
		[Version (since = "0.8")]
		public bool rmdir (string path) throws GLib.Error;
		[Version (since = "1.0.62")]
		public bool rmmountpoint (string exemptpath) throws GLib.Error;
		[Version (since = "1.19.29")]
		public bool rsync (string src, string dest, Guestfs.Rsync? optargs) throws GLib.Error;
		[Version (since = "1.19.29")]
		public bool rsync_in (string remote, string dest, Guestfs.RsyncIn? optargs) throws GLib.Error;
		[Version (since = "1.19.29")]
		public bool rsync_out (string src, string remote, Guestfs.RsyncOut? optargs) throws GLib.Error;
		[Version (since = "1.0.52")]
		public bool scrub_device (string device) throws GLib.Error;
		[Version (since = "1.0.52")]
		public bool scrub_file (string file) throws GLib.Error;
		[Version (since = "1.0.52")]
		public bool scrub_freespace (string dir) throws GLib.Error;
		[Version (since = "1.33.43")]
		public bool selinux_relabel (string specfile, string path, Guestfs.SelinuxRelabel? optargs) throws GLib.Error;
		[Version (since = "1.0.26")]
		public bool set_append (string? append) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.8")]
		public bool set_attach_method (string backend) throws GLib.Error;
		[Version (since = "0.3")]
		public bool set_autosync (bool autosync) throws GLib.Error;
		[Version (since = "1.21.26")]
		public bool set_backend (string backend) throws GLib.Error;
		[Version (since = "1.27.2")]
		public bool set_backend_setting (string name, string val) throws GLib.Error;
		[Version (since = "1.25.24")]
		public bool set_backend_settings ([CCode (array_length = false, array_null_terminated = true)] string[] settings) throws GLib.Error;
		[Version (since = "1.19.58")]
		public bool set_cachedir (string? cachedir) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.72")]
		public bool set_direct (bool direct) throws GLib.Error;
		[Version (since = "1.17.31")]
		public bool set_e2attrs (string file, string attrs, Guestfs.SetE2attrs? optargs) throws GLib.Error;
		[Version (since = "1.17.31")]
		public bool set_e2generation (string file, int64 generation) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.15")]
		public bool set_e2label (string device, string label) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.15")]
		public bool set_e2uuid (string device, string uuid) throws GLib.Error;
		[Version (since = "1.23.17")]
		public bool set_hv (string hv) throws GLib.Error;
		[Version (since = "1.31.14")]
		public bool set_identifier (string identifier) throws GLib.Error;
		[Version (since = "1.17.9")]
		public bool set_label (string mountable, string label) throws GLib.Error;
		[Version (since = "1.19.52")]
		public bool set_libvirt_requested_credential (int32 index, [CCode (array_length_cname = "cred_size", array_length_pos = 2.1, array_length_type = "gsize")] uint8[] cred) throws GLib.Error;
		[Version (since = "1.19.52")]
		public bool set_libvirt_supported_credentials ([CCode (array_length = false, array_null_terminated = true)] string[] creds) throws GLib.Error;
		[Version (since = "1.0.55")]
		public bool set_memsize (int32 memsize) throws GLib.Error;
		[Version (since = "1.5.4")]
		public bool set_network (bool network) throws GLib.Error;
		[Version (since = "0.3")]
		public bool set_path (string? searchpath) throws GLib.Error;
		[Version (since = "1.11.18")]
		public bool set_pgroup (bool pgroup) throws GLib.Error;
		[Version (since = "1.21.29")]
		public bool set_program (string program) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.6")]
		public bool set_qemu (string? hv) throws GLib.Error;
		[Version (since = "1.0.77")]
		public bool set_recovery_proc (bool recoveryproc) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.67")]
		public bool set_selinux (bool selinux) throws GLib.Error;
		[Version (since = "1.13.15")]
		public bool set_smp (int32 smp) throws GLib.Error;
		[Version (since = "1.19.58")]
		public bool set_tmpdir (string? tmpdir) throws GLib.Error;
		[Version (since = "1.0.69")]
		public bool set_trace (bool trace) throws GLib.Error;
		[Version (since = "1.23.10")]
		public bool set_uuid (string device, string uuid) throws GLib.Error;
		[Version (since = "1.29.50")]
		public bool set_uuid_random (string device) throws GLib.Error;
		[Version (since = "0.3")]
		public bool set_verbose (bool verbose) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.67")]
		public bool setcon (string context) throws GLib.Error;
		[Version (since = "1.0.59")]
		public bool setxattr (string xattr, string val, int32 vallen, string path) throws GLib.Error;
		[Version (deprecated = true, since = "0.8")]
		public bool sfdisk (string device, int32 cyls, int32 heads, int32 sectors, [CCode (array_length = false, array_null_terminated = true)] string[] lines) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.55")]
		public bool sfdiskM (string device, [CCode (array_length = false, array_null_terminated = true)] string[] lines) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.26")]
		public bool sfdisk_N (string device, int32 partnum, int32 cyls, int32 heads, int32 sectors, string line) throws GLib.Error;
		[Version (since = "1.0.26")]
		public string sfdisk_disk_geometry (string device) throws GLib.Error;
		[Version (since = "1.0.26")]
		public string sfdisk_kernel_geometry (string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.26")]
		public string sfdisk_l (string device) throws GLib.Error;
		[Version (since = "1.0.50")]
		public string sh (string command) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.50")]
		public string[] sh_lines (string command) throws GLib.Error;
		[Version (since = "1.19.16")]
		public bool shutdown () throws GLib.Error;
		[Version (since = "1.0.41")]
		public bool sleep (int32 secs) throws GLib.Error;
		[Version (deprecated = true, since = "1.9.2")]
		public Guestfs.Stat stat (string path) throws GLib.Error;
		[Version (since = "1.27.53")]
		public Guestfs.StatNS statns (string path) throws GLib.Error;
		[Version (since = "1.9.2")]
		public Guestfs.StatVFS statvfs (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.22")]
		public string[] strings (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.22")]
		public string[] strings_e (string encoding, string path) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapoff_device (string device) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapoff_file (string file) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapoff_label (string label) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapoff_uuid (string uuid) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapon_device (string device) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapon_file (string file) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapon_label (string label) throws GLib.Error;
		[Version (since = "1.0.66")]
		public bool swapon_uuid (string uuid) throws GLib.Error;
		[Version (since = "0.3")]
		public bool sync () throws GLib.Error;
		[Version (since = "1.21.27")]
		public bool syslinux (string device, Guestfs.Syslinux? optargs) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.54")]
		public string[] tail (string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.54")]
		public string[] tail_n (int32 nrlines, string path) throws GLib.Error;
		[Version (since = "1.0.3")]
		public bool tar_in (string tarfile, string directory, Guestfs.TarIn? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.0.3")]
		public bool tar_out (string directory, string tarfile, Guestfs.TarOut? optargs, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.3")]
		public bool tgz_in (string tarball, string directory, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.3")]
		public bool tgz_out (string directory, string tarball, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "0.3")]
		public bool touch (string path) throws GLib.Error;
		[Version (since = "1.0.77")]
		public bool truncate (string path) throws GLib.Error;
		[Version (since = "1.0.77")]
		public bool truncate_size (string path, int64 size) throws GLib.Error;
		[Version (since = "1.15.4")]
		public bool tune2fs (string device, Guestfs.Tune2FS? optargs) throws GLib.Error;
		[Version (since = "1.9.2")]
		public GLib.HashTable<string,string> tune2fs_l (string device) throws GLib.Error;
		[Version (deprecated = true, since = "1.3.2")]
		public bool txz_in (string tarball, string directory, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (deprecated = true, since = "1.3.2")]
		public bool txz_out (string directory, string tarball, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.0.55")]
		public int32 umask (int32 mask) throws GLib.Error;
		[Version (since = "0.8")]
		public bool umount (string pathordevice, Guestfs.Umount? optargs) throws GLib.Error;
		[Version (since = "0.8")]
		public bool umount_all () throws GLib.Error;
		[Version (since = "1.17.22")]
		public bool umount_local (Guestfs.UmountLocal? optargs) throws GLib.Error;
		[Version (since = "1.0.2")]
		public bool upload (string filename, string remotefilename, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.5.17")]
		public bool upload_offset (string filename, string remotefilename, int64 offset, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[Version (since = "1.11.18")]
		public bool user_cancel () throws GLib.Error;
		[Version (since = "1.0.77")]
		public bool utimens (string path, int64 atsecs, int64 atnsecs, int64 mtsecs, int64 mtnsecs) throws GLib.Error;
		[Version (since = "1.19.27")]
		public Guestfs.UTSName utsname () throws GLib.Error;
		[Version (since = "1.0.58")]
		public Guestfs.Version version () throws GLib.Error;
		[Version (since = "1.3.18")]
		public string vfs_label (string mountable) throws GLib.Error;
		[Version (since = "1.31.18")]
		public int64 vfs_minimum_size (string mountable) throws GLib.Error;
		[Version (since = "1.0.75")]
		public string vfs_type (string mountable) throws GLib.Error;
		[Version (since = "1.3.18")]
		public string vfs_uuid (string mountable) throws GLib.Error;
		[Version (since = "1.0.26")]
		public bool vg_activate (bool activate, [CCode (array_length = false, array_null_terminated = true)] string[] volgroups) throws GLib.Error;
		[Version (since = "1.0.26")]
		public bool vg_activate_all (bool activate) throws GLib.Error;
		[Version (since = "1.19.26")]
		public bool vgchange_uuid (string vg) throws GLib.Error;
		[Version (since = "1.19.26")]
		public bool vgchange_uuid_all () throws GLib.Error;
		[Version (since = "0.8")]
		public bool vgcreate (string volgroup, [CCode (array_length = false, array_null_terminated = true)] string[] physvols) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.87")]
		public string[] vglvuuids (string vgname) throws GLib.Error;
		[CCode (array_length_pos = 1.1, array_length_type = "gsize")]
		[Version (since = "1.17.20")]
		public uint8[] vgmeta (string vgname) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.0.87")]
		public string[] vgpvuuids (string vgname) throws GLib.Error;
		[Version (since = "1.0.13")]
		public bool vgremove (string vgname) throws GLib.Error;
		[Version (since = "1.0.83")]
		public bool vgrename (string volgroup, string newvolgroup) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public string[] vgs () throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "0.4")]
		public Guestfs.VG[] vgs_full () throws GLib.Error;
		[Version (deprecated = true, since = "1.3.2")]
		public bool vgscan () throws GLib.Error;
		[Version (since = "1.0.87")]
		public string vguuid (string vgname) throws GLib.Error;
		[Version (deprecated = true, since = "0.3")]
		public bool wait_ready () throws GLib.Error;
		[Version (since = "1.0.54")]
		public int32 wc_c (string path) throws GLib.Error;
		[Version (since = "1.0.54")]
		public int32 wc_l (string path) throws GLib.Error;
		[Version (since = "1.0.54")]
		public int32 wc_w (string path) throws GLib.Error;
		[Version (since = "1.17.6")]
		public bool wipefs (string device) throws GLib.Error;
		[Version (since = "1.3.14")]
		public bool write (string path, [CCode (array_length_cname = "content_size", array_length_pos = 2.1, array_length_type = "gsize")] uint8[] content) throws GLib.Error;
		[Version (since = "1.11.18")]
		public bool write_append (string path, [CCode (array_length_cname = "content_size", array_length_pos = 2.1, array_length_type = "gsize")] uint8[] content) throws GLib.Error;
		[Version (deprecated = true, since = "0.8")]
		public bool write_file (string path, string content, int32 size) throws GLib.Error;
		[Version (since = "1.19.33")]
		public bool xfs_admin (string device, Guestfs.XfsAdmin? optargs) throws GLib.Error;
		[Version (since = "1.19.28")]
		public bool xfs_growfs (string path, Guestfs.XfsGrowfs? optargs) throws GLib.Error;
		[Version (since = "1.19.21")]
		public Guestfs.XFSInfo xfs_info (string pathordevice) throws GLib.Error;
		[Version (since = "1.19.36")]
		public int32 xfs_repair (string device, Guestfs.XfsRepair? optargs) throws GLib.Error;
		[Version (since = "1.37.13")]
		public bool yara_destroy () throws GLib.Error;
		[Version (since = "1.37.13")]
		public bool yara_load (string filename, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (since = "1.37.13")]
		public Guestfs.YaraDetection[] yara_scan (string path, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] zegrep (string regex, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] zegrepi (string regex, string path) throws GLib.Error;
		[Version (since = "1.0.16")]
		public bool zero (string device) throws GLib.Error;
		[Version (since = "1.3.1")]
		public bool zero_device (string device) throws GLib.Error;
		[Version (since = "1.17.18")]
		public bool zero_free_space (string directory) throws GLib.Error;
		[Version (since = "1.0.26")]
		public bool zerofree (string device) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] zfgrep (string pattern, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] zfgrepi (string pattern, string path) throws GLib.Error;
		[Version (deprecated = true, since = "1.0.59")]
		public string zfile (string meth, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] zgrep (string regex, string path) throws GLib.Error;
		[CCode (array_length = false, array_null_terminated = true)]
		[Version (deprecated = true, since = "1.0.66")]
		public string[] zgrepi (string regex, string path) throws GLib.Error;
		public signal void appliance (Guestfs.SessionEventParams @params);
		[HasEmitter]
		public signal void close (Guestfs.SessionEventParams @params);
		public signal void enter (Guestfs.SessionEventParams @params);
		public signal void launch_done (Guestfs.SessionEventParams object);
		public signal void library (Guestfs.SessionEventParams @params);
		public signal void libvirt_auth (Guestfs.SessionEventParams object);
		public signal void progress (Guestfs.SessionEventParams @params);
		public signal void subprocess_quit (Guestfs.SessionEventParams object);
		public signal void trace (Guestfs.SessionEventParams @params);
		public signal void warning (Guestfs.SessionEventParams @params);
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_session_event_params_get_type ()")]
	[Compact]
	public class SessionEventParams {
		[CCode (array_length = false)]
		public weak uint64 array[16];
		public size_t array_len;
		public weak GLib.ByteArray buf;
		public Guestfs.SessionEvent event;
		public uint flags;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_set_e2attrs_get_type ()")]
	public class SetE2attrs : GLib.Object {
		[CCode (has_construct_function = false)]
		public SetE2attrs ();
		[NoAccessorMethod]
		public Guestfs.Tristate clear { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_stat_get_type ()")]
	[Compact]
	public class Stat {
		public int64 atime;
		public int64 blksize;
		public int64 blocks;
		public int64 ctime;
		public int64 dev;
		public int64 gid;
		public int64 ino;
		public int64 mode;
		public int64 mtime;
		public int64 nlink;
		public int64 rdev;
		public int64 size;
		public int64 uid;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "statns", type_id = "guestfs_statns_get_type ()")]
	[Compact]
	public class StatNS {
		public int64 st_atime_nsec;
		public int64 st_atime_sec;
		public int64 st_blksize;
		public int64 st_blocks;
		public int64 st_ctime_nsec;
		public int64 st_ctime_sec;
		public int64 st_dev;
		public int64 st_gid;
		public int64 st_ino;
		public int64 st_mode;
		public int64 st_mtime_nsec;
		public int64 st_mtime_sec;
		public int64 st_nlink;
		public int64 st_rdev;
		public int64 st_size;
		public int64 st_spare1;
		public int64 st_spare2;
		public int64 st_spare3;
		public int64 st_spare4;
		public int64 st_spare5;
		public int64 st_spare6;
		public int64 st_uid;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "statvfs", type_id = "guestfs_statvfs_get_type ()")]
	[Compact]
	public class StatVFS {
		public int64 bavail;
		public int64 bfree;
		public int64 blocks;
		public int64 bsize;
		public int64 favail;
		public int64 ffree;
		public int64 files;
		public int64 flag;
		public int64 frsize;
		public int64 fsid;
		public int64 namemax;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_syslinux_get_type ()")]
	public class Syslinux : GLib.Object {
		[CCode (has_construct_function = false)]
		public Syslinux ();
		[NoAccessorMethod]
		public string directory { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_tsk_dirent_get_type ()")]
	[Compact]
	public class TSKDirent {
		public int64 tsk_atime_nsec;
		public int64 tsk_atime_sec;
		public int64 tsk_crtime_nsec;
		public int64 tsk_crtime_sec;
		public int64 tsk_ctime_nsec;
		public int64 tsk_ctime_sec;
		public uint32 tsk_flags;
		public uint64 tsk_inode;
		public weak string tsk_link;
		public int64 tsk_mtime_nsec;
		public int64 tsk_mtime_sec;
		public weak string tsk_name;
		public int64 tsk_nlink;
		public int64 tsk_size;
		public int64 tsk_spare1;
		public char tsk_type;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_tar_in_get_type ()")]
	public class TarIn : GLib.Object {
		[CCode (has_construct_function = false)]
		public TarIn ();
		[NoAccessorMethod]
		public Guestfs.Tristate acls { get; set construct; }
		[NoAccessorMethod]
		public string compress { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate selinux { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate xattrs { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_tar_out_get_type ()")]
	public class TarOut : GLib.Object {
		[CCode (has_construct_function = false)]
		public TarOut ();
		[NoAccessorMethod]
		public Guestfs.Tristate acls { get; set construct; }
		[NoAccessorMethod]
		public string compress { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate numericowner { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate selinux { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate xattrs { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", lower_case_csuffix = "tune2fs", type_id = "guestfs_tune2fs_get_type ()")]
	public class Tune2FS : GLib.Object {
		[CCode (has_construct_function = false)]
		public Tune2FS ();
		[NoAccessorMethod]
		public string errorbehavior { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate force { get; set construct; }
		[NoAccessorMethod]
		public int64 group { get; set construct; }
		[NoAccessorMethod]
		public int intervalbetweenchecks { get; set construct; }
		[NoAccessorMethod]
		public string lastmounteddirectory { owned get; set construct; }
		[NoAccessorMethod]
		public int maxmountcount { get; set construct; }
		[NoAccessorMethod]
		public int mountcount { get; set construct; }
		[NoAccessorMethod]
		public int64 reservedblockscount { get; set construct; }
		[NoAccessorMethod]
		public int reservedblockspercentage { get; set construct; }
		[NoAccessorMethod]
		public int64 user { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "utsname", type_id = "guestfs_utsname_get_type ()")]
	[Compact]
	public class UTSName {
		public weak string uts_machine;
		public weak string uts_release;
		public weak string uts_sysname;
		public weak string uts_version;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_umount_get_type ()")]
	public class Umount : GLib.Object {
		[CCode (has_construct_function = false)]
		public Umount ();
		[NoAccessorMethod]
		public Guestfs.Tristate force { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate lazyunmount { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_umount_local_get_type ()")]
	public class UmountLocal : GLib.Object {
		[CCode (has_construct_function = false)]
		public UmountLocal ();
		[NoAccessorMethod]
		public Guestfs.Tristate retry { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "lvm_vg", type_id = "guestfs_lvm_vg_get_type ()")]
	[Compact]
	public class VG {
		public int64 lv_count;
		public int64 max_lv;
		public int64 max_pv;
		public int64 pv_count;
		public int64 snap_count;
		public weak string vg_attr;
		public int64 vg_extent_count;
		public uint64 vg_extent_size;
		public weak string vg_fmt;
		public uint64 vg_free;
		public int64 vg_free_count;
		public int64 vg_mda_count;
		public uint64 vg_mda_free;
		public weak string vg_name;
		public int64 vg_seqno;
		public uint64 vg_size;
		public weak string vg_sysid;
		public weak string vg_tags;
		[CCode (array_length = false)]
		public weak char vg_uuid[32];
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_version_get_type ()")]
	[Compact]
	public class Version {
		public weak string extra;
		public int64 major;
		public int64 minor;
		public int64 release;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_xattr_get_type ()")]
	[Compact]
	public class XAttr {
		public weak string attrname;
		public weak GLib.ByteArray attrval;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", lower_case_csuffix = "xfsinfo", type_id = "guestfs_xfsinfo_get_type ()")]
	[Compact]
	public class XFSInfo {
		public uint32 xfs_agcount;
		public uint32 xfs_agsize;
		public uint32 xfs_attr;
		public uint32 xfs_blocksize;
		public uint32 xfs_cimode;
		public uint64 xfs_datablocks;
		public uint32 xfs_dirblocksize;
		public uint32 xfs_dirversion;
		public uint32 xfs_imaxpct;
		public uint32 xfs_inodesize;
		public uint32 xfs_lazycount;
		public uint32 xfs_logblocks;
		public uint32 xfs_logblocksize;
		public weak string xfs_logname;
		public uint32 xfs_logsectsize;
		public uint32 xfs_logsunit;
		public uint32 xfs_logversion;
		public weak string xfs_mntpoint;
		public uint64 xfs_rtblocks;
		public uint64 xfs_rtextents;
		public uint32 xfs_rtextsize;
		public weak string xfs_rtname;
		public uint32 xfs_sectsize;
		public uint32 xfs_sunit;
		public uint32 xfs_swidth;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_xfs_admin_get_type ()")]
	public class XfsAdmin : GLib.Object {
		[CCode (has_construct_function = false)]
		public XfsAdmin ();
		[NoAccessorMethod]
		public Guestfs.Tristate extunwritten { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate imgfile { get; set construct; }
		[NoAccessorMethod]
		public string label { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate lazycounter { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate projid32bit { get; set construct; }
		[NoAccessorMethod]
		public string uuid { owned get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate v2log { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_xfs_growfs_get_type ()")]
	public class XfsGrowfs : GLib.Object {
		[CCode (has_construct_function = false)]
		public XfsGrowfs ();
		[NoAccessorMethod]
		public Guestfs.Tristate datasec { get; set construct; }
		[NoAccessorMethod]
		public int64 datasize { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate logsec { get; set construct; }
		[NoAccessorMethod]
		public int64 logsize { get; set construct; }
		[NoAccessorMethod]
		public int maxpct { get; set construct; }
		[NoAccessorMethod]
		public int64 rtextsize { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate rtsec { get; set construct; }
		[NoAccessorMethod]
		public int64 rtsize { get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", type_id = "guestfs_xfs_repair_get_type ()")]
	public class XfsRepair : GLib.Object {
		[CCode (has_construct_function = false)]
		public XfsRepair ();
		[NoAccessorMethod]
		public int64 agstride { get; set construct; }
		[NoAccessorMethod]
		public int64 bhashsize { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate forcegeometry { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate forcelogzero { get; set construct; }
		[NoAccessorMethod]
		public int64 ihashsize { get; set construct; }
		[NoAccessorMethod]
		public string logdev { owned get; set construct; }
		[NoAccessorMethod]
		public int64 maxmem { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate nomodify { get; set construct; }
		[NoAccessorMethod]
		public Guestfs.Tristate noprefetch { get; set construct; }
		[NoAccessorMethod]
		public string rtdev { owned get; set construct; }
	}
	[CCode (cheader_filename = "guestfs-gobject.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "guestfs_yara_detection_get_type ()")]
	[Compact]
	public class YaraDetection {
		public weak string yara_name;
		public weak string yara_rule;
	}
	[CCode (cheader_filename = "guestfs-gobject.h", cprefix = "GUESTFS_SESSION_EVENT_", type_id = "guestfs_session_event_get_type ()")]
	public enum SessionEvent {
		CLOSE,
		SUBPROCESS_QUIT,
		LAUNCH_DONE,
		PROGRESS,
		APPLIANCE,
		LIBRARY,
		TRACE,
		ENTER,
		LIBVIRT_AUTH,
		WARNING
	}
	[CCode (cheader_filename = "guestfs-gobject.h", cprefix = "GUESTFS_TRISTATE_", type_id = "guestfs_tristate_get_type ()")]
	public enum Tristate {
		FALSE,
		TRUE,
		NONE
	}
}
